"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styles = require("@material-ui/core/styles");

var _core = require("@material-ui/core");

var _icons = require("@material-ui/icons");

var _ = require("../..");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    listItemAvatar: {
      marginRight: '16px',
      marginTop: '20px'
    },
    avatar: {
      borderRadius: '20%'
    },
    root: {
      borderRadius: theme.shape.borderRadius,
      marginLeft: 0,
      width: '100%'
    },
    form: {
      width: '100%'
    },
    input: {
      width: '40%',
      display: 'inline-block',
      marginRight: '1em'
    }
  };
});

function RepositoryQuickCreate() {
  var classes = useStyles();

  var _useState = (0, _react.useState)(),
      _useState2 = _slicedToArray(_useState, 2),
      repo = _useState2[0],
      setRepo = _useState2[1];

  var _useContext = (0, _react.useContext)(_.AuthenticationContext),
      authentication = _useContext.state;

  var _useContext2 = (0, _react.useContext)(_.RepositoryContext),
      create = _useContext2.actions.create;

  var _authentication$user = authentication.user,
      username = _authentication$user.username,
      avatar_url = _authentication$user.avatar_url;
  var handleCreate = (0, _react.useCallback)(function () {
    create({
      name: repo
    });
  }, [repo, create]);
  return /*#__PURE__*/_react.default.createElement(_core.ListItem, {
    alignItems: "flex-start",
    ContainerComponent: "div",
    className: classes.root
  }, /*#__PURE__*/_react.default.createElement(_core.ListItemAvatar, {
    className: classes.listItemAvatar
  }, /*#__PURE__*/_react.default.createElement(_core.Avatar, {
    alt: username,
    src: avatar_url,
    className: classes.avatar
  })), /*#__PURE__*/_react.default.createElement("form", {
    className: classes.form
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.input
  }, /*#__PURE__*/_react.default.createElement(_core.TextField, {
    id: "owner",
    label: "Owner",
    type: "text",
    disabled: true,
    variant: "outlined",
    margin: "normal",
    fullWidth: true,
    defaultValue: username
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.input
  }, /*#__PURE__*/_react.default.createElement(_core.TextField, {
    id: "repo",
    label: "Repository",
    type: "text",
    required: true,
    variant: "outlined",
    margin: "normal",
    fullWidth: true,
    defaultValue: "",
    autoComplete: undefined,
    onChange: function onChange(event) {
      setRepo(event.target.value);
    }
  }))), /*#__PURE__*/_react.default.createElement(_core.ListItemSecondaryAction, null, /*#__PURE__*/_react.default.createElement(_core.IconButton, {
    "aria-label": "Add Repo",
    onClick: handleCreate
  }, /*#__PURE__*/_react.default.createElement(_icons.AddCircle, null))));
}

RepositoryQuickCreate.propTypes = {};
var _default = RepositoryQuickCreate;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3JlcG9zaXRvcnkvY3J1ZC9SZXBvc2l0b3J5UXVpY2tDcmVhdGUuanMiXSwibmFtZXMiOlsidXNlU3R5bGVzIiwidGhlbWUiLCJsaXN0SXRlbUF2YXRhciIsIm1hcmdpblJpZ2h0IiwibWFyZ2luVG9wIiwiYXZhdGFyIiwiYm9yZGVyUmFkaXVzIiwicm9vdCIsInNoYXBlIiwibWFyZ2luTGVmdCIsIndpZHRoIiwiZm9ybSIsImlucHV0IiwiZGlzcGxheSIsIlJlcG9zaXRvcnlRdWlja0NyZWF0ZSIsImNsYXNzZXMiLCJyZXBvIiwic2V0UmVwbyIsIkF1dGhlbnRpY2F0aW9uQ29udGV4dCIsImF1dGhlbnRpY2F0aW9uIiwic3RhdGUiLCJSZXBvc2l0b3J5Q29udGV4dCIsImNyZWF0ZSIsImFjdGlvbnMiLCJ1c2VyIiwidXNlcm5hbWUiLCJhdmF0YXJfdXJsIiwiaGFuZGxlQ3JlYXRlIiwibmFtZSIsInVuZGVmaW5lZCIsImV2ZW50IiwidGFyZ2V0IiwidmFsdWUiLCJwcm9wVHlwZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUdBOztBQUNBOztBQVFBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxTQUFTLEdBQUcsd0JBQVcsVUFBQUMsS0FBSztBQUFBLFNBQUs7QUFDckNDLElBQUFBLGNBQWMsRUFBRTtBQUNkQyxNQUFBQSxXQUFXLEVBQUUsTUFEQztBQUVkQyxNQUFBQSxTQUFTLEVBQUU7QUFGRyxLQURxQjtBQUtyQ0MsSUFBQUEsTUFBTSxFQUFFO0FBQ05DLE1BQUFBLFlBQVksRUFBRTtBQURSLEtBTDZCO0FBUXJDQyxJQUFBQSxJQUFJLEVBQUU7QUFDSkQsTUFBQUEsWUFBWSxFQUFFTCxLQUFLLENBQUNPLEtBQU4sQ0FBWUYsWUFEdEI7QUFFSkcsTUFBQUEsVUFBVSxFQUFFLENBRlI7QUFHSkMsTUFBQUEsS0FBSyxFQUFFO0FBSEgsS0FSK0I7QUFhckNDLElBQUFBLElBQUks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QixDQUFDbUIsU0FBdEIsR0FBa0MsRUFBbEM7ZUFFZW5CLHFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7XHJcbiAgdXNlU3RhdGUsIHVzZUNhbGxiYWNrLCB1c2VDb250ZXh0LFxyXG59IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gJ0BtYXRlcmlhbC11aS9jb3JlL3N0eWxlcyc7XHJcbmltcG9ydCB7XHJcbiAgQXZhdGFyLFxyXG4gIExpc3RJdGVtLFxyXG4gIExpc3RJdGVtQXZhdGFyLFxyXG4gIExpc3RJdGVtU2Vjb25kYXJ5QWN0aW9uLFxyXG4gIEljb25CdXR0b24sXHJcbiAgVGV4dEZpZWxkLFxyXG59IGZyb20gJ0BtYXRlcmlhbC11aS9jb3JlJztcclxuaW1wb3J0IHsgQWRkQ2lyY2xlIH0gZnJvbSAnQG1hdGVyaWFsLXVpL2ljb25zJztcclxuXHJcbmltcG9ydCB7IFJlcG9zaXRvcnlDb250ZXh0LCBBdXRoZW50aWNhdGlvbkNvbnRleHQgfSBmcm9tICcuLi8uLic7XHJcblxyXG5jb25zdCB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKHRoZW1lID0+ICh7XHJcbiAgbGlzdEl0ZW1BdmF0YXI6IHtcclxuICAgIG1hcmdpblJpZ2h0OiAnMTZweCcsXHJcbiAgICBtYXJnaW5Ub3A6ICcyMHB4JyxcclxuICB9LFxyXG4gIGF2YXRhcjoge1xyXG4gICAgYm9yZGVyUmFkaXVzOiAnMjAlJyxcclxuICB9LFxyXG4gIHJvb3Q6IHtcclxuICAgIGJvcmRlclJhZGl1czogdGhlbWUuc2hhcGUuYm9yZGVyUmFkaXVzLFxyXG4gICAgbWFyZ2luTGVmdDogMCxcclxuICAgIHdpZHRoOiAnMTAwJScsXHJcbiAgfSxcclxuICBmb3JtOiB7XHJcbiAgICB3aWR0aDogJzEwMCUnLFxyXG4gIH0sXHJcbiAgaW5wdXQ6IHtcclxuICAgIHdpZHRoOiAnNDAlJyxcclxuICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxyXG4gICAgbWFyZ2luUmlnaHQ6ICcxZW0nLFxyXG4gIH1cclxufSkpO1xyXG5cclxuZnVuY3Rpb24gUmVwb3NpdG9yeVF1aWNrQ3JlYXRlKCkge1xyXG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoKTtcclxuICBjb25zdCBbcmVwbywgc2V0UmVwb10gPSB1c2VTdGF0ZSgpO1xyXG4gIGNvbnN0IHsgc3RhdGU6IGF1dGhlbnRpY2F0aW9uIH0gPSB1c2VDb250ZXh0KEF1dGhlbnRpY2F0aW9uQ29udGV4dCk7XHJcbiAgY29uc3QgeyBhY3Rpb25zOiB7IGNyZWF0ZSB9IH0gPSB1c2VDb250ZXh0KFJlcG9zaXRvcnlDb250ZXh0KTtcclxuXHJcbiAgY29uc3QgeyB1c2VyOiB7IHVzZXJuYW1lLCBhdmF0YXJfdXJsIH0gfSA9IGF1dGhlbnRpY2F0aW9uO1xyXG5cclxuICBjb25zdCBoYW5kbGVDcmVhdGUgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICBjcmVhdGUoeyBuYW1lOiByZXBvIH0pO1xyXG4gIH0sIFtyZXBvLCBjcmVhdGVdKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxMaXN0SXRlbVxyXG4gICAgICBhbGlnbkl0ZW1zPVwiZmxleC1zdGFydFwiXHJcbiAgICAgIENvbnRhaW5lckNvbXBvbmVudD1cImRpdlwiXHJcbiAgICAgIGNsYXNzTmFtZT17Y2xhc3Nlcy5yb290fVxyXG4gICAgPlxyXG4gICAgICA8TGlzdEl0ZW1BdmF0YXIgY2xhc3NOYW1lPXtjbGFzc2VzLmxpc3RJdGVtQXZhdGFyfT5cclxuICAgICAgICA8QXZhdGFyXHJcbiAgICAgICAgICBhbHQ9e3VzZXJuYW1lfVxyXG4gICAgICAgICAgc3JjPXthdmF0YXJfdXJsfVxyXG4gICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc2VzLmF2YXRhcn1cclxuICAgICAgICAvPlxyXG4gICAgICA8L0xpc3RJdGVtQXZhdGFyPlxyXG4gICAgICA8Zm9ybSBjbGFzc05hbWU9e2NsYXNzZXMuZm9ybX0+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzZXMuaW5wdXR9PlxyXG4gICAgICAgICAgPFRleHRGaWVsZFxyXG4gICAgICAgICAgICBpZD0nb3duZXInIGxhYmVsPSdPd25lcicgdHlwZT0ndGV4dCcgZGlzYWJsZWRcclxuICAgICAgICAgICAgdmFyaWFudD1cIm91dGxpbmVkXCIgbWFyZ2luPVwibm9ybWFsXCIgZnVsbFdpZHRoXHJcbiAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17dXNlcm5hbWV9XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc2VzLmlucHV0fT5cclxuICAgICAgICAgIDxUZXh0RmllbGRcclxuICAgICAgICAgICAgaWQ9J3JlcG8nIGxhYmVsPSdSZXBvc2l0b3J5JyB0eXBlPSd0ZXh0JyByZXF1aXJlZFxyXG4gICAgICAgICAgICB2YXJpYW50PVwib3V0bGluZWRcIiBtYXJnaW49XCJub3JtYWxcIiBmdWxsV2lkdGhcclxuICAgICAgICAgICAgZGVmYXVsdFZhbHVlPVwiXCIgYXV0b0NvbXBsZXRlPXt1bmRlZmluZWR9XHJcbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgICBzZXRSZXBvKGV2ZW50LnRhcmdldC52YWx1ZSk7XHJcbiAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Zvcm0+XHJcbiAgICAgIDxMaXN0SXRlbVNlY29uZGFyeUFjdGlvbj5cclxuICAgICAgICA8SWNvbkJ1dHRvblxyXG4gICAgICAgICAgYXJpYS1sYWJlbD1cIkFkZCBSZXBvXCJcclxuICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUNyZWF0ZX1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8QWRkQ2lyY2xlIC8+XHJcbiAgICAgICAgPC9JY29uQnV0dG9uPlxyXG4gICAgICA8L0xpc3RJdGVtU2Vjb25kYXJ5QWN0aW9uPlxyXG4gICAgPC9MaXN0SXRlbT5cclxuICApO1xyXG59XHJcblxyXG5SZXBvc2l0b3J5UXVpY2tDcmVhdGUucHJvcFR5cGVzID0ge307XHJcblxyXG5leHBvcnQgZGVmYXVsdCBSZXBvc2l0b3J5UXVpY2tDcmVhdGU7XHJcbiJdfQ==