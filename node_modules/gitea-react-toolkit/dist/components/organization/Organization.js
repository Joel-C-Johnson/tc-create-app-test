"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _useDeepCompareEffect = _interopRequireDefault(require("use-deep-compare-effect"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _core = require("@material-ui/core");

var _path = _interopRequireDefault(require("path"));

var _ = require("..");

var _icons = require("@material-ui/icons");

var _core2 = require("../../core");

var _localStrings = require("../../core/localStrings");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    avatar: {
      borderRadius: '20%'
    },
    errorMessage: {
      color: _core.colors.red[500]
    }
  };
});

function Organization(_ref) {
  var _ref$url = _ref.url,
      url = _ref$url === void 0 ? '' : _ref$url,
      _ref$config = _ref.config,
      config = _ref$config === void 0 ? {} : _ref$config,
      organization = _ref.organization,
      _ref$onOrganization = _ref.onOrganization,
      onOrganization = _ref$onOrganization === void 0 ? function () {} : _ref$onOrganization,
      selected = _ref.selected,
      _ref$messages = _ref.messages;
  _ref$messages = _ref$messages === void 0 ? {} : _ref$messages;
  var _ref$messages$primary = _ref$messages.primaryLoading,
      primaryLoading = _ref$messages$primary === void 0 ? 'Loading…' : _ref$messages$primary,
      _ref$messages$seconda = _ref$messages.secondaryLoading,
      secondaryLoading = _ref$messages$seconda === void 0 ? 'Attempting to load organization details…' : _ref$messages$seconda,
      _ref$messages$primary2 = _ref$messages.primaryError,
      primaryError = _ref$messages$primary2 === void 0 ? 'No organization' : _ref$messages$primary2,
      _ref$messages$seconda2 = _ref$messages.secondaryError,
      secondaryError = _ref$messages$seconda2 === void 0 ? 'Please provide a valid organization object or url.' : _ref$messages$seconda2;
  var classes = useStyles();

  var _useState = (0, _react.useState)(organization),
      _useState2 = _slicedToArray(_useState, 2),
      org = _useState2[0],
      setOrg = _useState2[1];

  var _useState3 = (0, _react.useState)(true),
      _useState4 = _slicedToArray(_useState3, 2),
      loading = _useState4[0],
      setLoading = _useState4[1];

  var _ref2 = (0, _react.useContext)(_.AuthenticationContext) || {},
      contextAuthentication = _ref2.state;

  var getData = (0, _react.useCallback)( /*#__PURE__*/function () {
    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref3) {
      var _config, _url, data;

      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _config = _ref3.config, _url = _ref3.url;
              _context.next = 3;
              return (0, _core2.get)({
                config: _config,
                url: _url
              });

            case 3:
              data = _context.sent;
              setOrg(data);

            case 5:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref4.apply(this, arguments);
    };
  }(), []);
  (0, _useDeepCompareEffect.default)(function () {
    if (url) {
      setLoading(true);
      getData({
        config: config,
        url: url
      });
    } else if (organization) {
      setOrg(organization);
    }

    setLoading(false);
  }, [url, organization, config, getData]);

  var _onOrganization = (0, _react.useCallback)( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
    var user, hasWritePermissions;
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            if (!(org === undefined)) {
              _context2.next = 3;
              break;
            }

            onOrganization(org);
            return _context2.abrupt("return");

          case 3:
            // first get the user (if logged in)
            // if not logged in, go ahead and set the org
            user = contextAuthentication.user.login;

            if (user) {
              _context2.next = 7;
              break;
            }

            onOrganization(org);
            return _context2.abrupt("return");

          case 7:
            _context2.next = 9;
            return (0, _core2.isSelectedOrgWritable)({
              org: org,
              user: user,
              config: config
            });

          case 9:
            hasWritePermissions = _context2.sent;

            if (!hasWritePermissions) {
              alert("Your door43 user account doesn't have permission to edit the " + "files in the organization you have chosen.\n" + "Please contact your organization administrator and request write permissions.");
            } else {
              onOrganization(org);
            }

          case 11:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  })), [org, onOrganization]);

  var _ref6 = org || {},
      avatar_url = _ref6.avatar_url,
      description = _ref6.description,
      full_name = _ref6.full_name,
      username = _ref6.username;

  var primary = full_name || username || loading && primaryLoading || !org && primaryError;
  var secondary = description || loading && secondaryLoading || !org && secondaryError;
  var orgUrl = "https://git.door43.org/".concat(username);
  return /*#__PURE__*/_react.default.createElement(_core.ListItem, {
    selected: selected,
    "data-test": "organization-item",
    alignItems: "flex-start",
    button: true,
    ContainerComponent: "div",
    onClick: _onOrganization
  }, /*#__PURE__*/_react.default.createElement(_core.ListItemAvatar, null, /*#__PURE__*/_react.default.createElement(_core.Avatar, {
    alt: full_name || username,
    src: avatar_url,
    className: classes.avatar
  })), /*#__PURE__*/_react.default.createElement(_core.ListItemText, {
    primary: primary,
    secondary: secondary,
    classes: {
      secondary: full_name == null && username == null && loading !== true ? classes.errorMessage : null
    }
  }), org && /*#__PURE__*/_react.default.createElement(_core.ListItemSecondaryAction, null, /*#__PURE__*/_react.default.createElement(_core.Tooltip, {
    title: (0, _localStrings.localString)('OpenOrg'),
    arrow: true
  }, /*#__PURE__*/_react.default.createElement(_core.IconButton, {
    "aria-label": "Open Link",
    onClick: function onClick() {
      window.open(orgUrl, '_blank');
    }
  }, /*#__PURE__*/_react.default.createElement(_icons.Code, null)))));
}

Organization.propTypes = {
  /** Organization data to render, if url not provided. */
  organization: _propTypes.default.shape({
    avatar_url: _propTypes.default.string.isRequired,
    description: _propTypes.default.string.isRequired,
    full_name: _propTypes.default.string.isRequired,
    id: _propTypes.default.number.isRequired,
    location: _propTypes.default.string.isRequired,
    username: _propTypes.default.string.isRequired,
    visibility: _propTypes.default.string.isRequired,
    website: _propTypes.default.string.isRequired
  }),

  /** Function to call when organization is selected. */
  onOrganization: _propTypes.default.func.isRequired,

  /** Url to get organization data, if organization data is not provided. */
  url: _propTypes.default.string,

  /** Configuration required if paths are provided as URL. */
  config: _propTypes.default.shape({
    server: _propTypes.default.string.isRequired
  }),

  /** The selected organization */
  selected: _propTypes.default.bool,
  messages: _propTypes.default.shape({
    primaryError: _propTypes.default.string,
    secondaryError: _propTypes.default.string,
    primaryLoading: _propTypes.default.string,
    secondaryLoading: _propTypes.default.string
  })
};
var _default = Organization;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,