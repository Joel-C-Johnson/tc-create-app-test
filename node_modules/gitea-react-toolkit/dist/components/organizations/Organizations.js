"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _core = require("@material-ui/core");

var _ = require("../");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Organizations(_ref) {
  var url = _ref.url,
      _ref$organization = _ref.organization,
      organization = _ref$organization === void 0 ? {} : _ref$organization,
      urls = _ref.urls,
      organizations = _ref.organizations,
      onOrganization = _ref.onOrganization,
      config = _ref.config,
      _ref$messages = _ref.messages;
  _ref$messages = _ref$messages === void 0 ? {} : _ref$messages;
  var _ref$messages$primary = _ref$messages.primaryError,
      primaryError = _ref$messages$primary === void 0 ? 'No organizations' : _ref$messages$primary,
      _ref$messages$seconda = _ref$messages.secondaryError,
      secondaryError = _ref$messages$seconda === void 0 ? 'Please provide valid organization objects or urls.' : _ref$messages$seconda;
  var updateOrganization = (0, _react.useCallback)(function (repo) {
    onOrganization(repo);
  }, [onOrganization]);
  var components = [];

  if (organizations && organizations.length > 0) {
    components = organizations.map(function (_organization) {
      return /*#__PURE__*/_react.default.createElement(_.Organization, {
        key: _organization.id,
        selected: organization && _organization.id === organization.id,
        organization: _organization,
        onOrganization: updateOrganization,
        config: config
      });
    });
  } else if (urls && urls.length > 0) {
    components = urls.map(function (_url, index) {
      return /*#__PURE__*/_react.default.createElement(_.Organization, {
        selected: _url === url,
        key: index,
        url: _url,
        onOrganization: updateOrganization,
        config: config,
        messages: {
          primaryError: primaryError,
          secondaryError: secondaryError
        }
      });
    });
  } else {
    components = [/*#__PURE__*/_react.default.createElement(_.Organization, {
      key: 0,
      organization: organization,
      config: config,
      messages: {
        primaryError: primaryError,
        secondaryError: secondaryError
      }
    })];
  }

  return /*#__PURE__*/_react.default.createElement(_core.List, null, components);
}

Organizations.propTypes = {
  /** Url to get organization data, if organization data is not provided. */
  url: _propTypes.default.string,

  /** Urls array to get organization data, if organization data is not provided. */
  urls: _propTypes.default.array,

  /** Organizations data array to render, if urls not provided. */
  organizations: _propTypes.default.array,

  /** Function to call when organization is selected. */
  onOrganization: _propTypes.default.func.isRequired,

  /** Configuration required if paths are provided as URL. */
  config: _propTypes.default.shape({
    server: _propTypes.default.string.isRequired
  }),

  /** The currently selected organization */
  organization: _propTypes.default.shape({
    avatar_url: _propTypes.default.string.isRequired,
    description: _propTypes.default.string.isRequired,
    full_name: _propTypes.default.string.isRequired,
    id: _propTypes.default.number.isRequired,
    location: _propTypes.default.string.isRequired,
    username: _propTypes.default.string.isRequired,
    visibility: _propTypes.default.string.isRequired,
    website: _propTypes.default.string.isRequired
  }),
  messages: _propTypes.default.shape({
    primaryError: _propTypes.default.string,
    secondaryError: _propTypes.default.string
  })
};
var _default = Organizations;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL29yZ2FuaXphdGlvbnMvT3JnYW5pemF0aW9ucy5qcyJdLCJuYW1lcyI6WyJPcmdhbml6YXRpb25zIiwidXJsIiwib3JnYW5pemF0aW9uIiwidXJscyIsIm9yZ2FuaXphdGlvbnMiLCJvbk9yZ2FuaXphdGlvbiIsImNvbmZpZyIsIm1lc3NhZ2VzIiwicHJpbWFyeUVycm9yIiwic2Vjb25kYXJ5RXJyb3IiLCJ1cGRhdGVPcmdhbml6YXRpb24iLCJyZXBvIiwiY29tcG9uZW50cyIsImxlbmd0aCIsIm1hcCIsIl9vcmdhbml6YXRpb24iLCJpZCIsIl91cmwiLCJpbmRleCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsImFycmF5IiwiZnVuYyIsImlzUmVxdWlyZWQiLCJzaGFwZSIsInNlcnZlciIsImF2YXRhcl91cmwiLCJkZXNjcmlwdGlvbiIsImZ1bGxfbmFtZSIsIm51bWJlciIsImxvY2F0aW9uIiwidXNlcm5hbWUiLCJ2aXNpYmlsaXR5Iiwid2Vic2l0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBRUEsU0FBU0EsYUFBVCxPQVdHO0FBQUEsTUFWREMsR0FVQyxRQVZEQSxHQVVDO0FBQUEsK0JBVERDLFlBU0M7QUFBQSxNQVREQSxZQVNDLGtDQVRjLEVBU2Q7QUFBQSxNQVJEQyxJQVFDLFFBUkRBLElBUUM7QUFBQSxNQVBEQyxhQU9DLFFBUERBLGFBT0M7QUFBQSxNQU5EQyxjQU1DLFFBTkRBLGNBTUM7QUFBQSxNQUxEQyxNQUtDLFFBTERBLE1BS0M7QUFBQSwyQkFKREMsUUFJQztBQUFBLDZDQURHLEVBQ0g7QUFBQSw0Q0FIQ0MsWUFHRDtBQUFBLE1BSENBLFlBR0Qsc0NBSGdCLGtCQUdoQjtBQUFBLDRDQUZDQyxjQUVEO0FBQUEsTUFGQ0EsY0FFRCxzQ0FGa0Isb0RBRWxCO0FBQ0QsTUFBTUMsa0JBQWtCLEdBQUcsd0JBQ3pCLFVBQUNDLElB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TzVCUyxJQUFBQSxVQUFVLEVBQUViLG1CQUFVQyxNQUFWLENBQWlCRyxVQVBEO0FBUTVCVSxJQUFBQSxPQUFPLEVBQUVkLG1CQUFVQyxNQUFWLENBQWlCRztBQVJFLEdBQWhCLENBWlU7QUFzQnhCakIsRUFBQUEsUUFBUSxFQUFFYSxtQkFBVUssS0FBVixDQUFnQjtBQUN4QmpCLElBQUFBLFlBQVksRUFBRVksbUJBQVVDLE1BREE7QUFFeEJaLElBQUFBLGNBQWMsRUFBRVcsbUJBQVVDO0FBRkYsR0FBaEI7QUF0QmMsQ0FBMUI7ZUE0QmVyQixhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgeyBMaXN0IH0gZnJvbSAnQG1hdGVyaWFsLXVpL2NvcmUnO1xyXG5pbXBvcnQgeyBPcmdhbml6YXRpb24gfSBmcm9tICcuLi8nO1xyXG5cclxuZnVuY3Rpb24gT3JnYW5pemF0aW9ucyh7XHJcbiAgdXJsLFxyXG4gIG9yZ2FuaXphdGlvbiA9IHt9LFxyXG4gIHVybHMsXHJcbiAgb3JnYW5pemF0aW9ucyxcclxuICBvbk9yZ2FuaXphdGlvbixcclxuICBjb25maWcsXHJcbiAgbWVzc2FnZXM6IHtcclxuICAgIHByaW1hcnlFcnJvciA9ICdObyBvcmdhbml6YXRpb25zJyxcclxuICAgIHNlY29uZGFyeUVycm9yID0gJ1BsZWFzZSBwcm92aWRlIHZhbGlkIG9yZ2FuaXphdGlvbiBvYmplY3RzIG9yIHVybHMuJyxcclxuICB9ID0ge30sXHJcbn0pIHtcclxuICBjb25zdCB1cGRhdGVPcmdhbml6YXRpb24gPSB1c2VDYWxsYmFjayhcclxuICAgIChyZXBvKSA9PiB7XHJcbiAgICAgIG9uT3JnYW5pemF0aW9uKHJlcG8pO1xyXG4gICAgfSxcclxuICAgIFtvbk9yZ2FuaXphdGlvbl1cclxuICApO1xyXG5cclxuICBsZXQgY29tcG9uZW50cyA9IFtdO1xyXG5cclxuICBpZiAob3JnYW5pemF0aW9ucyAmJiBvcmdhbml6YXRpb25zLmxlbmd0aCA+IDApIHtcclxuICAgIGNvbXBvbmVudHMgPSBvcmdhbml6YXRpb25zLm1hcCgoX29yZ2FuaXphdGlvbikgPT4gKFxyXG4gICAgICA8T3JnYW5pemF0aW9uXHJcbiAgICAgICAga2V5PXtfb3JnYW5pemF0aW9uLmlkfVxyXG4gICAgICAgIHNlbGVjdGVkPXtvcmdhbml6YXRpb24gJiYgX29yZ2FuaXphdGlvbi5pZCA9PT0gb3JnYW5pemF0aW9uLmlkfVxyXG4gICAgICAgIG9yZ2FuaXphdGlvbj17X29yZ2FuaXphdGlvbn1cclxuICAgICAgICBvbk9yZ2FuaXphdGlvbj17dXBkYXRlT3JnYW5pemF0aW9ufVxyXG4gICAgICAgIGNvbmZpZz17Y29uZmlnfVxyXG4gICAgICAvPlxyXG4gICAgKSk7XHJcbiAgfSBlbHNlIGlmICh1cmxzICYmIHVybHMubGVuZ3RoID4gMCkge1xyXG4gICAgY29tcG9uZW50cyA9IHVybHMubWFwKChfdXJsLCBpbmRleCkgPT4gKFxyXG4gICAgICA8T3JnYW5pemF0aW9uXHJcbiAgICAgICAgc2VsZWN0ZWQ9e191cmwgPT09IHVybH1cclxuICAgICAgICBrZXk9e2luZGV4fVxyXG4gICAgICAgIHVybD17X3VybH1cclxuICAgICAgICBvbk9yZ2FuaXphdGlvbj17dXBkYXRlT3JnYW5pemF0aW9ufVxyXG4gICAgICAgIGNvbmZpZz17Y29uZmlnfVxyXG4gICAgICAgIG1lc3NhZ2VzPXt7IHByaW1hcnlFcnJvciwgc2Vjb25kYXJ5RXJyb3IgfX1cclxuICAgICAgLz5cclxuICAgICkpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBjb21wb25lbnRzID0gW1xyXG4gICAgICA8T3JnYW5pemF0aW9uXHJcbiAgICAgICAga2V5PXswfVxyXG4gICAgICAgIG9yZ2FuaXphdGlvbj17b3JnYW5pemF0aW9ufVxyXG4gICAgICAgIGNvbmZpZz17Y29uZmlnfVxyXG4gICAgICAgIG1lc3NhZ2VzPXt7IHByaW1hcnlFcnJvciwgc2Vjb25kYXJ5RXJyb3IgfX1cclxuICAgICAgLz4sXHJcbiAgICBdO1xyXG4gIH1cclxuICByZXR1cm4gPExpc3Q+e2NvbXBvbmVudHN9PC9MaXN0PjtcclxufVxyXG5cclxuT3JnYW5pemF0aW9ucy5wcm9wVHlwZXMgPSB7XHJcbiAgLyoqIFVybCB0byBnZXQgb3JnYW5pemF0aW9uIGRhdGEsIGlmIG9yZ2FuaXphdGlvbiBkYXRhIGlzIG5vdCBwcm92aWRlZC4gKi9cclxuICB1cmw6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgLyoqIFVybHMgYXJyYXkgdG8gZ2V0IG9yZ2FuaXphdGlvbiBkYXRhLCBpZiBvcmdhbml6YXRpb24gZGF0YSBpcyBub3QgcHJvdmlkZWQuICovXHJcbiAgdXJsczogUHJvcFR5cGVzLmFycmF5LFxyXG4gIC8qKiBPcmdhbml6YXRpb25zIGRhdGEgYXJyYXkgdG8gcmVuZGVyLCBpZiB1cmxzIG5vdCBwcm92aWRlZC4gKi9cclxuICBvcmdhbml6YXRpb25zOiBQcm9wVHlwZXMuYXJyYXksXHJcbiAgLyoqIEZ1bmN0aW9uIHRvIGNhbGwgd2hlbiBvcmdhbml6YXRpb24gaXMgc2VsZWN0ZWQuICovXHJcbiAgb25Pcmdhbml6YXRpb246IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXHJcbiAgLyoqIENvbmZpZ3VyYXRpb24gcmVxdWlyZWQgaWYgcGF0aHMgYXJlIHByb3ZpZGVkIGFzIFVSTC4gKi9cclxuICBjb25maWc6IFByb3BUeXBlcy5zaGFwZSh7IHNlcnZlcjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkIH0pLFxyXG4gIC8qKiBUaGUgY3VycmVudGx5IHNlbGVjdGVkIG9yZ2FuaXphdGlvbiAqL1xyXG4gIG9yZ2FuaXphdGlvbjogUHJvcFR5cGVzLnNoYXBlKHtcclxuICAgIGF2YXRhcl91cmw6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICAgIGRlc2NyaXB0aW9uOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXHJcbiAgICBmdWxsX25hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICAgIGlkOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXHJcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxyXG4gICAgdXNlcm5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICAgIHZpc2liaWxpdHk6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICAgIHdlYnNpdGU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICB9KSxcclxuICBtZXNzYWdlczogUHJvcFR5cGVzLnNoYXBlKHtcclxuICAgIHByaW1hcnlFcnJvcjogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIHNlY29uZGFyeUVycm9yOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIH0pLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgT3JnYW5pemF0aW9ucztcclxuIl19