"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Book = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _ = require("..");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function cov_2ejql2xr2n() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\book\\Book.js";
  var hash = "85106a866688686e79c2606ac776360243bd791e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\book\\Book.js",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 20
        },
        end: {
          line: 44,
          column: 1
        }
      },
      "1": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 16,
          column: 29
        }
      },
      "2": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 23,
          column: 6
        }
      },
      "3": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 35,
          column: 6
        }
      },
      "4": {
        start: {
          line: 38,
          column: 2
        },
        end: {
          line: 43,
          column: 4
        }
      },
      "5": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 62,
          column: 2
        }
      },
      "6": {
        start: {
          line: 64,
          column: 18
        },
        end: {
          line: 67,
          column: 3
        }
      },
      "7": {
        start: {
          line: 64,
          column: 36
        },
        end: {
          line: 67,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 64,
            column: 29
          },
          end: {
            line: 64,
            column: 30
          }
        },
        loc: {
          start: {
            line: 64,
            column: 36
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 64
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 39
          },
          end: {
            line: 39,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 39
          },
          end: {
            line: 39,
            column: 48
          }
        }, {
          start: {
            line: 39,
            column: 52
          },
          end: {
            line: 39,
            column: 58
          }
        }],
        line: 39
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "85106a866688686e79c2606ac776360243bd791e"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2ejql2xr2n = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2ejql2xr2n();
cov_2ejql2xr2n().s[0]++;

var Book = ({
  book: {
    headers,
    chapters
  },
  paragraphs,
  renderOffscreen,
  showUnsupported,
  direction,
  disableWordPopover,
  reference
}) => {
  cov_2ejql2xr2n().f[0]++;
  var classes = (cov_2ejql2xr2n().s[1]++, useStyles());
  var bookHeaders = (cov_2ejql2xr2n().s[2]++, _react.default.createElement(_.BookHeaders, {
    headers: headers,
    direction: direction,
    showUnsupported: showUnsupported
  }));

  var _chapters = (cov_2ejql2xr2n().s[3]++, _react.default.createElement(_.Chapters, {
    chapters: chapters,
    reference: reference,
    paragraphs: paragraphs,
    renderOffscreen: renderOffscreen,
    showUnsupported: showUnsupported,
    direction: direction,
    disableWordPopover: disableWordPopover
  }));

  cov_2ejql2xr2n().s[4]++;
  return _react.default.createElement("div", {
    className: classes.book,
    dir: (cov_2ejql2xr2n().b[0][0]++, direction) || (cov_2ejql2xr2n().b[0][1]++, 'auto')
  }, bookHeaders, _chapters);
};

exports.Book = Book;
cov_2ejql2xr2n().s[5]++;
Book.propTypes = {
  book: _propTypes.default.shape({
    headers: _propTypes.default.array.isRequired,
    chapters: _propTypes.default.object.isRequired
  }),

  /** render verses paragraphs, use explicit paragraphs */
  paragraphs: _propTypes.default.bool,

  /** bypass rendering only when visible */
  renderOffscreen: _propTypes.default.bool,

  /** render unsupported usfm markers */
  showUnsupported: _propTypes.default.bool,

  /** override text direction detection */
  direction: _propTypes.default.string,

  /** disable popovers for aligned and original language words */
  disableWordPopover: _propTypes.default.bool,
  reference: _propTypes.default.object
};
var useStyles = (cov_2ejql2xr2n().s[6]++, (0, _styles.makeStyles)(() => {
  cov_2ejql2xr2n().f[1]++;
  cov_2ejql2xr2n().s[7]++;
  return {
    book: {},
    bookName: {}
  };
}));
var _default = Book;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2Jvb2svQm9vay5qcyJdLCJuYW1lcyI6WyJCb29rIiwiYm9vayIsImhlYWRlcnMiLCJjaGFwdGVycyIsInBhcmFncmFwaHMiLCJyZW5kZXJPZmZzY3JlZW4iLCJzaG93VW5zdXBwb3J0ZWQiLCJkaXJlY3Rpb24iLCJkaXNhYmxlV29yZFBvcG92ZXIiLCJyZWZlcmVuY2UiLCJjbGFzc2VzIiwidXNlU3R5bGVzIiwiYm9va0hlYWRlcnMiLCJfY2hhcHRlcnMiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzaGFwZSIsImFycmF5IiwiaXNSZXF1aXJlZCIsIm9iamVjdCIsImJvb2wiLCJzdHJpbmciLCJib29rTmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFTyxJQUFNQSxJQUFJLEdBQUcsQ0FBQztBQUNuQkMsRUFBQUEsSUFBSSxFQUFFO0FBQUVDLElBQUFBLE9BQUY7QUFBV0MsSUFBQUE7QUFBWCxHQURhO0FBRW5CQyxFQUFBQSxVQUZtQjtBQUduQkMsRUFBQUEsZUFIbUI7QUFJbkJDLEVBQUFBLGVBSm1CO0FBS25CQyxFQUFBQSxTQUxtQjtBQU1uQkMsRUFBQUEsa0JBTm1CO0FBT25CQyxFQUFBQTtBQVBtQixDQUFELEtBUWQ7QUFBQTtBQUNKLE1BQU1DLE9BQU8sNkJBQUdDLFNBQVMsRUFBWixDQUFiO0FBRUEsTUFBTUMsV0FBVyw2QkFDZiw2QkFBQyxhQUFEO0FBQ0UsSUFBQSxPQUFPLEVBQUVWLE9BRFg7QUFFRSxJQUFBLFNBQVMsRUFBRUssU0FGYjtBQUdFLElBQUEsZUFBZSxFQUFFRDtBQUhuQixJQURlLENBQWpCOztBQVFBLE1BQU1PLFNBQVMsNkJBQ2IsNkJBQUMsVUFBRDtBQUNFLElBQUEsUUFBUSxFQUFFVixRQURaO0FBRUUsSUFBQSxTQUFTLEVBQUVNLFNBRmI7QUFHRSxJQUFBLFVBQVUsRUFBRUwsVUFIZDtBQUlFLElBQUEsZUFBZSxFQUFFQyxlQUpuQjtBQUtFLElBQUEsZUFBZSxFQUFFQyxlQUxuQjtBQU1FLElBQUEsU0FBUyxFQUFFQyxTQU5iO0FBT0UsSUFBQSxrQkFBa0IsRUFBRUM7QUFQdEIsSUFEYSxDQUFmOztBQVhJO0FBdUJKLFNBQ0U7QUFBSyxJQUFBLFNBQVMsRUFBRUUsT0FBTyxDQUFDVCxJQUF4QjtBQUE4QixJQUFBLEdBQUcsRUFBRSw2QkFBQU0sU0FBUyxrQ0FBSSxNQUFKO0FBQTVDLEtBQ0dLLFdBREgsRUFFR0MsU0FGSCxDQURGO0FBTUQsQ0FyQ007Ozs7QUF1Q1BiLElBQUksQ0FBQ2MsU0FBTCxHQUFpQjtBQUNmYixFQUFBQSxJQUFJLEVBQUVjLG1CQUFVQyxLQUFWLENBQWdCO0FBQ3BCZCxJQUFBQSxPQUFPLEVBQUVhLG1CQUFVRSxLQUFWLENBQWdCQyxVQURMO0FBRXBCZixJQUFBQSxRQUFRLEVBQUVZLG1CQUFVSSxNQUFWLENBQWlCRDtBQUZQLEdBQWhCLENBRFM7O0FBS2Y7QUFDQWQsRUFBQUEsVUFBVSxFQUFFVyxtQkFBVUssSUFOUDs7QUFPZjtBQUNBZixFQUFBQSxlQUFlLEVBQUVVLG1CQUFVSyxJQVJaOztBQVNmO0FBQ0FkLEVBQUFBLGVBQWUsRUFBRVMsbUJBQVVLLElBVlo7O0FBV2Y7QUFDQWIsRUFBQUEsU0FBUyxFQUFFUSxtQkFBVU0sTUFaTjs7QUFhZjtBQUNBYixFQUFBQSxrQkFBa0IsRUFBRU8sbUJBQVVLLElBZGY7QUFlZlgsRUFBQUEsU0FBUyxFQUFFTSxtQkFBVUk7QUFmTixDQUFqQjtBQWtCQSxJQUFNUixTQUFTLDZCQUFHLHdCQUFXLE1BQU87QUFBQTtBQUFBO0FBQUE7QUFDbENWLElBQUFBLElBQUksRUFBRSxFQUQ0QjtBQUVsQ3FCLElBQUFBLFFBQVEsRUFBRTtBQUZ3QjtBQUduQyxDQUhpQixDQUFILENBQWY7ZUFLZXRCLEkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgeyBtYWtlU3R5bGVzIH0gZnJvbSAnQG1hdGVyaWFsLXVpL2NvcmUvc3R5bGVzJztcclxuXHJcbmltcG9ydCB7IEJvb2tIZWFkZXJzLCBDaGFwdGVycyB9IGZyb20gJy4uJztcclxuXHJcbmV4cG9ydCBjb25zdCBCb29rID0gKHtcclxuICBib29rOiB7IGhlYWRlcnMsIGNoYXB0ZXJzIH0sXHJcbiAgcGFyYWdyYXBocyxcclxuICByZW5kZXJPZmZzY3JlZW4sXHJcbiAgc2hvd1Vuc3VwcG9ydGVkLFxyXG4gIGRpcmVjdGlvbixcclxuICBkaXNhYmxlV29yZFBvcG92ZXIsXHJcbiAgcmVmZXJlbmNlLFxyXG59KSA9PiB7XHJcbiAgY29uc3QgY2xhc3NlcyA9IHVzZVN0eWxlcygpO1xyXG5cclxuICBjb25zdCBib29rSGVhZGVycyA9IChcclxuICAgIDxCb29rSGVhZGVyc1xyXG4gICAgICBoZWFkZXJzPXtoZWFkZXJzfVxyXG4gICAgICBkaXJlY3Rpb249e2RpcmVjdGlvbn1cclxuICAgICAgc2hvd1Vuc3VwcG9ydGVkPXtzaG93VW5zdXBwb3J0ZWR9XHJcbiAgICAvPlxyXG4gICk7XHJcblxyXG4gIGNvbnN0IF9jaGFwdGVycyA9IChcclxuICAgIDxDaGFwdGVyc1xyXG4gICAgICBjaGFwdGVycz17Y2hhcHRlcnN9XHJcbiAgICAgIHJlZmVyZW5jZT17cmVmZXJlbmNlfVxyXG4gICAgICBwYXJhZ3JhcGhzPXtwYXJhZ3JhcGhzfVxyXG4gICAgICByZW5kZXJPZmZzY3JlZW49e3JlbmRlck9mZnNjcmVlbn1cclxuICAgICAgc2hvd1Vuc3VwcG9ydGVkPXtzaG93VW5zdXBwb3J0ZWR9XHJcbiAgICAgIGRpcmVjdGlvbj17ZGlyZWN0aW9ufVxyXG4gICAgICBkaXNhYmxlV29yZFBvcG92ZXI9e2Rpc2FibGVXb3JkUG9wb3Zlcn1cclxuICAgIC8+XHJcbiAgKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc2VzLmJvb2t9IGRpcj17ZGlyZWN0aW9uIHx8ICdhdXRvJ30+XHJcbiAgICAgIHtib29rSGVhZGVyc31cclxuICAgICAge19jaGFwdGVyc31cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcblxyXG5Cb29rLnByb3BUeXBlcyA9IHtcclxuICBib29rOiBQcm9wVHlwZXMuc2hhcGUoe1xyXG4gICAgaGVhZGVyczogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXHJcbiAgICBjaGFwdGVyczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxyXG4gIH0pLFxyXG4gIC8qKiByZW5kZXIgdmVyc2VzIHBhcmFncmFwaHMsIHVzZSBleHBsaWNpdCBwYXJhZ3JhcGhzICovXHJcbiAgcGFyYWdyYXBoczogUHJvcFR5cGVzLmJvb2wsXHJcbiAgLyoqIGJ5cGFzcyByZW5kZXJpbmcgb25seSB3aGVuIHZpc2libGUgKi9cclxuICByZW5kZXJPZmZzY3JlZW46IFByb3BUeXBlcy5ib29sLFxyXG4gIC8qKiByZW5kZXIgdW5zdXBwb3J0ZWQgdXNmbSBtYXJrZXJzICovXHJcbiAgc2hvd1Vuc3VwcG9ydGVkOiBQcm9wVHlwZXMuYm9vbCxcclxuICAvKiogb3ZlcnJpZGUgdGV4dCBkaXJlY3Rpb24gZGV0ZWN0aW9uICovXHJcbiAgZGlyZWN0aW9uOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIC8qKiBkaXNhYmxlIHBvcG92ZXJzIGZvciBhbGlnbmVkIGFuZCBvcmlnaW5hbCBsYW5ndWFnZSB3b3JkcyAqL1xyXG4gIGRpc2FibGVXb3JkUG9wb3ZlcjogUHJvcFR5cGVzLmJvb2wsXHJcbiAgcmVmZXJlbmNlOiBQcm9wVHlwZXMub2JqZWN0LFxyXG59O1xyXG5cclxuY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcygoKSA9PiAoe1xyXG4gIGJvb2s6IHt9LFxyXG4gIGJvb2tOYW1lOiB7fSxcclxufSkpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQm9vaztcclxuIl19