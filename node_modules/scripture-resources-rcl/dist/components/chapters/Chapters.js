"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Chapters = void 0;

var _react = _interopRequireWildcard(require("react"));

var _useDeepCompareEffect = _interopRequireDefault(require("use-deep-compare-effect"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _Chapter = require("./Chapter");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cov_wio4rdsh3() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\chapters\\Chapters.js";
  var hash = "572365448b19e3db7885cac6b90804430240ffd6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\chapters\\Chapters.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 46,
          column: 1
        }
      },
      "1": {
        start: {
          line: 17,
          column: 18
        },
        end: {
          line: 17,
          column: 29
        }
      },
      "2": {
        start: {
          line: 18,
          column: 35
        },
        end: {
          line: 18,
          column: 47
        }
      },
      "3": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 39,
          column: 105
        }
      },
      "4": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 37,
          column: 6
        }
      },
      "5": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 42
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "7": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 21
        }
      },
      "8": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 28
        }
      },
      "9": {
        start: {
          line: 41,
          column: 2
        },
        end: {
          line: 45,
          column: 4
        }
      },
      "10": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 60,
          column: 2
        }
      },
      "11": {
        start: {
          line: 62,
          column: 18
        },
        end: {
          line: 65,
          column: 3
        }
      },
      "12": {
        start: {
          line: 62,
          column: 39
        },
        end: {
          line: 65,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 24
          },
          end: {
            line: 8,
            column: 25
          }
        },
        loc: {
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 20,
            column: 13
          }
        },
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 39,
            column: 3
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 49
          },
          end: {
            line: 21,
            column: 50
          }
        },
        loc: {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 62,
            column: 29
          },
          end: {
            line: 62,
            column: 30
          }
        },
        loc: {
          start: {
            line: 62,
            column: 39
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 62
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "572365448b19e3db7885cac6b90804430240ffd6"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_wio4rdsh3 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_wio4rdsh3();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

cov_wio4rdsh3().s[0]++;

var Chapters = ({
  chapters,
  paragraphs,
  renderOffscreen,
  showUnsupported,
  direction,
  disableWordPopover,
  reference
}) => {
  cov_wio4rdsh3().f[0]++;
  var classes = (cov_wio4rdsh3().s[1]++, useStyles());

  var _ref = (cov_wio4rdsh3().s[2]++, (0, _react.useState)([])),
      _ref2 = _slicedToArray(_ref, 2),
      _chapters = _ref2[0],
      setChapters = _ref2[1];

  cov_wio4rdsh3().s[3]++;
  (0, _useDeepCompareEffect.default)(() => {
    cov_wio4rdsh3().f[1]++;

    var __chapters = (cov_wio4rdsh3().s[4]++, Object.keys(chapters).map(chapterKey => {
      cov_wio4rdsh3().f[2]++;
      var chapter = (cov_wio4rdsh3().s[5]++, chapters[chapterKey]);

      var _chapter = (cov_wio4rdsh3().s[6]++, _react.default.createElement(_Chapter.Chapter, {
        key: chapterKey,
        chapterKey: chapterKey,
        chapter: chapter,
        paragraphs: paragraphs,
        renderOffscreen: renderOffscreen,
        showUnsupported: showUnsupported,
        direction: direction,
        disableWordPopover: disableWordPopover,
        reference: _objectSpread(_objectSpread({}, reference), {}, {
          chapter: chapterKey
        })
      }));

      cov_wio4rdsh3().s[7]++;
      return _chapter;
    }));

    cov_wio4rdsh3().s[8]++;
    setChapters(__chapters);
  }, [chapters, paragraphs, renderOffscreen, direction, disableWordPopover, showUnsupported, reference]);
  cov_wio4rdsh3().s[9]++;
  return _react.default.createElement("div", {
    className: classes.chapters,
    dir: "auto"
  }, _chapters);
};

exports.Chapters = Chapters;
cov_wio4rdsh3().s[10]++;
Chapters.propTypes = {
  chapters: _propTypes.default.object.isRequired,

  /** render verses paragraphs, use explicit paragraphs */
  paragraphs: _propTypes.default.bool,

  /** bypass rendering only when visible */
  renderOffscreen: _propTypes.default.bool,

  /** render unsupported usfm markers */
  showUnsupported: _propTypes.default.bool,

  /** override text direction detection */
  direction: _propTypes.default.string,

  /** disable popovers for aligned and original language words */
  disableWordPopover: _propTypes.default.bool
};
var useStyles = (cov_wio4rdsh3().s[11]++, (0, _styles.makeStyles)(theme => {
  cov_wio4rdsh3().f[3]++;
  cov_wio4rdsh3().s[12]++;
  return {
    chapters: {}
  };
}));
var _default = Chapters;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2NoYXB0ZXJzL0NoYXB0ZXJzLmpzIl0sIm5hbWVzIjpbIkNoYXB0ZXJzIiwiY2hhcHRlcnMiLCJwYXJhZ3JhcGhzIiwicmVuZGVyT2Zmc2NyZWVuIiwic2hvd1Vuc3VwcG9ydGVkIiwiZGlyZWN0aW9uIiwiZGlzYWJsZVdvcmRQb3BvdmVyIiwicmVmZXJlbmNlIiwiY2xhc3NlcyIsInVzZVN0eWxlcyIsIl9jaGFwdGVycyIsInNldENoYXB0ZXJzIiwiX19jaGFwdGVycyIsIk9iamVjdCIsImtleXMiLCJtYXAiLCJjaGFwdGVyS2V5IiwiY2hhcHRlciIsIl9jaGFwdGVyIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwib2JqZWN0IiwiaXNSZXF1aXJlZCIsImJvb2wiLCJzdHJpbmciLCJ0aGVtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRU8sSUFBTUEsUUFBUSxHQUFHLENBQUM7QUFDdkJDLEVBQUFBLFFBRHVCO0FBRXZCQyxFQUFBQSxVQUZ1QjtBQUd2QkMsRUFBQUEsZUFIdUI7QUFJdkJDLEVBQUFBLGVBSnVCO0FBS3ZCQyxFQUFBQSxTQUx1QjtBQU12QkMsRUFBQUEsa0JBTnVCO0FBT3ZCQyxFQUFBQTtBQVB1QixDQUFELEtBUWxCO0FBQUE7QUFDSixNQUFNQyxPQUFPLDRCQUFHQyxTQUFTLEVBQVosQ0FBYjs7QUFESSxzQ0FFNkIscUJBQVMsRUFBVCxDQUY3QjtBQUFBO0FBQUEsTUFFR0MsU0FGSDtBQUFBLE1BRWNDLFdBRmQ7O0FBQUE7QUFJSixxQ0FBVSxNQUFNO0FBQUE7O0FBQ2QsUUFBTUMsVUFBVSw0QkFBR0MsTUFBTSxDQUFDQyxJQUFQLENBQVliLFFBQVosRUFBc0JjLEdBQXRCLENBQTBCQyxVQUFVLElBQUk7QUFBQTtBQUN6RCxVQUFNQyxPQUFPLDRCQUFHaEIsUUFBUSxDQUFDZSxVQUFELENBQVgsQ0FBYjs7QUFDQSxVQUFNRSxRQUFRLDRCQUNaLDZCQUFDLGdCQUFEO0FBQ0UsUUFBQSxHQUFHLEVBQUVGLFVBRFA7QUFFRSxRQUFBLFVBQVUsRUFBRUEsVUFGZDtBQUdFLFFBQUEsT0FBTyxFQUFFQyxPQUhYO0FBSUUsUUFBQSxVQUFVLEVBQUVmLFVBSmQ7QUFLRSxRQUFBLGVBQWUsRUFBRUMsZUFMbkI7QUFNRSxRQUFBLGVBQWUsRUFBRUMsZUFObkI7QUFPRSxRQUFBLFNBQVMsRUFBRUMsU0FQYjtBQVFFLFFBQUEsa0JBQWtCLEVBQUVDLGtCQVJ0QjtBQVNFLFFBQUEsU0FBUyxrQ0FBT0MsU0FBUDtBQUFrQlUsVUFBQUEsT0FBTyxFQUFFRDtBQUEzQjtBQVRYLFFBRFksQ0FBZDs7QUFGeUQ7QUFlekQsYUFBT0UsUUFBUDtBQUNELEtBaEJrQixDQUFILENBQWhCOztBQURjO0FBa0JkUCxJQUFBQSxXQUFXLENBQUNDLFVBQUQsQ0FBWDtBQUNELEdBbkJELEVBbUJHLENBQUNYLFFBQUQsRUFBV0MsVUFBWCxFQUF1QkMsZUFBdkIsRUFBd0NFLFNBQXhDLEVBQW1EQyxrQkFBbkQsRUFBdUVGLGVBQXZFLEVBQXdGRyxTQUF4RixDQW5CSDtBQUpJO0FBeUJKLFNBQ0U7QUFBSyxJQUFBLFNBQVMsRUFBRUMsT0FBTyxDQUFDUCxRQUF4QjtBQUFrQyxJQUFBLEdBQUcsRUFBQztBQUF0QyxLQUNHUyxTQURILENBREY7QUFLRCxDQXRDTTs7OztBQXdDUFYsUUFBUSxDQUFDbUIsU0FBVCxHQUFxQjtBQUNuQmxCLEVBQUFBLFFBQVEsRUFBRW1CLG1CQUFVQyxNQUFWLENBQWlCQyxVQURSOztBQUVuQjtBQUNBcEIsRUFBQUEsVUFBVSxFQUFFa0IsbUJBQVVHLElBSEg7O0FBSW5CO0FBQ0FwQixFQUFBQSxlQUFlLEVBQUVpQixtQkFBVUcsSUFMUjs7QUFNbkI7QUFDQW5CLEVBQUFBLGVBQWUsRUFBRWdCLG1CQUFVRyxJQVBSOztBQVFuQjtBQUNBbEIsRUFBQUEsU0FBUyxFQUFFZSxtQkFBVUksTUFURjs7QUFVbkI7QUFDQWxCLEVBQUFBLGtCQUFrQixFQUFFYyxtQkFBVUc7QUFYWCxDQUFyQjtBQWNBLElBQU1kLFNBQVMsNkJBQUcsd0JBQVdnQixLQUFLLElBQUs7QUFBQTtBQUFBO0FBQUE7QUFDckN4QixJQUFBQSxRQUFRLEVBQUU7QUFEMkI7QUFHdEMsQ0FIaUIsQ0FBSCxDQUFmO2VBS2VELFEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHt1c2VTdGF0ZX0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgdXNlRWZmZWN0IGZyb20gJ3VzZS1kZWVwLWNvbXBhcmUtZWZmZWN0JztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHttYWtlU3R5bGVzfSBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZS9zdHlsZXMnO1xyXG5cclxuaW1wb3J0IHsgQ2hhcHRlciB9IGZyb20gJy4vQ2hhcHRlcic7XHJcblxyXG5leHBvcnQgY29uc3QgQ2hhcHRlcnMgPSAoe1xyXG4gIGNoYXB0ZXJzLFxyXG4gIHBhcmFncmFwaHMsXHJcbiAgcmVuZGVyT2Zmc2NyZWVuLFxyXG4gIHNob3dVbnN1cHBvcnRlZCxcclxuICBkaXJlY3Rpb24sXHJcbiAgZGlzYWJsZVdvcmRQb3BvdmVyLFxyXG4gIHJlZmVyZW5jZSxcclxufSkgPT4ge1xyXG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoKTtcclxuICBjb25zdCBbX2NoYXB0ZXJzLCBzZXRDaGFwdGVyc10gPSB1c2VTdGF0ZShbXSk7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBjb25zdCBfX2NoYXB0ZXJzID0gT2JqZWN0LmtleXMoY2hhcHRlcnMpLm1hcChjaGFwdGVyS2V5ID0+IHtcclxuICAgICAgY29uc3QgY2hhcHRlciA9IGNoYXB0ZXJzW2NoYXB0ZXJLZXldO1xyXG4gICAgICBjb25zdCBfY2hhcHRlciA9IChcclxuICAgICAgICA8Q2hhcHRlclxyXG4gICAgICAgICAga2V5PXtjaGFwdGVyS2V5fVxyXG4gICAgICAgICAgY2hhcHRlcktleT17Y2hhcHRlcktleX1cclxuICAgICAgICAgIGNoYXB0ZXI9e2NoYXB0ZXJ9XHJcbiAgICAgICAgICBwYXJhZ3JhcGhzPXtwYXJhZ3JhcGhzfVxyXG4gICAgICAgICAgcmVuZGVyT2Zmc2NyZWVuPXtyZW5kZXJPZmZzY3JlZW59XHJcbiAgICAgICAgICBzaG93VW5zdXBwb3J0ZWQ9e3Nob3dVbnN1cHBvcnRlZH1cclxuICAgICAgICAgIGRpcmVjdGlvbj17ZGlyZWN0aW9ufVxyXG4gICAgICAgICAgZGlzYWJsZVdvcmRQb3BvdmVyPXtkaXNhYmxlV29yZFBvcG92ZXJ9XHJcbiAgICAgICAgICByZWZlcmVuY2U9e3sgLi4ucmVmZXJlbmNlLCBjaGFwdGVyOiBjaGFwdGVyS2V5IH19XHJcbiAgICAgICAgLz5cclxuICAgICAgKTtcclxuICAgICAgcmV0dXJuIF9jaGFwdGVyXHJcbiAgICB9KTtcclxuICAgIHNldENoYXB0ZXJzKF9fY2hhcHRlcnMpO1xyXG4gIH0sIFtjaGFwdGVycywgcGFyYWdyYXBocywgcmVuZGVyT2Zmc2NyZWVuLCBkaXJlY3Rpb24sIGRpc2FibGVXb3JkUG9wb3Zlciwgc2hvd1Vuc3VwcG9ydGVkLCByZWZlcmVuY2VdKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc2VzLmNoYXB0ZXJzfSBkaXI9J2F1dG8nPlxyXG4gICAgICB7X2NoYXB0ZXJzfVxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufTtcclxuXHJcbkNoYXB0ZXJzLnByb3BUeXBlcyA9IHtcclxuICBjaGFwdGVyczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxyXG4gIC8qKiByZW5kZXIgdmVyc2VzIHBhcmFncmFwaHMsIHVzZSBleHBsaWNpdCBwYXJhZ3JhcGhzICovXHJcbiAgcGFyYWdyYXBoczogUHJvcFR5cGVzLmJvb2wsXHJcbiAgLyoqIGJ5cGFzcyByZW5kZXJpbmcgb25seSB3aGVuIHZpc2libGUgKi9cclxuICByZW5kZXJPZmZzY3JlZW46IFByb3BUeXBlcy5ib29sLFxyXG4gIC8qKiByZW5kZXIgdW5zdXBwb3J0ZWQgdXNmbSBtYXJrZXJzICovIFxyXG4gIHNob3dVbnN1cHBvcnRlZDogUHJvcFR5cGVzLmJvb2wsXHJcbiAgLyoqIG92ZXJyaWRlIHRleHQgZGlyZWN0aW9uIGRldGVjdGlvbiAqL1xyXG4gIGRpcmVjdGlvbjogUHJvcFR5cGVzLnN0cmluZyxcclxuICAvKiogZGlzYWJsZSBwb3BvdmVycyBmb3IgYWxpZ25lZCBhbmQgb3JpZ2luYWwgbGFuZ3VhZ2Ugd29yZHMgKi9cclxuICBkaXNhYmxlV29yZFBvcG92ZXI6IFByb3BUeXBlcy5ib29sLFxyXG59O1xyXG5cclxuY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcyh0aGVtZSA9PiAoe1xyXG4gIGNoYXB0ZXJzOiB7XHJcbiAgfSxcclxufSkpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2hhcHRlcnM7XHJcbiJdfQ==