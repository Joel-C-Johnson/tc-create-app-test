"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Chapter = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _core = require("@material-ui/core");

var _lab = require("@material-ui/lab");

var _reactWaypoint = require("react-waypoint");

var _Verses = require("../verses/Verses");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cov_2e1231fk8h() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\chapters\\Chapter.js";
  var hash = "e5b038068f0827c4f99cc3d90ea6d3d3ed47cb40";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\chapters\\Chapter.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 62,
          column: 1
        }
      },
      "1": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 29
        }
      },
      "2": {
        start: {
          line: 25,
          column: 30
        },
        end: {
          line: 25,
          column: 56
        }
      },
      "3": {
        start: {
          line: 27,
          column: 23
        },
        end: {
          line: 29,
          column: 3
        }
      },
      "4": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 35
        }
      },
      "5": {
        start: {
          line: 28,
          column: 19
        },
        end: {
          line: 28,
          column: 35
        }
      },
      "6": {
        start: {
          line: 30,
          column: 17
        },
        end: {
          line: 30,
          column: 49
        }
      },
      "7": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 35,
          column: 7
        }
      },
      "8": {
        start: {
          line: 37,
          column: 30
        },
        end: {
          line: 37,
          column: 48
        }
      },
      "9": {
        start: {
          line: 39,
          column: 2
        },
        end: {
          line: 54,
          column: 96
        }
      },
      "10": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "11": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 50,
          column: 10
        }
      },
      "12": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 25
        }
      },
      "13": {
        start: {
          line: 56,
          column: 2
        },
        end: {
          line: 61,
          column: 4
        }
      },
      "14": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 77,
          column: 2
        }
      },
      "15": {
        start: {
          line: 79,
          column: 18
        },
        end: {
          line: 82,
          column: 3
        }
      },
      "16": {
        start: {
          line: 79,
          column: 39
        },
        end: {
          line: 82,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 23
          },
          end: {
            line: 14,
            column: 24
          }
        },
        loc: {
          start: {
            line: 23,
            column: 6
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 23
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 27,
            column: 24
          }
        },
        loc: {
          start: {
            line: 27,
            column: 38
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        },
        loc: {
          start: {
            line: 39,
            column: 18
          },
          end: {
            line: 54,
            column: 3
          }
        },
        line: 39
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 79,
            column: 29
          },
          end: {
            line: 79,
            column: 30
          }
        },
        loc: {
          start: {
            line: 79,
            column: 39
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 79
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 35
          }
        }, {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 35
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }],
        line: 40
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e5b038068f0827c4f99cc3d90ea6d3d3ed47cb40"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2e1231fk8h = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2e1231fk8h();

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

cov_2e1231fk8h().s[0]++;

var Chapter = ({
  chapterKey,
  chapter,
  paragraphs,
  renderOffscreen,
  showUnsupported,
  direction,
  disableWordPopover,
  reference
}) => {
  cov_2e1231fk8h().f[0]++;
  var classes = (cov_2e1231fk8h().s[1]++, useStyles());

  var _ref = (cov_2e1231fk8h().s[2]++, (0, _react.useState)(!renderOffscreen)),
      _ref2 = _slicedToArray(_ref, 2),
      viewed = _ref2[0],
      setViewed = _ref2[1];

  cov_2e1231fk8h().s[3]++;

  var onVisibility = isVisible => {
    cov_2e1231fk8h().f[1]++;
    cov_2e1231fk8h().s[4]++;

    if (isVisible) {
      cov_2e1231fk8h().b[0][0]++;
      cov_2e1231fk8h().s[5]++;
      setViewed(true);
    } else {
      cov_2e1231fk8h().b[0][1]++;
    }
  };

  var height = (cov_2e1231fk8h().s[6]++, Object.keys(chapter).length * 20);
  var skeleton = (cov_2e1231fk8h().s[7]++, _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactWaypoint.Waypoint, {
    onEnter: onVisibility
  }), _react.default.createElement(_lab.Skeleton, {
    height: height,
    width: "100%",
    className: classes.skeleton
  })));

  var _ref3 = (cov_2e1231fk8h().s[8]++, (0, _react.useState)(skeleton)),
      _ref4 = _slicedToArray(_ref3, 2),
      verses = _ref4[0],
      setVerses = _ref4[1];

  cov_2e1231fk8h().s[9]++;
  (0, _react.useEffect)(() => {
    cov_2e1231fk8h().f[2]++;
    cov_2e1231fk8h().s[10]++;

    if (viewed) {
      cov_2e1231fk8h().b[1][0]++;

      var _verses = (cov_2e1231fk8h().s[11]++, _react.default.createElement(_Verses.Verses, {
        verses: chapter,
        paragraphs: paragraphs,
        showUnsupported: showUnsupported,
        direction: direction,
        disableWordPopover: disableWordPopover,
        reference: reference,
        renderOffscreen: renderOffscreen
      }));

      cov_2e1231fk8h().s[12]++;
      setVerses(_verses);
    } else {
      cov_2e1231fk8h().b[1][1]++;
    }
  }, [chapterKey, chapter, paragraphs, viewed, showUnsupported, disableWordPopover, direction]);
  cov_2e1231fk8h().s[13]++;
  return _react.default.createElement("div", {
    className: classes.chapter,
    dir: direction
  }, _react.default.createElement(_core.Typography, {
    variant: "h3"
  }, chapterKey), verses);
};

exports.Chapter = Chapter;
cov_2e1231fk8h().s[14]++;
Chapter.propTypes = {
  chapterKey: _propTypes.default.string.isRequired,
  chapter: _propTypes.default.object.isRequired,

  /** render verses paragraphs, use explicit paragraphs */
  paragraphs: _propTypes.default.bool,

  /** bypass rendering only when visible */
  renderOffscreen: _propTypes.default.bool,

  /** render unsupported usfm markers */
  showUnsupported: _propTypes.default.bool,

  /** override text direction detection */
  direction: _propTypes.default.string,

  /** disable popovers for aligned and original language words */
  disableWordPopover: _propTypes.default.bool
};
var useStyles = (cov_2e1231fk8h().s[15]++, (0, _styles.makeStyles)(theme => {
  cov_2e1231fk8h().f[3]++;
  cov_2e1231fk8h().s[16]++;
  return {
    chapter: {}
  };
}));
var _default = Chapter;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2NoYXB0ZXJzL0NoYXB0ZXIuanMiXSwibmFtZXMiOlsiQ2hhcHRlciIsImNoYXB0ZXJLZXkiLCJjaGFwdGVyIiwicGFyYWdyYXBocyIsInJlbmRlck9mZnNjcmVlbiIsInNob3dVbnN1cHBvcnRlZCIsImRpcmVjdGlvbiIsImRpc2FibGVXb3JkUG9wb3ZlciIsInJlZmVyZW5jZSIsImNsYXNzZXMiLCJ1c2VTdHlsZXMiLCJ2aWV3ZWQiLCJzZXRWaWV3ZWQiLCJvblZpc2liaWxpdHkiLCJpc1Zpc2libGUiLCJoZWlnaHQiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwic2tlbGV0b24iLCJ2ZXJzZXMiLCJzZXRWZXJzZXMiLCJfdmVyc2VzIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsIm9iamVjdCIsImJvb2wiLCJ0aGVtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUdBOztBQUdBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRU8s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LFNBQVMsOEJBQUcsd0JBQVdtQixLQUFLLElBQUs7QUFBQTtBQUFBO0FBQUE7QUFDckMzQixJQUFBQSxPQUFPLEVBQUU7QUFENEI7QUFHdEMsQ0FIaUIsQ0FBSCxDQUFmO2VBS2VGLE8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHt1c2VTdGF0ZSwgdXNlRWZmZWN0fSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcbmltcG9ydCB7bWFrZVN0eWxlc30gZnJvbSAnQG1hdGVyaWFsLXVpL2NvcmUvc3R5bGVzJztcclxuaW1wb3J0IHtcclxuICBUeXBvZ3JhcGh5LFxyXG59IGZyb20gJ0BtYXRlcmlhbC11aS9jb3JlJztcclxuaW1wb3J0IHtcclxuICBTa2VsZXRvbixcclxufSBmcm9tICdAbWF0ZXJpYWwtdWkvbGFiJztcclxuaW1wb3J0IHtXYXlwb2ludH0gZnJvbSAncmVhY3Qtd2F5cG9pbnQnO1xyXG5cclxuaW1wb3J0IHsgVmVyc2VzIH0gZnJvbSAnLi4vdmVyc2VzL1ZlcnNlcyc7XHJcblxyXG5leHBvcnQgY29uc3QgQ2hhcHRlciA9ICh7XHJcbiAgY2hhcHRlcktleSxcclxuICBjaGFwdGVyLFxyXG4gIHBhcmFncmFwaHMsXHJcbiAgcmVuZGVyT2Zmc2NyZWVuLFxyXG4gIHNob3dVbnN1cHBvcnRlZCxcclxuICBkaXJlY3Rpb24sXHJcbiAgZGlzYWJsZVdvcmRQb3BvdmVyLFxyXG4gIHJlZmVyZW5jZVxyXG59KSA9PiB7XHJcbiAgY29uc3QgY2xhc3NlcyA9IHVzZVN0eWxlcygpO1xyXG4gIGNvbnN0IFt2aWV3ZWQsIHNldFZpZXdlZF0gPSB1c2VTdGF0ZSghcmVuZGVyT2Zmc2NyZWVuKTtcclxuICBcclxuICBjb25zdCBvblZpc2liaWxpdHkgPSAoaXNWaXNpYmxlKSA9PiB7XHJcbiAgICBpZiAoaXNWaXNpYmxlKSBzZXRWaWV3ZWQodHJ1ZSk7XHJcbiAgfTtcclxuICBjb25zdCBoZWlnaHQgPSBPYmplY3Qua2V5cyhjaGFwdGVyKS5sZW5ndGggKiAyMDtcclxuICBjb25zdCBza2VsZXRvbiA9IChcclxuICAgIDw+XHJcbiAgICAgIDxXYXlwb2ludCBvbkVudGVyPXtvblZpc2liaWxpdHl9IC8+XHJcbiAgICAgIDxTa2VsZXRvbiBoZWlnaHQ9e2hlaWdodH0gd2lkdGg9JzEwMCUnIGNsYXNzTmFtZT17Y2xhc3Nlcy5za2VsZXRvbn0gLz5cclxuICAgIDwvPlxyXG4gICk7XHJcbiAgY29uc3QgW3ZlcnNlcywgc2V0VmVyc2VzXSA9IHVzZVN0YXRlKHNrZWxldG9uKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmICh2aWV3ZWQpIHtcclxuICAgICAgY29uc3QgX3ZlcnNlcyA9IChcclxuICAgICAgICA8VmVyc2VzXHJcbiAgICAgICAgICB2ZXJzZXM9e2NoYXB0ZXJ9XHJcbiAgICAgICAgICBwYXJhZ3JhcGhzPXtwYXJhZ3JhcGhzfVxyXG4gICAgICAgICAgc2hvd1Vuc3VwcG9ydGVkPXtzaG93VW5zdXBwb3J0ZWR9XHJcbiAgICAgICAgICBkaXJlY3Rpb249e2RpcmVjdGlvbn1cclxuICAgICAgICAgIGRpc2FibGVXb3JkUG9wb3Zlcj17ZGlzYWJsZVdvcmRQb3BvdmVyfVxyXG4gICAgICAgICAgcmVmZXJlbmNlPXtyZWZlcmVuY2V9XHJcbiAgICAgICAgICByZW5kZXJPZmZzY3JlZW49e3JlbmRlck9mZnNjcmVlbn1cclxuICAgICAgICAvPlxyXG4gICAgICApO1xyXG4gICAgICBzZXRWZXJzZXMoX3ZlcnNlcyk7XHJcbiAgICB9XHJcbiAgfSwgW2NoYXB0ZXJLZXksIGNoYXB0ZXIsIHBhcmFncmFwaHMsIHZpZXdlZCwgc2hvd1Vuc3VwcG9ydGVkLCBkaXNhYmxlV29yZFBvcG92ZXIsIGRpcmVjdGlvbl0pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzZXMuY2hhcHRlcn0gZGlyPXtkaXJlY3Rpb259PlxyXG4gICAgICA8VHlwb2dyYXBoeSB2YXJpYW50PSdoMyc+e2NoYXB0ZXJLZXl9PC9UeXBvZ3JhcGh5PlxyXG4gICAgICB7dmVyc2VzfVxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufTtcclxuXHJcbkNoYXB0ZXIucHJvcFR5cGVzID0ge1xyXG4gIGNoYXB0ZXJLZXk6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICBjaGFwdGVyOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXHJcbiAgLyoqIHJlbmRlciB2ZXJzZXMgcGFyYWdyYXBocywgdXNlIGV4cGxpY2l0IHBhcmFncmFwaHMgKi9cclxuICBwYXJhZ3JhcGhzOiBQcm9wVHlwZXMuYm9vbCxcclxuICAvKiogYnlwYXNzIHJlbmRlcmluZyBvbmx5IHdoZW4gdmlzaWJsZSAqL1xyXG4gIHJlbmRlck9mZnNjcmVlbjogUHJvcFR5cGVzLmJvb2wsXHJcbiAgLyoqIHJlbmRlciB1bnN1cHBvcnRlZCB1c2ZtIG1hcmtlcnMgKi8gXHJcbiAgc2hvd1Vuc3VwcG9ydGVkOiBQcm9wVHlwZXMuYm9vbCxcclxuICAvKiogb3ZlcnJpZGUgdGV4dCBkaXJlY3Rpb24gZGV0ZWN0aW9uICovXHJcbiAgZGlyZWN0aW9uOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIC8qKiBkaXNhYmxlIHBvcG92ZXJzIGZvciBhbGlnbmVkIGFuZCBvcmlnaW5hbCBsYW5ndWFnZSB3b3JkcyAqL1xyXG4gIGRpc2FibGVXb3JkUG9wb3ZlcjogUHJvcFR5cGVzLmJvb2wsXHJcbn07XHJcblxyXG5jb25zdCB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKHRoZW1lID0+ICh7XHJcbiAgY2hhcHRlcjoge1xyXG4gIH0sXHJcbn0pKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENoYXB0ZXI7XHJcbiJdfQ==