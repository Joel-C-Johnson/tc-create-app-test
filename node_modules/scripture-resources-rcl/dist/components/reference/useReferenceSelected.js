"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _deepFreeze = _interopRequireDefault(require("deep-freeze"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function cov_s2htwrhwa() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\reference\\useReferenceSelected.js";
  var hash = "1e0c1d2624129216023eea02e354327ad02d3017";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\reference\\useReferenceSelected.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 16,
          column: 3
        }
      },
      "1": {
        start: {
          line: 12,
          column: 34
        },
        end: {
          line: 12,
          column: 86
        }
      },
      "2": {
        start: {
          line: 13,
          column: 6
        },
        end: {
          line: 13,
          column: 47
        }
      },
      "3": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 24,
          column: 4
        }
      },
      "4": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 32,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "useReferenceSelected",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 29
          }
        },
        loc: {
          start: {
            line: 9,
            column: 3
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 28
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 11
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 52
          }
        }, {
          start: {
            line: 12,
            column: 56
          },
          end: {
            line: 12,
            column: 86
          }
        }],
        line: 12
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1e0c1d2624129216023eea02e354327ad02d3017"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_s2htwrhwa = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_s2htwrhwa();

function useReferenceSelected({
  referenceSelected,
  onReferenceSelected
}) {
  cov_s2htwrhwa().f[0]++;
  var update = (cov_s2htwrhwa().s[0]++, (0, _react.useCallback)(_referenceSelected => {
    cov_s2htwrhwa().f[1]++;

    var __referenceSelected = (cov_s2htwrhwa().s[1]++, (cov_s2htwrhwa().b[0][0]++, _referenceSelected) && (cov_s2htwrhwa().b[0][1]++, (0, _deepFreeze.default)(_referenceSelected)));

    cov_s2htwrhwa().s[2]++;
    onReferenceSelected(__referenceSelected);
  }, [onReferenceSelected]));
  cov_s2htwrhwa().s[3]++;
  return {
    state: referenceSelected,
    actions: {
      update
    }
  };
}

cov_s2htwrhwa().s[4]++;
useReferenceSelected.propTypes = {
  /** references: chapter and verse */
  referenceSelected: _propTypes.default.object,

  /** action taken after a resource is acquired */
  onReferenceSelected: _propTypes.default.func.isRequired
};
var _default = useReferenceSelected;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3JlZmVyZW5jZS91c2VSZWZlcmVuY2VTZWxlY3RlZC5qcyJdLCJuYW1lcyI6WyJ1c2VSZWZlcmVuY2VTZWxlY3RlZCIsInJlZmVyZW5jZVNlbGVjdGVkIiwib25SZWZlcmVuY2VTZWxlY3RlZCIsInVwZGF0ZSIsIl9yZWZlcmVuY2VTZWxlY3RlZCIsIl9fcmVmZXJlbmNlU2VsZWN0ZWQiLCJzdGF0ZSIsImFjdGlvbnMiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJvYmplY3QiLCJmdW5jIiwiaXNSZXF1aXJlZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLFNBQVNBLG9CQUFULENBQThCO0FBQzVCQyxFQUFBQSxpQkFENEI7QUFFNUJDLEVBQUFBO0FBRjRCLENBQTlCLEVBR0c7QUFBQTtBQUNELE1BQU1DLE1BQU0sNEJBQUcsd0JBQ1pDLGtCQUFELElBQXdCO0FBQUE7O0FBQ3RCLFFBQU1DLG1CQUFtQiw0QkFBRyw0QkFBQUQsa0JBQWtCLGlDQUFJLHlCQUFXQSxrQkFBWCxDQUFKLENBQXJCLENBQXpCOztBQURzQjtBQUV0QkYsSUFBQUEsbUJBQW1CLENBQUNHLG1CQUFELENBQW5CO0FBQ0QsR0FKWSxFQUtiLENBQUNILG1CQUFELENBTGEsQ0FBSCxDQUFaO0FBREM7QUFTRCxTQUFPO0FBQ0xJLElBQUFBLEtBQUssRUFBRUwsaUJBREY7QUFFTE0sSUFBQUEsT0FBTyxFQUNQO0FBQ0VKLE1BQUFBO0FBREY7QUFISyxHQUFQO0FBT0Q7OztBQUVESCxvQkFBb0IsQ0FBQ1EsU0FBckIsR0FBaUM7QUFDL0I7QUFDQVAsRUFBQUEsaUJBQWlCLEVBQUVRLG1CQUFVQyxNQUZFOztBQUcvQjtBQUNBUixFQUFBQSxtQkFBbUIsRUFBRU8sbUJBQVVFLElBQVYsQ0FBZUM7QUFKTCxDQUFqQztlQU9lWixvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5cclxuaW1wb3J0IGRlZXBGcmVlemUgZnJvbSAnZGVlcC1mcmVlemUnO1xyXG5cclxuZnVuY3Rpb24gdXNlUmVmZXJlbmNlU2VsZWN0ZWQoeyBcclxuICByZWZlcmVuY2VTZWxlY3RlZCxcclxuICBvblJlZmVyZW5jZVNlbGVjdGVkLFxyXG59KSB7XHJcbiAgY29uc3QgdXBkYXRlID0gdXNlQ2FsbGJhY2soXHJcbiAgICAoX3JlZmVyZW5jZVNlbGVjdGVkKSA9PiB7XHJcbiAgICAgIGNvbnN0IF9fcmVmZXJlbmNlU2VsZWN0ZWQgPSBfcmVmZXJlbmNlU2VsZWN0ZWQgJiYgZGVlcEZyZWV6ZShfcmVmZXJlbmNlU2VsZWN0ZWQpO1xyXG4gICAgICBvblJlZmVyZW5jZVNlbGVjdGVkKF9fcmVmZXJlbmNlU2VsZWN0ZWQpO1xyXG4gICAgfSxcclxuICAgIFtvblJlZmVyZW5jZVNlbGVjdGVkXSxcclxuICApO1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgc3RhdGU6IHJlZmVyZW5jZVNlbGVjdGVkLFxyXG4gICAgYWN0aW9uczpcclxuICAgIHtcclxuICAgICAgdXBkYXRlLFxyXG4gICAgfSxcclxuICB9O1xyXG59XHJcblxyXG51c2VSZWZlcmVuY2VTZWxlY3RlZC5wcm9wVHlwZXMgPSB7XHJcbiAgLyoqIHJlZmVyZW5jZXM6IGNoYXB0ZXIgYW5kIHZlcnNlICovXHJcbiAgcmVmZXJlbmNlU2VsZWN0ZWQ6IFByb3BUeXBlcy5vYmplY3QsXHJcbiAgLyoqIGFjdGlvbiB0YWtlbiBhZnRlciBhIHJlc291cmNlIGlzIGFjcXVpcmVkICovXHJcbiAgb25SZWZlcmVuY2VTZWxlY3RlZDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHVzZVJlZmVyZW5jZVNlbGVjdGVkO1xyXG4iXX0=