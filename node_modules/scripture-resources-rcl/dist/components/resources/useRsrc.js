"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _deepFreeze = _interopRequireDefault(require("deep-freeze"));

var _useDeepCompareEffect = _interopRequireDefault(require("use-deep-compare-effect"));

var _core = require("../../core");

var _tsvToJson = _interopRequireDefault(require("../../core/tsvToJson"));

var _helpers = require("../parallel-scripture/helpers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function cov_4bc08m6hd() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\resources\\useRsrc.js";
  var hash = "fd326e5c75a41042ddc3d3b9f1f8b869cb1b5f48";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\resources\\useRsrc.js",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 34
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "1": {
        start: {
          line: 13,
          column: 34
        },
        end: {
          line: 13,
          column: 46
        }
      },
      "2": {
        start: {
          line: 14,
          column: 32
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "3": {
        start: {
          line: 15,
          column: 48
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "4": {
        start: {
          line: 16,
          column: 46
        },
        end: {
          line: 16,
          column: 60
        }
      },
      "5": {
        start: {
          line: 17,
          column: 38
        },
        end: {
          line: 17,
          column: 52
        }
      },
      "6": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 41,
          column: 40
        }
      },
      "7": {
        start: {
          line: 20,
          column: 24
        },
        end: {
          line: 20,
          column: 75
        }
      },
      "8": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 36
        }
      },
      "9": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 28
        }
      },
      "10": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 20
        }
      },
      "11": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 40,
          column: 7
        }
      },
      "12": {
        start: {
          line: 29,
          column: 23
        },
        end: {
          line: 29,
          column: 57
        }
      },
      "13": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 36
        }
      },
      "14": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 34,
          column: 7
        }
      },
      "15": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 39
        }
      },
      "16": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "17": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 31
        }
      },
      "18": {
        start: {
          line: 38,
          column: 6
        },
        end: {
          line: 38,
          column: 85
        }
      },
      "19": {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 39,
          column: 31
        }
      },
      "20": {
        start: {
          line: 43,
          column: 2
        },
        end: {
          line: 60,
          column: 25
        }
      },
      "21": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 45,
          column: 48
        }
      },
      "22": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 61
        }
      },
      "23": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 50,
          column: 7
        }
      },
      "24": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 31
        }
      },
      "25": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 23
        }
      },
      "26": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 53,
          column: 30
        }
      },
      "27": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "28": {
        start: {
          line: 58,
          column: 6
        },
        end: {
          line: 58,
          column: 16
        }
      },
      "29": {
        start: {
          line: 62,
          column: 2
        },
        end: {
          line: 111,
          column: 39
        }
      },
      "30": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "31": {
        start: {
          line: 66,
          column: 24
        },
        end: {
          line: 104,
          column: 7
        }
      },
      "32": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "33": {
        start: {
          line: 68,
          column: 10
        },
        end: {
          line: 68,
          column: 27
        }
      },
      "34": {
        start: {
          line: 69,
          column: 10
        },
        end: {
          line: 69,
          column: 22
        }
      },
      "35": {
        start: {
          line: 72,
          column: 35
        },
        end: {
          line: 72,
          column: 44
        }
      },
      "36": {
        start: {
          line: 73,
          column: 28
        },
        end: {
          line: 73,
          column: 36
        }
      },
      "37": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 74,
          column: 51
        }
      },
      "38": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 30
        }
      },
      "39": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "40": {
        start: {
          line: 78,
          column: 10
        },
        end: {
          line: 100,
          column: 11
        }
      },
      "41": {
        start: {
          line: 79,
          column: 32
        },
        end: {
          line: 79,
          column: 59
        }
      },
      "42": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "43": {
        start: {
          line: 82,
          column: 30
        },
        end: {
          line: 82,
          column: 48
        }
      },
      "44": {
        start: {
          line: 84,
          column: 14
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "45": {
        start: {
          line: 85,
          column: 33
        },
        end: {
          line: 85,
          column: 116
        }
      },
      "46": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 89,
          column: 17
        }
      },
      "47": {
        start: {
          line: 88,
          column: 18
        },
        end: {
          line: 88,
          column: 52
        }
      },
      "48": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 41
        }
      },
      "49": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 38
        }
      },
      "50": {
        start: {
          line: 94,
          column: 14
        },
        end: {
          line: 94,
          column: 31
        }
      },
      "51": {
        start: {
          line: 96,
          column: 14
        },
        end: {
          line: 96,
          column: 33
        }
      },
      "52": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 24
        }
      },
      "53": {
        start: {
          line: 102,
          column: 10
        },
        end: {
          line: 102,
          column: 27
        }
      },
      "54": {
        start: {
          line: 106,
          column: 6
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "55": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 69
        }
      },
      "56": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 32
        }
      },
      "57": {
        start: {
          line: 113,
          column: 2
        },
        end: {
          line: 122,
          column: 4
        }
      },
      "58": {
        start: {
          line: 125,
          column: 0
        },
        end: {
          line: 141,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "useRsrc",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 16
          }
        },
        loc: {
          start: {
            line: 11,
            column: 3
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 13
          }
        },
        loc: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 41,
            column: 3
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        },
        loc: {
          start: {
            line: 28,
            column: 27
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 13
          },
          end: {
            line: 37,
            column: 14
          }
        },
        loc: {
          start: {
            line: 37,
            column: 22
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        },
        loc: {
          start: {
            line: 43,
            column: 18
          },
          end: {
            line: 60,
            column: 3
          }
        },
        line: 43
      },
      "5": {
        name: "getFile",
        decl: {
          start: {
            line: 44,
            column: 19
          },
          end: {
            line: 44,
            column: 26
          }
        },
        loc: {
          start: {
            line: 44,
            column: 29
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 44
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        },
        loc: {
          start: {
            line: 62,
            column: 18
          },
          end: {
            line: 111,
            column: 3
          }
        },
        line: 62
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 66,
            column: 24
          },
          end: {
            line: 66,
            column: 25
          }
        },
        loc: {
          start: {
            line: 66,
            column: 36
          },
          end: {
            line: 104,
            column: 7
          }
        },
        line: 66
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 106,
            column: 23
          },
          end: {
            line: 106,
            column: 24
          }
        },
        loc: {
          start: {
            line: 106,
            column: 38
          },
          end: {
            line: 109,
            column: 7
          }
        },
        line: 106
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 35
          },
          end: {
            line: 10,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 10,
            column: 45
          },
          end: {
            line: 10,
            column: 47
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 17,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 17,
            column: 46
          }
        }, {
          start: {
            line: 17,
            column: 50
          },
          end: {
            line: 17,
            column: 52
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 23
          },
          end: {
            line: 29,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 23
          },
          end: {
            line: 29,
            column: 32
          }
        }, {
          start: {
            line: 29,
            column: 36
          },
          end: {
            line: 29,
            column: 57
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 19
          },
          end: {
            line: 30,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 19
          },
          end: {
            line: 30,
            column: 29
          }
        }, {
          start: {
            line: 30,
            column: 33
          },
          end: {
            line: 30,
            column: 35
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 34,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 34,
            column: 7
          }
        }, {
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 34,
            column: 7
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 50,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 50,
            column: 7
          }
        }, {
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 50,
            column: 7
          }
        }],
        line: 48
      },
      "6": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }, {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }],
        line: 57
      },
      "7": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 36
          }
        }, {
          start: {
            line: 57,
            column: 40
          },
          end: {
            line: 57,
            column: 61
          }
        }],
        line: 57
      },
      "8": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        }, {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        }],
        line: 63
      },
      "9": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }],
        line: 67
      },
      "10": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }],
        line: 77
      },
      "11": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }, {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }],
        line: 81
      },
      "12": {
        loc: {
          start: {
            line: 84,
            column: 14
          },
          end: {
            line: 93,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 14
          },
          end: {
            line: 93,
            column: 15
          }
        }, {
          start: {
            line: 84,
            column: 14
          },
          end: {
            line: 93,
            column: 15
          }
        }],
        line: 84
      },
      "13": {
        loc: {
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 89,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 89,
            column: 17
          }
        }, {
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 89,
            column: 17
          }
        }],
        line: 87
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fd326e5c75a41042ddc3d3b9f1f8b869cb1b5f48"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_4bc08m6hd = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_4bc08m6hd();

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function useRsrc({
  config,
  reference,
  resourceLink,
  options = (cov_4bc08m6hd().b[0][0]++, {})
}) {
  cov_4bc08m6hd().f[0]++;

  var _ref = (cov_4bc08m6hd().s[0]++, (0, _react.useState)({})),
      _ref2 = _slicedToArray(_ref, 2),
      bibleRef = _ref2[0],
      setBibleRef = _ref2[1];

  var _ref3 = (cov_4bc08m6hd().s[1]++, (0, _react.useState)({})),
      _ref4 = _slicedToArray(_ref3, 2),
      resource = _ref4[0],
      setResource = _ref4[1];

  var _ref5 = (cov_4bc08m6hd().s[2]++, (0, _react.useState)(null)),
      _ref6 = _slicedToArray(_ref5, 2),
      content = _ref6[0],
      setContent = _ref6[1];

  var _ref7 = (cov_4bc08m6hd().s[3]++, (0, _react.useState)(null)),
      _ref8 = _slicedToArray(_ref7, 2),
      loadingResource = _ref8[0],
      setLoadingResource = _ref8[1]; // flag for when loading resource


  var _ref9 = (cov_4bc08m6hd().s[4]++, (0, _react.useState)(null)),
      _ref10 = _slicedToArray(_ref9, 2),
      loadingContent = _ref10[0],
      setLoadingContent = _ref10[1]; // flag for when loading content from resource


  var _ref11 = (cov_4bc08m6hd().s[5]++, (cov_4bc08m6hd().b[1][0]++, bibleRef) || (cov_4bc08m6hd().b[1][1]++, {})),
      bibleJson = _ref11.bibleJson,
      matchedVerse = _ref11.matchedVerse;

  cov_4bc08m6hd().s[6]++;
  (0, _useDeepCompareEffect.default)(() => {
    cov_4bc08m6hd().f[1]++;
    var resourceTag = (cov_4bc08m6hd().s[7]++, JSON.stringify({
      resourceLink,
      reference,
      config
    }));
    cov_4bc08m6hd().s[8]++;
    setLoadingResource(resourceTag);
    cov_4bc08m6hd().s[9]++;
    setLoadingContent(null);
    cov_4bc08m6hd().s[10]++;
    setResource({});
    cov_4bc08m6hd().s[11]++;
    (0, _core.resourceFromResourceLink)({
      resourceLink,
      reference,
      config
    }).then(_resource => {
      cov_4bc08m6hd().f[2]++;

      var __resource = (cov_4bc08m6hd().s[12]++, (cov_4bc08m6hd().b[2][0]++, _resource) && (cov_4bc08m6hd().b[2][1]++, (0, _deepFreeze.default)(_resource)));

      cov_4bc08m6hd().s[13]++;
      __resource = (cov_4bc08m6hd().b[3][0]++, __resource) || (cov_4bc08m6hd().b[3][1]++, {}); //TRICKY prevents 'use-deep-compare-effect' from crashing when resource not found (is null)

      cov_4bc08m6hd().s[14]++;

      if (_resource) {
        cov_4bc08m6hd().b[4][0]++;
        cov_4bc08m6hd().s[15]++;
        // if successful loading resource, we move to getting content
        setLoadingContent(resourceTag);
      } else {
        cov_4bc08m6hd().b[4][1]++;
      }

      cov_4bc08m6hd().s[16]++;
      setResource(__resource);
      cov_4bc08m6hd().s[17]++;
      setLoadingResource(null); // done
    }).catch(error => {
      cov_4bc08m6hd().f[3]++;
      cov_4bc08m6hd().s[18]++;
      console.warn("useRsrc() - error fetching resource for: ".concat(resourceTag), error);
      cov_4bc08m6hd().s[19]++;
      setLoadingResource(null); // done
    });
  }, [resourceLink, reference, config]);
  cov_4bc08m6hd().s[20]++;
  (0, _useDeepCompareEffect.default)(() => {
    cov_4bc08m6hd().f[4]++;

    function getFile() {
      return _getFile.apply(this, arguments);
    } // if resource loaded, then get file only if we are not fetching bible json data


    function _getFile() {
      _getFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var _resource$project, _resource$project2, _resource$project2$pa;

        var file, isTSV;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                cov_4bc08m6hd().f[5]++;
                cov_4bc08m6hd().s[21]++;
                _context.next = 4;
                return resource === null || resource === void 0 ? void 0 : (_resource$project = resource.project) === null || _resource$project === void 0 ? void 0 : _resource$project.file();

              case 4:
                file = _context.sent;
                isTSV = (cov_4bc08m6hd().s[22]++, resource === null || resource === void 0 ? void 0 : (_resource$project2 = resource.project) === null || _resource$project2 === void 0 ? void 0 : (_resource$project2$pa = _resource$project2.path) === null || _resource$project2$pa === void 0 ? void 0 : _resource$project2$pa.includes('.tsv'));
                cov_4bc08m6hd().s[23]++;

                if (isTSV) {
                  cov_4bc08m6hd().b[5][0]++;
                  cov_4bc08m6hd().s[24]++;
                  file = (0, _tsvToJson.default)(file);
                } else {
                  cov_4bc08m6hd().b[5][1]++;
                }

                cov_4bc08m6hd().s[25]++;
                setContent(file);
                cov_4bc08m6hd().s[26]++;
                setLoadingContent(null); // done

              case 12:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
      return _getFile.apply(this, arguments);
    }

    cov_4bc08m6hd().s[27]++;

    if ((cov_4bc08m6hd().b[7][0]++, Object.keys(resource).length) && (cov_4bc08m6hd().b[7][1]++, !options.getBibleJson)) {
      cov_4bc08m6hd().b[6][0]++;
      cov_4bc08m6hd().s[28]++;
      getFile();
    } else {
      cov_4bc08m6hd().b[6][1]++;
    }
  }, [config, resource]);
  cov_4bc08m6hd().s[29]++;
  (0, _useDeepCompareEffect.default)(() => {
    cov_4bc08m6hd().f[6]++;
    cov_4bc08m6hd().s[30]++;

    if (options.getBibleJson) {
      cov_4bc08m6hd().b[8][0]++;
      var matchedVerse_;
      cov_4bc08m6hd().s[31]++;

      var parseUsfm = /*#__PURE__*/function () {
        var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
          var _resource$project3;

          var _ref13, chapter, verse, _ref14, project, bibleJson, chapterJson, verseJson, verseKey;

          return regeneratorRuntime.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  cov_4bc08m6hd().f[7]++;
                  cov_4bc08m6hd().s[32]++;

                  if (resource === null || resource === void 0 ? void 0 : (_resource$project3 = resource.project) === null || _resource$project3 === void 0 ? void 0 : _resource$project3.parseUsfm) {
                    _context2.next = 10;
                    break;
                  }

                  cov_4bc08m6hd().b[9][0]++;
                  cov_4bc08m6hd().s[33]++;
                  // if no project found or no usfm
                  setContent(null);
                  cov_4bc08m6hd().s[34]++;
                  return _context2.abrupt("return", null);

                case 10:
                  cov_4bc08m6hd().b[9][1]++;

                case 11:
                  _ref13 = (cov_4bc08m6hd().s[35]++, reference), chapter = _ref13.chapter, verse = _ref13.verse;
                  _ref14 = (cov_4bc08m6hd().s[36]++, resource), project = _ref14.project;
                  cov_4bc08m6hd().s[37]++;
                  _context2.next = 16;
                  return project.parseUsfm();

                case 16:
                  bibleJson = _context2.sent;
                  cov_4bc08m6hd().s[38]++;
                  setContent(bibleJson);
                  cov_4bc08m6hd().s[39]++;

                  if (!chapter) {
                    _context2.next = 46;
                    break;
                  }

                  cov_4bc08m6hd().b[10][0]++;
                  cov_4bc08m6hd().s[40]++;
                  _context2.prev = 23;
                  chapterJson = (cov_4bc08m6hd().s[41]++, bibleJson.chapters[chapter]);
                  cov_4bc08m6hd().s[42]++;

                  if (!verse) {
                    _context2.next = 35;
                    break;
                  }

                  cov_4bc08m6hd().b[11][0]++;
                  verseJson = (cov_4bc08m6hd().s[43]++, chapterJson[verse]);
                  cov_4bc08m6hd().s[44]++;

                  if (!verseJson) {
                    cov_4bc08m6hd().b[12][0]++;
                    // if verse not found, check verse spans
                    verseKey = (cov_4bc08m6hd().s[45]++, (0, _helpers.rangeFromVerseAndVerseKeys)({
                      verseKeys: Object.keys(chapterJson),
                      verseKey: verse
                    }));
                    cov_4bc08m6hd().s[46]++;

                    if (verseKey) {
                      cov_4bc08m6hd().b[13][0]++;
                      cov_4bc08m6hd().s[47]++;
                      verseJson = chapterJson[verseKey];
                    } else {
                      cov_4bc08m6hd().b[13][1]++;
                    }

                    cov_4bc08m6hd().s[48]++;
                    matchedVerse_ = verseKey;
                  } else {
                    cov_4bc08m6hd().b[12][1]++;
                    cov_4bc08m6hd().s[49]++;
                    // verse found
                    matchedVerse_ = verse;
                  }

                  cov_4bc08m6hd().s[50]++;
                  return _context2.abrupt("return", verseJson);

                case 35:
                  cov_4bc08m6hd().b[11][1]++;
                  cov_4bc08m6hd().s[51]++;
                  return _context2.abrupt("return", chapterJson);

                case 38:
                  _context2.next = 44;
                  break;

                case 40:
                  _context2.prev = 40;
                  _context2.t0 = _context2["catch"](23);
                  cov_4bc08m6hd().s[52]++;
                  return _context2.abrupt("return", null);

                case 44:
                  _context2.next = 49;
                  break;

                case 46:
                  cov_4bc08m6hd().b[10][1]++;
                  cov_4bc08m6hd().s[53]++;
                  return _context2.abrupt("return", bibleJson);

                case 49:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2, null, [[23, 40]]);
        }));

        return function parseUsfm() {
          return _ref12.apply(this, arguments);
        };
      }();

      cov_4bc08m6hd().s[54]++;
      parseUsfm().then(function (ref) {
        cov_4bc08m6hd().f[8]++;
        cov_4bc08m6hd().s[55]++;
        setBibleRef({
          bibleJson: ref,
          matchedVerse: matchedVerse_
        });
        cov_4bc08m6hd().s[56]++;
        setLoadingContent(null); // done
      });
    } else {
      cov_4bc08m6hd().b[8][1]++;
    }
  }, [options.getBibleJson, resource]);
  cov_4bc08m6hd().s[57]++;
  return {
    state: {
      content,
      resource,
      bibleJson,
      matchedVerse,
      loadingResource,
      loadingContent
    }
  };
}

cov_4bc08m6hd().s[58]++;
useRsrc.propTypes = {
  props: _propTypes.default.shape({
    /** The configuration of the server, and fetching */
    config: _propTypes.default.shape({
      server: _propTypes.default.string.isRequired,

      /** the overriding cache settings */
      cache: _propTypes.default.shape({
        /** cache age in ms */
        maxAge: _propTypes.default.number
      })
    }),

    /** reference: chapter and verse */
    reference: _propTypes.default.object,

    /** The link to parse and fetch the resource manifest */
    resourceLink: _propTypes.default.string.isRequired
  })
};
var _default = useRsrc;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,