"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _core = require("@material-ui/core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function cov_1kil9ar1wf() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\verse-objects\\OriginalWordObject.js";
  var hash = "9feee082e2d89c8688cb910dbf0bd56ea03c63b2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\verse-objects\\OriginalWordObject.js",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 31
        }
      },
      "1": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 63
        }
      },
      "2": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 20,
          column: 67
        }
      },
      "3": {
        start: {
          line: 21,
          column: 17
        },
        end: {
          line: 21,
          column: 63
        }
      },
      "4": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 29,
          column: 4
        }
      },
      "5": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 44,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "OriginalWordObject",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 27
          }
        },
        loc: {
          start: {
            line: 16,
            column: 3
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 16
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 16
          },
          end: {
            line: 18,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 16
          },
          end: {
            line: 18,
            column: 20
          }
        }, {
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 18,
            column: 31
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 17
          },
          end: {
            line: 19,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 25
          },
          end: {
            line: 19,
            column: 58
          }
        }, {
          start: {
            line: 19,
            column: 61
          },
          end: {
            line: 19,
            column: 63
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 27
          },
          end: {
            line: 20,
            column: 62
          }
        }, {
          start: {
            line: 20,
            column: 65
          },
          end: {
            line: 20,
            column: 67
          }
        }],
        line: 20
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 17
          },
          end: {
            line: 21,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 21,
            column: 58
          }
        }, {
          start: {
            line: 21,
            column: 61
          },
          end: {
            line: 21,
            column: 63
          }
        }],
        line: 21
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9feee082e2d89c8688cb910dbf0bd56ea03c63b2"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1kil9ar1wf = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1kil9ar1wf();

function OriginalWordObject({
  verseObject,
  verseObject: {
    content,
    text,
    strong,
    lemma,
    morph
  }
}) {
  cov_1kil9ar1wf().f[0]++;

  var _text = (cov_1kil9ar1wf().s[0]++, (cov_1kil9ar1wf().b[0][0]++, text) || (cov_1kil9ar1wf().b[0][1]++, content));

  var _lemma = (cov_1kil9ar1wf().s[1]++, lemma ? (cov_1kil9ar1wf().b[1][0]++, _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("br", null), _react.default.createElement("em", null, "lemma:"), " ", lemma)) : (cov_1kil9ar1wf().b[1][1]++, ''));

  var _strong = (cov_1kil9ar1wf().s[2]++, strong ? (cov_1kil9ar1wf().b[2][0]++, _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("br", null), _react.default.createElement("em", null, "strong:"), " ", strong)) : (cov_1kil9ar1wf().b[2][1]++, ''));

  var _morph = (cov_1kil9ar1wf().s[3]++, morph ? (cov_1kil9ar1wf().b[3][0]++, _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("br", null), _react.default.createElement("em", null, "morph:"), " ", morph)) : (cov_1kil9ar1wf().b[3][1]++, ''));

  cov_1kil9ar1wf().s[4]++;
  return _react.default.createElement(_core.Typography, null, _react.default.createElement("strong", null, _text), _lemma, _strong, _morph);
}

;
cov_1kil9ar1wf().s[5]++;
OriginalWordObject.propTypes = {
  verseObject: _propTypes.default.shape({
    tag: _propTypes.default.string,
    type: _propTypes.default.string,
    content: _propTypes.default.string,
    children: _propTypes.default.arrayOf(_propTypes.default.object),
    strong: _propTypes.default.string,
    lemma: _propTypes.default.string,
    morph: _propTypes.default.string,
    occurrence: _propTypes.default.string,
    occurrences: _propTypes.default.string
  }).isRequired
};
var _default = OriginalWordObject;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZlcnNlLW9iamVjdHMvT3JpZ2luYWxXb3JkT2JqZWN0LmpzIl0sIm5hbWVzIjpbIk9yaWdpbmFsV29yZE9iamVjdCIsInZlcnNlT2JqZWN0IiwiY29udGVudCIsInRleHQiLCJzdHJvbmciLCJsZW1tYSIsIm1vcnBoIiwiX3RleHQiLCJfbGVtbWEiLCJfc3Ryb25nIiwiX21vcnBoIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic2hhcGUiLCJ0YWciLCJzdHJpbmciLCJ0eXBlIiwiY2hpbGRyZW4iLCJhcnJheU9mIiwib2JqZWN0Iiwib2NjdXJyZW5jZSIsIm9jY3VycmVuY2VzIiwiaXNSZXF1aXJlZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJQSxTQUFTQSxrQkFBVCxDQUE2QjtBQUMzQkMsRUFBQUEsV0FEMkI7QUFFM0JBLEVBQUFBLFdBQVcsRUFBRTtBQUNYQyxJQUFBQSxPQURXO0FBRVhDLElBQUFBLElBRlc7QUFHWEMsSUFBQUEsTUFIVztBQUlYQyxJQUFBQSxLQUpXO0FBS1hDLElBQUFBO0FBTFc7QUFGYyxDQUE3QixFQVNHO0FBQUE7O0FBRUQsTUFBTUMsS0FBSyw2QkFBRyw2QkFBQUosSUFBSSxrQ0FBSUQsT0FBSixDQUFQLENBQVg7O0FBQ0EsTUFBTU0sTUFBTSw2QkFBR0gsS0FBSyxnQ0FBRyw0REFBRSx3Q0FBRixFQUFPLGtEQUFQLE9BQXdCQSxLQUF4QixDQUFILGlDQUF1QyxFQUF2QyxDQUFSLENBQVo7O0FBQ0EsTUFBTUksT0FBTyw2QkFBR0wsTUFBTSxnQ0FBRyw0REFBRSx3Q0FBRixFQUFPLG1EQUFQLE9BQXlCQSxNQUF6QixDQUFILGlDQUF5QyxFQUF6QyxDQUFULENBQWI7O0FBQ0EsTUFBTU0sTUFBTSw2QkFBR0osS0FBSyxnQ0FBRyw0REFBRSx3Q0FBRixFQUFPLGtEQUFQLE9BQXdCQSxLQUF4QixDQUFILGlDQUF1QyxFQUF2QyxDQUFSLENBQVo7O0FBTEM7QUFNRCxTQUNFLDZCQUFDLGdCQUFELFFBQ0UsNkNBQVNDLEtBQVQsQ0FERixFQUVHQyxNQUZILEVBR0dDLE9BSEgsRUFJR0MsTUFKSCxDQURGO0FBUUQ7O0FBQUE7O0FBRURWLGtCQUFrQixDQUFDVyxTQUFuQixHQUErQjtBQUM3QlYsRUFBQUEsV0FBVyxFQUFFVyxtQkFBVUMsS0FBVixDQUFnQjtBQUMzQkMsSUFBQUEsR0FBRyxFQUFFRixtQkFBVUcsTUFEWTtBQUUzQkMsSUFBQUEsSUFBSSxFQUFFSixtQkFBVUcsTUFGVztBQUczQmIsSUFBQUEsT0FBTyxFQUFFVSxtQkFBVUcsTUFIUTtBQUkzQkUsSUFBQUEsUUFBUSxFQUFFTCxtQkFBVU0sT0FBVixDQUFrQk4sbUJBQVVPLE1BQTVCLENBSmlCO0FBSzNCZixJQUFBQSxNQUFNLEVBQUVRLG1CQUFVRyxNQUxTO0FBTTNCVixJQUFBQSxLQUFLLEVBQUVPLG1CQUFVRyxNQU5VO0FBTzNCVCxJQUFBQSxLQUFLLEVBQUVNLG1CQUFVRyxNQVBVO0FBUTNCSyxJQUFBQSxVQUFVLEVBQUVSLG1CQUFVRyxNQVJLO0FBUzNCTSxJQUFBQSxXQUFXLEVBQUVULG1CQUFVRztBQVRJLEdBQWhCLEVBVVZPO0FBWDBCLENBQS9CO2VBY2V0QixrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcbmltcG9ydCB7XHJcbiAgVHlwb2dyYXBoeSxcclxufSBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZSc7XHJcblxyXG5mdW5jdGlvbiBPcmlnaW5hbFdvcmRPYmplY3QgKHtcclxuICB2ZXJzZU9iamVjdCxcclxuICB2ZXJzZU9iamVjdDoge1xyXG4gICAgY29udGVudCxcclxuICAgIHRleHQsXHJcbiAgICBzdHJvbmcsXHJcbiAgICBsZW1tYSxcclxuICAgIG1vcnBoLFxyXG4gIH1cclxufSkge1xyXG5cclxuICBjb25zdCBfdGV4dCA9IHRleHQgfHwgY29udGVudDtcclxuICBjb25zdCBfbGVtbWEgPSBsZW1tYSA/IDw+PGJyLz48ZW0+bGVtbWE6PC9lbT4ge2xlbW1hfTwvPiA6ICcnO1xyXG4gIGNvbnN0IF9zdHJvbmcgPSBzdHJvbmcgPyA8Pjxici8+PGVtPnN0cm9uZzo8L2VtPiB7c3Ryb25nfTwvPiA6ICcnO1xyXG4gIGNvbnN0IF9tb3JwaCA9IG1vcnBoID8gPD48YnIvPjxlbT5tb3JwaDo8L2VtPiB7bW9ycGh9PC8+IDogJyc7XHJcbiAgcmV0dXJuIChcclxuICAgIDxUeXBvZ3JhcGh5PlxyXG4gICAgICA8c3Ryb25nPntfdGV4dH08L3N0cm9uZz5cclxuICAgICAge19sZW1tYX1cclxuICAgICAge19zdHJvbmd9XHJcbiAgICAgIHtfbW9ycGh9XHJcbiAgICA8L1R5cG9ncmFwaHk+XHJcbiAgKTtcclxufTtcclxuXHJcbk9yaWdpbmFsV29yZE9iamVjdC5wcm9wVHlwZXMgPSB7XHJcbiAgdmVyc2VPYmplY3Q6IFByb3BUeXBlcy5zaGFwZSh7XHJcbiAgICB0YWc6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICB0eXBlOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgY29udGVudDogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub2JqZWN0KSxcclxuICAgIHN0cm9uZzogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIGxlbW1hOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgbW9ycGg6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICBvY2N1cnJlbmNlOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgb2NjdXJyZW5jZXM6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgfSkuaXNSZXF1aXJlZCxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IE9yaWdpbmFsV29yZE9iamVjdDtcclxuIl19