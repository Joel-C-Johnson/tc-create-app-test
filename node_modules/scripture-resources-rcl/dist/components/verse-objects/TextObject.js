"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cov_1snfjnyr7e() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\verse-objects\\TextObject.js";
  var hash = "c948a0339053fc2215c1d1b98bd72062bb168426";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\verse-objects\\TextObject.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 76
        }
      },
      "1": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 15,
          column: 4
        }
      },
      "2": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 13,
          column: 86
        }
      },
      "3": {
        start: {
          line: 11,
          column: 52
        },
        end: {
          line: 11,
          column: 101
        }
      },
      "4": {
        start: {
          line: 12,
          column: 9
        },
        end: {
          line: 13,
          column: 86
        }
      },
      "5": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 12,
          column: 74
        }
      },
      "6": {
        start: {
          line: 13,
          column: 9
        },
        end: {
          line: 13,
          column: 86
        }
      },
      "7": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 17
        }
      },
      "8": {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 21,
          column: 4
        }
      },
      "9": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 32,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "TextObject",
        decl: {
          start: {
            line: 4,
            column: 9
          },
          end: {
            line: 4,
            column: 19
          }
        },
        loc: {
          start: {
            line: 7,
            column: 3
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 25
          },
          end: {
            line: 9,
            column: 26
          }
        },
        loc: {
          start: {
            line: 9,
            column: 42
          },
          end: {
            line: 15,
            column: 3
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 8,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 8,
            column: 33
          }
        }, {
          start: {
            line: 8,
            column: 37
          },
          end: {
            line: 8,
            column: 57
          }
        }, {
          start: {
            line: 8,
            column: 61
          },
          end: {
            line: 8,
            column: 63
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 86
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 86
          }
        }, {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 86
          }
        }],
        line: 11
      },
      "2": {
        loc: {
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 11,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 11,
            column: 18
          }
        }, {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 11,
            column: 50
          }
        }],
        line: 11
      },
      "3": {
        loc: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 13,
            column: 86
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 13,
            column: 86
          }
        }, {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 13,
            column: 86
          }
        }],
        line: 12
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c948a0339053fc2215c1d1b98bd72062bb168426"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1snfjnyr7e = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1snfjnyr7e();

function TextObject({
  verseObject,
  paragraphs
}) {
  cov_1snfjnyr7e().f[0]++;
  var lines = (cov_1snfjnyr7e().s[0]++, ((cov_1snfjnyr7e().b[0][0]++, verseObject.text) || (cov_1snfjnyr7e().b[0][1]++, verseObject.nextChar) || (cov_1snfjnyr7e().b[0][2]++, '')).split('\n'));
  var text = (cov_1snfjnyr7e().s[1]++, lines.map((line, index) => {
    cov_1snfjnyr7e().f[1]++;

    var _line;

    cov_1snfjnyr7e().s[2]++;

    if ((cov_1snfjnyr7e().b[2][0]++, paragraphs) && (cov_1snfjnyr7e().b[2][1]++, index === lines.length - 1)) {
      cov_1snfjnyr7e().b[1][0]++;
      cov_1snfjnyr7e().s[3]++;
      _line = _react.default.createElement(_react.Fragment, {
        key: index
      }, line, " ");
    } else {
      cov_1snfjnyr7e().b[1][1]++;
      cov_1snfjnyr7e().s[4]++;

      if (index === 0) {
        cov_1snfjnyr7e().b[3][0]++;
        cov_1snfjnyr7e().s[5]++;
        _line = _react.default.createElement(_react.Fragment, {
          key: index
        }, line);
      } else {
        cov_1snfjnyr7e().b[3][1]++;
        cov_1snfjnyr7e().s[6]++;
        _line = _react.default.createElement(_react.Fragment, {
          key: index
        }, [_react.default.createElement("br", {
          key: Math.random()
        }), line]);
      }
    }

    cov_1snfjnyr7e().s[7]++;
    return _line;
  }));
  cov_1snfjnyr7e().s[8]++;
  return _react.default.createElement(_react.default.Fragment, null, text);
}

;
cov_1snfjnyr7e().s[9]++;
TextObject.propTypes = {
  verseObject: _propTypes.default.shape({
    tag: _propTypes.default.string,
    type: _propTypes.default.string,
    content: _propTypes.default.string
  }).isRequired,

  /** render verses paragraphs, use explicit paragraphs */
  paragraphs: _propTypes.default.bool
};
var _default = TextObject;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZlcnNlLW9iamVjdHMvVGV4dE9iamVjdC5qcyJdLCJuYW1lcyI6WyJUZXh0T2JqZWN0IiwidmVyc2VPYmplY3QiLCJwYXJhZ3JhcGhzIiwibGluZXMiLCJ0ZXh0IiwibmV4dENoYXIiLCJzcGxpdCIsIm1hcCIsImxpbmUiLCJpbmRleCIsIl9saW5lIiwibGVuZ3RoIiwiTWF0aCIsInJhbmRvbSIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInNoYXBlIiwidGFnIiwic3RyaW5nIiwidHlwZSIsImNvbnRlbnQiLCJpc1JlcXVpcmVkIiwiYm9vbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsU0FBU0EsVUFBVCxDQUFxQjtBQUNuQkMsRUFBQUEsV0FEbUI7QUFFbkJDLEVBQUFBO0FBRm1CLENBQXJCLEVBR0c7QUFBQTtBQUNELE1BQU1DLEtBQUssNkJBQUcsQ0FBQyw2QkFBQUYsV0FBVyxDQUFDRyxJQUFaLGtDQUFvQkgsV0FBVyxDQUFDSSxRQUFoQyxrQ0FBNEMsRUFBNUMsQ0FBRCxFQUFpREMsS0FBakQsQ0FBdUQsSUFBdkQsQ0FBSCxDQUFYO0FBQ0EsTUFBTUYsSUFBSSw2QkFBR0QsS0FBSyxDQUFDSSxHQUFOLENBQVUsQ0FBQ0MsSUFBRCxFQUFPQyxLQUFQLEtBQWlCO0FBQUE7O0FBQ3RDLFFBQUlDLEtBQUo7O0FBRHNDOztBQUV0QyxRQUFJLDZCQUFBUixVQUFVLGtDQUFJTyxLQUFLLEtBQU1OLEtBQUssQ0FBQ1EsTUFBTixHQUFlLENBQTlCLENBQWQsRUFBZ0Q7QUFBQTtBQUFBO0FBQUFELE1BQUFBLEtBQUssR0FBRyw2QkFBQyxlQUFEO0FBQVUsUUFBQSxHQUFHLEVBQUVEO0FBQWYsU0FBdUJELElBQXZCLE1BQVI7QUFBaUQsS0FBakcsTUFDSztBQUFBO0FBQUE7O0FBQUEsVUFBSUMsS0FBSyxLQUFLLENBQWQsRUFBaUI7QUFBQTtBQUFBO0FBQUFDLFFBQUFBLEtBQUssR0FBRyw2QkFBQyxlQUFEO0FBQVUsVUFBQSxHQUFHLEVBQUVEO0FBQWYsV0FBdUJELElBQXZCLENBQVI7QUFBZ0QsT0FBakUsTUFDQTtBQUFBO0FBQUE7QUFBQUUsUUFBQUEsS0FBSyxHQUFHLDZCQUFDLGVBQUQ7QUFBVSxVQUFBLEdBQUcsRUFBRUQ7QUFBZixXQUF1QixDQUFDO0FBQUksVUFBQSxHQUFHLEVBQUVHLElBQUksQ0FBQ0MsTUFBTDtBQUFULFVBQUQsRUFBNEJMLElBQTVCLENBQXZCLENBQVI7QUFBNkU7QUFBQTs7QUFKNUM7QUFLdEMsV0FBT0UsS0FBUDtBQUNELEdBTlksQ0FBSCxDQUFWO0FBRkM7QUFVRCxTQUNFLDREQUNHTixJQURILENBREY7QUFLRDs7QUFBQTs7QUFFREosVUFBVSxDQUFDYyxTQUFYLEdBQXVCO0FBQ3JCYixFQUFBQSxXQUFXLEVBQUVjLG1CQUFVQyxLQUFWLENBQWdCO0FBQzNCQyxJQUFBQSxHQUFHLEVBQUVGLG1CQUFVRyxNQURZO0FBRTNCQyxJQUFBQSxJQUFJLEVBQUVKLG1CQUFVRyxNQUZXO0FBRzNCRSxJQUFBQSxPQUFPLEVBQUVMLG1CQUFVRztBQUhRLEdBQWhCLEVBSVZHLFVBTGtCOztBQU1yQjtBQUNBbkIsRUFBQUEsVUFBVSxFQUFFYSxtQkFBVU87QUFQRCxDQUF2QjtlQVVldEIsVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge0ZyYWdtZW50fSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcblxyXG5mdW5jdGlvbiBUZXh0T2JqZWN0ICh7XHJcbiAgdmVyc2VPYmplY3QsXHJcbiAgcGFyYWdyYXBocyxcclxufSkge1xyXG4gIGNvbnN0IGxpbmVzID0gKHZlcnNlT2JqZWN0LnRleHQgfHwgdmVyc2VPYmplY3QubmV4dENoYXIgfHwgJycpLnNwbGl0KCdcXG4nKTtcclxuICBjb25zdCB0ZXh0ID0gbGluZXMubWFwKChsaW5lLCBpbmRleCkgPT4ge1xyXG4gICAgbGV0IF9saW5lO1xyXG4gICAgaWYgKHBhcmFncmFwaHMgJiYgaW5kZXggPT09IChsaW5lcy5sZW5ndGggLSAxKSkgX2xpbmUgPSA8RnJhZ21lbnQga2V5PXtpbmRleH0+e2xpbmV9IDwvRnJhZ21lbnQ+O1xyXG4gICAgZWxzZSBpZiAoaW5kZXggPT09IDApIF9saW5lID0gPEZyYWdtZW50IGtleT17aW5kZXh9PntsaW5lfTwvRnJhZ21lbnQ+O1xyXG4gICAgZWxzZSBfbGluZSA9IDxGcmFnbWVudCBrZXk9e2luZGV4fT57WzxiciBrZXk9e01hdGgucmFuZG9tKCl9Lz4sIGxpbmVdfTwvRnJhZ21lbnQ+O1xyXG4gICAgcmV0dXJuIF9saW5lO1xyXG4gIH0pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAge3RleHR9XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuVGV4dE9iamVjdC5wcm9wVHlwZXMgPSB7XHJcbiAgdmVyc2VPYmplY3Q6IFByb3BUeXBlcy5zaGFwZSh7XHJcbiAgICB0YWc6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICB0eXBlOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgY29udGVudDogUHJvcFR5cGVzLnN0cmluZyxcclxuICB9KS5pc1JlcXVpcmVkLFxyXG4gIC8qKiByZW5kZXIgdmVyc2VzIHBhcmFncmFwaHMsIHVzZSBleHBsaWNpdCBwYXJhZ3JhcGhzICovXHJcbiAgcGFyYWdyYXBoczogUHJvcFR5cGVzLmJvb2wsXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUZXh0T2JqZWN0O1xyXG4iXX0=