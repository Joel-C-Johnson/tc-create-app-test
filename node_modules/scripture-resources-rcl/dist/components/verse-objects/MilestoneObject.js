"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _ = require(".");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function cov_h9pfjwam1() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\verse-objects\\MilestoneObject.js";
  var hash = "bf350a5a5ca5d16202dacdca37350c478c958253";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\verse-objects\\MilestoneObject.js",
    statementMap: {
      "0": {
        start: {
          line: 24,
          column: 2
        },
        end: {
          line: 66,
          column: 3
        }
      },
      "1": {
        start: {
          line: 26,
          column: 6
        },
        end: {
          line: 32,
          column: 8
        }
      },
      "2": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 31,
          column: 10
        }
      },
      "3": {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 33,
          column: 12
        }
      },
      "4": {
        start: {
          line: 35,
          column: 27
        },
        end: {
          line: 42,
          column: 7
        }
      },
      "5": {
        start: {
          line: 43,
          column: 27
        },
        end: {
          line: 43,
          column: 46
        }
      },
      "6": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 44,
          column: 40
        }
      },
      "7": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 61,
          column: 7
        }
      },
      "8": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 52,
          column: 10
        }
      },
      "9": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 60,
          column: 10
        }
      },
      "10": {
        start: {
          line: 62,
          column: 6
        },
        end: {
          line: 62,
          column: 12
        }
      },
      "11": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 64,
          column: 28
        }
      },
      "12": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 65,
          column: 12
        }
      },
      "13": {
        start: {
          line: 68,
          column: 2
        },
        end: {
          line: 72,
          column: 4
        }
      },
      "14": {
        start: {
          line: 75,
          column: 0
        },
        end: {
          line: 90,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "MilestoneObject",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 24
          }
        },
        loc: {
          start: {
            line: 22,
            column: 3
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 31
          },
          end: {
            line: 26,
            column: 32
          }
        },
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 31,
            column: 10
          }
        },
        line: 27
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 2
          },
          end: {
            line: 66,
            column: 3
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 33,
            column: 12
          }
        }, {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 62,
            column: 12
          }
        }, {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 12
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 27
          },
          end: {
            line: 43,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 27
          },
          end: {
            line: 43,
            column: 40
          }
        }, {
          start: {
            line: 43,
            column: 44
          },
          end: {
            line: 43,
            column: 46
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 6
          },
          end: {
            line: 61,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 6
          },
          end: {
            line: 61,
            column: 7
          }
        }, {
          start: {
            line: 45,
            column: 6
          },
          end: {
            line: 61,
            column: 7
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 45,
            column: 10
          },
          end: {
            line: 45,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 10
          },
          end: {
            line: 45,
            column: 31
          }
        }, {
          start: {
            line: 45,
            column: 35
          },
          end: {
            line: 45,
            column: 67
          }
        }],
        line: 45
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bf350a5a5ca5d16202dacdca37350c478c958253"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_h9pfjwam1 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_h9pfjwam1();

function MilestoneObject({
  originalWords,
  verseObject: {
    tag,
    children,
    strong,
    lemma,
    morph,
    occurrence,
    occurrences,
    content
  },
  disableWordPopover
}) {
  cov_h9pfjwam1().f[0]++;
  var component;
  cov_h9pfjwam1().s[0]++;

  switch (tag) {
    case 'k':
      cov_h9pfjwam1().b[0][0]++;
      cov_h9pfjwam1().s[1]++;
      component = children.map((child, index) => {
        cov_h9pfjwam1().f[1]++;
        cov_h9pfjwam1().s[2]++;
        return _react.default.createElement(_.VerseObject, {
          key: index,
          verseObject: child,
          disableWordPopover: disableWordPopover
        });
      });
      cov_h9pfjwam1().s[3]++;
      break;

    case 'zaln':
      cov_h9pfjwam1().b[0][1]++;
      var originalWord = (cov_h9pfjwam1().s[4]++, {
        strong,
        lemma,
        morph,
        occurrence,
        occurrences,
        content
      });

      var _originalWords = (cov_h9pfjwam1().s[5]++, (cov_h9pfjwam1().b[1][0]++, originalWords) || (cov_h9pfjwam1().b[1][1]++, []));

      cov_h9pfjwam1().s[6]++;

      _originalWords.push(originalWord);

      cov_h9pfjwam1().s[7]++;

      if ((cov_h9pfjwam1().b[3][0]++, children.length === 1) && (cov_h9pfjwam1().b[3][1]++, children[0].type === 'milestone')) {
        cov_h9pfjwam1().b[2][0]++;
        cov_h9pfjwam1().s[8]++;
        component = _react.default.createElement(_.VerseObject, {
          verseObject: children[0],
          originalWords: _originalWords,
          disableWordPopover: disableWordPopover
        });
      } else {
        cov_h9pfjwam1().b[2][1]++;
        cov_h9pfjwam1().s[9]++;
        component = _react.default.createElement(_.AlignedWordsObject, {
          originalWords: _originalWords,
          children: children,
          disableWordPopover: disableWordPopover
        });
      }

      cov_h9pfjwam1().s[10]++;
      break;

    default:
      cov_h9pfjwam1().b[0][2]++;
      cov_h9pfjwam1().s[11]++;
      component = _react.default.createElement("span", null);
      cov_h9pfjwam1().s[12]++;
      break;
  }

  cov_h9pfjwam1().s[13]++;
  return _react.default.createElement(_react.default.Fragment, null, component);
}

;
cov_h9pfjwam1().s[14]++;
MilestoneObject.propTypes = {
  verseObject: _propTypes.default.shape({
    tag: _propTypes.default.string,
    type: _propTypes.default.string,
    content: _propTypes.default.string,
    children: _propTypes.default.arrayOf(_propTypes.default.object),
    strong: _propTypes.default.string,
    lemma: _propTypes.default.string,
    morph: _propTypes.default.string,
    occurrence: _propTypes.default.string,
    occurrences: _propTypes.default.string
  }).isRequired,
  originalWords: _propTypes.default.array,

  /** disable popovers for aligned and original language words */
  disableWordPopover: _propTypes.default.bool
};
var _default = MilestoneObject;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZlcnNlLW9iamVjdHMvTWlsZXN0b25lT2JqZWN0LmpzIl0sIm5hbWVzIjpbIk1pbGVzdG9uZU9iamVjdCIsIm9yaWdpbmFsV29yZHMiLCJ2ZXJzZU9iamVjdCIsInRhZyIsImNoaWxkcmVuIiwic3Ryb25nIiwibGVtbWEiLCJtb3JwaCIsIm9jY3VycmVuY2UiLCJvY2N1cnJlbmNlcyIsImNvbnRlbnQiLCJkaXNhYmxlV29yZFBvcG92ZXIiLCJjb21wb25lbnQiLCJtYXAiLCJjaGlsZCIsImluZGV4Iiwib3JpZ2luYWxXb3JkIiwiX29yaWdpbmFsV29yZHMiLCJwdXNoIiwibGVuZ3RoIiwidHlwZSIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInNoYXBlIiwic3RyaW5nIiwiYXJyYXlPZiIsIm9iamVjdCIsImlzUmVxdWlyZWQiLCJhcnJheSIsImJvb2wiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUtBLFNBQVNBLGVBQVQsQ0FBMEI7QUFDeEJDLEVBQUFBLGFBRHdCO0FBRXhCQyxFQUFBQSxXQUFXLEVBQUU7QUFDWEMsSUFBQUEsR0FEVztBQUVYQyxJQUFBQSxRQUZXO0FBR1hDLElBQUFBLE1BSFc7QUFJWEMsSUFBQUEsS0FKVztBQUtYQyxJQUFBQSxLQUxXO0FBTVhDLElBQUFBLFVBTlc7QUFPWEMsSUFBQUEsV0FQVztBQVFYQyxJQUFBQTtBQVJXLEdBRlc7QUFZeEJDLEVBQUFBO0FBWndCLENBQTFCLEVBYUc7QUFBQTtBQUNELE1BQUlDLFNBQUo7QUFEQzs7QUFFRCxVQUFRVCxHQUFSO0FBQ0UsU0FBSyxHQUFMO0FBQUE7QUFBQTtBQUNFUyxNQUFBQSxTQUFTLEdBQUdSLFFBQVEsQ0FBQ1MsR0FBVCxDQUFhLENBQUNDLEtBQUQsRUFBUUMsS0FBUixLQUN2QjtBQUFBO0FBQUE7QUFBQSw0Q0FBQyxhQUFEO0FBQ0UsVUFBQSxHQUFHLEVBQUVBLEtBRFA7QUFFRSxVQUFBLFdBQVcsRUFBRUQsS0FGZjtBQUdFLFVBQUEsa0JBQWtCLEVBQUVIO0FBSHRCO0FBSUUsT0FMUSxDQUFaO0FBREY7QUFRRTs7QUFDRixTQUFLLE1BQUw7QUFBQTtBQUNFLFVBQU1LLFlBQVksNEJBQUc7QUFDbkJYLFFBQUFBLE1BRG1CO0FBRW5CQyxRQUFBQSxLQUZtQjtBQUduQkMsUUFBQUEsS0FIbUI7QUFJbkJDLFFBQUFBLFVBSm1CO0FBS25CQyxRQUFBQSxXQUxtQjtBQU1uQkMsUUFBQUE7QUFObUIsT0FBSCxDQUFsQjs7QUFRQSxVQUFJTyxjQUFjLDRCQUFHLDRCQUFBaEIsYUFBYSxpQ0FBSSxFQUFKLENBQWhCLENBQWxCOztBQVRGOztBQVVFZ0IsTUFBQUEsY0FBYyxDQUFDQyxJQUFmLENBQW9CRixZQUFwQjs7QUFWRjs7QUFXRSxVQUFJLDRCQUFBWixRQUFRLENBQUNlLE1BQVQsS0FBb0IsQ0FBcEIsaUNBQXlCZixRQUFRLENBQUMsQ0FBRCxDQUFSLENBQVlnQixJQUFaLEtBQXFCLFdBQTlDLENBQUosRUFBK0Q7QUFBQTtBQUFBO0FBQzdEUixRQUFBQSxTQUFTLEdBQ1AsNkJBQUMsYUFBRDtBQUNFLFVBQUEsV0FBVyxFQUFFUixRQUFRLENBQUMsQ0FBRCxDQUR2QjtBQUVFLFVBQUEsYUFBYSxFQUFFYSxjQUZqQjtBQUdFLFVBQUEsa0JBQWtCLEVBQUVOO0FBSHRCLFVBREY7QUFPRCxPQVJELE1BUU87QUFBQTtBQUFBO0FBQ0xDLFFBQUFBLFNBQVMsR0FDUCw2QkFBQyxvQkFBRDtBQUNFLFVBQUEsYUFBYSxFQUFFSyxjQURqQjtBQUVFLFVBQUEsUUFBUSxFQUFFYixRQUZaO0FBR0UsVUFBQSxrQkFBa0IsRUFBRU87QUFIdEIsVUFERjtBQU9EOztBQTNCSDtBQTRCRTs7QUFDRjtBQUFBO0FBQUE7QUFDRUMsTUFBQUEsU0FBUyxHQUFJLDBDQUFiO0FBREY7QUFFRTtBQXpDSjs7QUFGQztBQThDRCxTQUNFLDREQUNHQSxTQURILENBREY7QUFLRDs7QUFBQTs7QUFFRFosZUFBZSxDQUFDcUIsU0FBaEIsR0FBNEI7QUFDMUJuQixFQUFBQSxXQUFXLEVBQUVvQixtQkFBVUMsS0FBVixDQUFnQjtBQUMzQnBCLElBQUFBLEdBQUcsRUFBRW1CLG1CQUFVRSxNQURZO0FBRTNCSixJQUFBQSxJQUFJLEVBQUVFLG1CQUFVRSxNQUZXO0FBRzNCZCxJQUFBQSxPQUFPLEVBQUVZLG1CQUFVRSxNQUhRO0FBSTNCcEIsSUFBQUEsUUFBUSxFQUFFa0IsbUJBQVVHLE9BQVYsQ0FBa0JILG1CQUFVSSxNQUE1QixDQUppQjtBQUszQnJCLElBQUFBLE1BQU0sRUFBRWlCLG1CQUFVRSxNQUxTO0FBTTNCbEIsSUFBQUEsS0FBSyxFQUFFZ0IsbUJBQVVFLE1BTlU7QUFPM0JqQixJQUFBQSxLQUFLLEVBQUVlLG1CQUFVRSxNQVBVO0FBUTNCaEIsSUFBQUEsVUFBVSxFQUFFYyxtQkFBVUUsTUFSSztBQVMzQmYsSUFBQUEsV0FBVyxFQUFFYSxtQkFBVUU7QUFUSSxHQUFoQixFQVVWRyxVQVh1QjtBQVkxQjFCLEVBQUFBLGFBQWEsRUFBRXFCLG1CQUFVTSxLQVpDOztBQWExQjtBQUNBakIsRUFBQUEsa0JBQWtCLEVBQUVXLG1CQUFVTztBQWRKLENBQTVCO2VBaUJlN0IsZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcblxyXG5pbXBvcnQge1xyXG4gIFZlcnNlT2JqZWN0LFxyXG4gIEFsaWduZWRXb3Jkc09iamVjdCxcclxufSBmcm9tICcuJztcclxuXHJcbmZ1bmN0aW9uIE1pbGVzdG9uZU9iamVjdCAoe1xyXG4gIG9yaWdpbmFsV29yZHMsXHJcbiAgdmVyc2VPYmplY3Q6IHtcclxuICAgIHRhZyxcclxuICAgIGNoaWxkcmVuLFxyXG4gICAgc3Ryb25nLFxyXG4gICAgbGVtbWEsXHJcbiAgICBtb3JwaCxcclxuICAgIG9jY3VycmVuY2UsXHJcbiAgICBvY2N1cnJlbmNlcyxcclxuICAgIGNvbnRlbnQsXHJcbiAgfSxcclxuICBkaXNhYmxlV29yZFBvcG92ZXIsXHJcbn0pIHtcclxuICBsZXQgY29tcG9uZW50O1xyXG4gIHN3aXRjaCAodGFnKSB7XHJcbiAgICBjYXNlICdrJzpcclxuICAgICAgY29tcG9uZW50ID0gY2hpbGRyZW4ubWFwKChjaGlsZCwgaW5kZXgpID0+XHJcbiAgICAgICAgPFZlcnNlT2JqZWN0XHJcbiAgICAgICAgICBrZXk9e2luZGV4fVxyXG4gICAgICAgICAgdmVyc2VPYmplY3Q9e2NoaWxkfVxyXG4gICAgICAgICAgZGlzYWJsZVdvcmRQb3BvdmVyPXtkaXNhYmxlV29yZFBvcG92ZXJ9XHJcbiAgICAgICAgLz5cclxuICAgICAgKTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlICd6YWxuJzpcclxuICAgICAgY29uc3Qgb3JpZ2luYWxXb3JkID0ge1xyXG4gICAgICAgIHN0cm9uZyxcclxuICAgICAgICBsZW1tYSxcclxuICAgICAgICBtb3JwaCxcclxuICAgICAgICBvY2N1cnJlbmNlLFxyXG4gICAgICAgIG9jY3VycmVuY2VzLFxyXG4gICAgICAgIGNvbnRlbnQsXHJcbiAgICAgIH07XHJcbiAgICAgIGxldCBfb3JpZ2luYWxXb3JkcyA9IG9yaWdpbmFsV29yZHMgfHwgW107XHJcbiAgICAgIF9vcmlnaW5hbFdvcmRzLnB1c2gob3JpZ2luYWxXb3JkKTtcclxuICAgICAgaWYgKGNoaWxkcmVuLmxlbmd0aCA9PT0gMSAmJiBjaGlsZHJlblswXS50eXBlID09PSAnbWlsZXN0b25lJykge1xyXG4gICAgICAgIGNvbXBvbmVudCA9IChcclxuICAgICAgICAgIDxWZXJzZU9iamVjdFxyXG4gICAgICAgICAgICB2ZXJzZU9iamVjdD17Y2hpbGRyZW5bMF19XHJcbiAgICAgICAgICAgIG9yaWdpbmFsV29yZHM9e19vcmlnaW5hbFdvcmRzfVxyXG4gICAgICAgICAgICBkaXNhYmxlV29yZFBvcG92ZXI9e2Rpc2FibGVXb3JkUG9wb3Zlcn1cclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjb21wb25lbnQgPSAoXHJcbiAgICAgICAgICA8QWxpZ25lZFdvcmRzT2JqZWN0XHJcbiAgICAgICAgICAgIG9yaWdpbmFsV29yZHM9e19vcmlnaW5hbFdvcmRzfVxyXG4gICAgICAgICAgICBjaGlsZHJlbj17Y2hpbGRyZW59XHJcbiAgICAgICAgICAgIGRpc2FibGVXb3JkUG9wb3Zlcj17ZGlzYWJsZVdvcmRQb3BvdmVyfVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICApO1xyXG4gICAgICB9XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgZGVmYXVsdDpcclxuICAgICAgY29tcG9uZW50ID0gKDxzcGFuLz4pO1xyXG4gICAgICBicmVhaztcclxuICB9XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICB7Y29tcG9uZW50fVxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbk1pbGVzdG9uZU9iamVjdC5wcm9wVHlwZXMgPSB7XHJcbiAgdmVyc2VPYmplY3Q6IFByb3BUeXBlcy5zaGFwZSh7XHJcbiAgICB0YWc6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICB0eXBlOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgY29udGVudDogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMub2JqZWN0KSxcclxuICAgIHN0cm9uZzogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIGxlbW1hOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgbW9ycGg6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICBvY2N1cnJlbmNlOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgb2NjdXJyZW5jZXM6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgfSkuaXNSZXF1aXJlZCxcclxuICBvcmlnaW5hbFdvcmRzOiBQcm9wVHlwZXMuYXJyYXksXHJcbiAgLyoqIGRpc2FibGUgcG9wb3ZlcnMgZm9yIGFsaWduZWQgYW5kIG9yaWdpbmFsIGxhbmd1YWdlIHdvcmRzICovXHJcbiAgZGlzYWJsZVdvcmRQb3BvdmVyOiBQcm9wVHlwZXMuYm9vbCxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IE1pbGVzdG9uZU9iamVjdDsiXX0=