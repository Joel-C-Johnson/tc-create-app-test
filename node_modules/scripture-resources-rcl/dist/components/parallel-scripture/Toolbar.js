"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _core = require("@material-ui/core");

var _ = require("..");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function cov_2c6ne252fz() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\parallel-scripture\\Toolbar.js";
  var hash = "f2913a2aaea5fae4f1bc6a695ddfdb66a5f4450c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\parallel-scripture\\Toolbar.js",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 18
        },
        end: {
          line: 13,
          column: 29
        }
      },
      "1": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 31,
          column: 4
        }
      },
      "2": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 43,
          column: 2
        }
      },
      "3": {
        start: {
          line: 45,
          column: 18
        },
        end: {
          line: 52,
          column: 3
        }
      },
      "4": {
        start: {
          line: 45,
          column: 39
        },
        end: {
          line: 52,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "Toolbar",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 12,
            column: 3
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 45,
            column: 29
          },
          end: {
            line: 45,
            column: 30
          }
        },
        loc: {
          start: {
            line: 45,
            column: 39
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 45
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f2913a2aaea5fae4f1bc6a695ddfdb66a5f4450c"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2c6ne252fz = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2c6ne252fz();

function Toolbar({
  title,
  actions,
  buttons
}) {
  cov_2c6ne252fz().f[0]++;
  var classes = (cov_2c6ne252fz().s[0]++, useStyles());
  cov_2c6ne252fz().s[1]++;
  return _react.default.createElement(_core.Grid, {
    container: true,
    direction: "row",
    justify: "space-between",
    alignItems: "center",
    className: classes.root
  }, _react.default.createElement(_core.Grid, {
    item: true
  }, _react.default.createElement(_core.Typography, {
    variant: "h6",
    className: classes.title
  }, title)), _react.default.createElement(_core.Grid, {
    item: true
  }, _react.default.createElement(_.Actions, {
    actions: actions,
    buttons: buttons
  })));
}

;
cov_2c6ne252fz().s[2]++;
Toolbar.propTypes = {
  title: _propTypes.default.string.isRequired,
  actions: _propTypes.default.arrayOf(_propTypes.default.shape({
    icon: _propTypes.default.element.isRequired,
    tooltip: _propTypes.default.string.isRequired,
    onClick: _propTypes.default.func
  }).isRequired)
};
var useStyles = (cov_2c6ne252fz().s[3]++, (0, _styles.makeStyles)(theme => {
  cov_2c6ne252fz().f[1]++;
  cov_2c6ne252fz().s[4]++;
  return {
    root: {
      padding: "0",
      background: '#fff'
    },
    title: {}
  };
}));
var _default = Toolbar;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3BhcmFsbGVsLXNjcmlwdHVyZS9Ub29sYmFyLmpzIl0sIm5hbWVzIjpbIlRvb2xiYXIiLCJ0aXRsZSIsImFjdGlvbnMiLCJidXR0b25zIiwiY2xhc3NlcyIsInVzZVN0eWxlcyIsInJvb3QiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwiYXJyYXlPZiIsInNoYXBlIiwiaWNvbiIsImVsZW1lbnQiLCJ0b29sdGlwIiwib25DbGljayIsImZ1bmMiLCJ0aGVtZSIsInBhZGRpbmciLCJiYWNrZ3JvdW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsU0FBU0EsT0FBVCxDQUFrQjtBQUNoQkMsRUFBQUEsS0FEZ0I7QUFFaEJDLEVBQUFBLE9BRmdCO0FBR2hCQyxFQUFBQTtBQUhnQixDQUFsQixFQUlHO0FBQUE7QUFDRCxNQUFNQyxPQUFPLDZCQUFHQyxTQUFTLEVBQVosQ0FBYjtBQURDO0FBRUQsU0FDRSw2QkFBQyxVQUFEO0FBQ0UsSUFBQSxTQUFTLE1BRFg7QUFFRSxJQUFBLFNBQVMsRUFBQyxLQUZaO0FBR0UsSUFBQSxPQUFPLEVBQUMsZUFIVjtBQUlFLElBQUEsVUFBVSxFQUFDLFFBSmI7QUFLRSxJQUFBLFNBQVMsRUFBRUQsT0FBTyxDQUFDRTtBQUxyQixLQU9FLDZCQUFDLFVBQUQ7QUFBTSxJQUFBLElBQUk7QUFBVixLQUNFLDZCQUFDLGdCQUFEO0FBQVksSUFBQSxPQUFPLEVBQUMsSUFBcEI7QUFBeUIsSUFBQSxTQUFTLEVBQUVGLE9BQU8sQ0FBQ0g7QUFBNUMsS0FDR0EsS0FESCxDQURGLENBUEYsRUFZRSw2QkFBQyxVQUFEO0FBQU0sSUFBQSxJQUFJO0FBQVYsS0FDRSw2QkFBQyxTQUFEO0FBQVMsSUFBQSxPQUFPLEVBQUVDLE9BQWxCO0FBQTJCLElBQUEsT0FBTyxFQUFFQztBQUFwQyxJQURGLENBWkYsQ0FERjtBQWtCRDs7QUFBQTs7QUFFREgsT0FBTyxDQUFDTyxTQUFSLEdBQW9CO0FBQ2xCTixFQUFBQSxLQUFLLEVBQUVPLG1CQUFVQyxNQUFWLENBQWlCQyxVQUROO0FBRWxCUixFQUFBQSxPQUFPLEVBQUVNLG1CQUFVRyxPQUFWLENBQ1BILG1CQUFVSSxLQUFWLENBQWdCO0FBQ2RDLElBQUFBLElBQUksRUFBRUwsbUJBQVVNLE9BQVYsQ0FBa0JKLFVBRFY7QUFFZEssSUFBQUEsT0FBTyxFQUFFUCxtQkFBVUMsTUFBVixDQUFpQkMsVUFGWjtBQUdkTSxJQUFBQSxPQUFPLEVBQUVSLG1CQUFVUztBQUhMLEdBQWhCLEVBSUdQLFVBTEk7QUFGUyxDQUFwQjtBQVdBLElBQU1MLFNBQVMsNkJBQUcsd0JBQVdhLEtBQUssSUFBSztBQUFBO0FBQUE7QUFBQTtBQUNyQ1osSUFBQUEsSUFBSSxFQUFFO0FBQ0phLE1BQUFBLE9BQU8sS0FESDtBQUVKQyxNQUFBQSxVQUFVLEVBQUU7QUFGUixLQUQrQjtBQUtyQ25CLElBQUFBLEtBQUssRUFBRTtBQUw4QjtBQU90QyxDQVBpQixDQUFILENBQWY7ZUFTZUQsTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcbmltcG9ydCB7bWFrZVN0eWxlc30gZnJvbSAnQG1hdGVyaWFsLXVpL2NvcmUvc3R5bGVzJztcclxuaW1wb3J0IHtHcmlkLCBUeXBvZ3JhcGh5fSBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZSc7XHJcblxyXG5pbXBvcnQge0FjdGlvbnN9IGZyb20gJy4uJztcclxuXHJcbmZ1bmN0aW9uIFRvb2xiYXIgKHtcclxuICB0aXRsZSxcclxuICBhY3Rpb25zLFxyXG4gIGJ1dHRvbnMsXHJcbn0pIHtcclxuICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKCk7XHJcbiAgcmV0dXJuIChcclxuICAgIDxHcmlkXHJcbiAgICAgIGNvbnRhaW5lclxyXG4gICAgICBkaXJlY3Rpb249XCJyb3dcIlxyXG4gICAgICBqdXN0aWZ5PVwic3BhY2UtYmV0d2VlblwiXHJcbiAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxyXG4gICAgICBjbGFzc05hbWU9e2NsYXNzZXMucm9vdH1cclxuICAgID5cclxuICAgICAgPEdyaWQgaXRlbT5cclxuICAgICAgICA8VHlwb2dyYXBoeSB2YXJpYW50PSdoNicgY2xhc3NOYW1lPXtjbGFzc2VzLnRpdGxlfT5cclxuICAgICAgICAgIHt0aXRsZX1cclxuICAgICAgICA8L1R5cG9ncmFwaHk+XHJcbiAgICAgIDwvR3JpZD5cclxuICAgICAgPEdyaWQgaXRlbT5cclxuICAgICAgICA8QWN0aW9ucyBhY3Rpb25zPXthY3Rpb25zfSBidXR0b25zPXtidXR0b25zfSAvPlxyXG4gICAgICA8L0dyaWQ+XHJcbiAgICA8L0dyaWQ+XHJcbiAgKTtcclxufTtcclxuXHJcblRvb2xiYXIucHJvcFR5cGVzID0ge1xyXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXHJcbiAgYWN0aW9uczogUHJvcFR5cGVzLmFycmF5T2YoXHJcbiAgICBQcm9wVHlwZXMuc2hhcGUoeyAgXHJcbiAgICAgIGljb246IFByb3BUeXBlcy5lbGVtZW50LmlzUmVxdWlyZWQsXHJcbiAgICAgIHRvb2x0aXA6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICAgICAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgICB9KS5pc1JlcXVpcmVkLFxyXG4gICksXHJcbn07XHJcblxyXG5jb25zdCB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKHRoZW1lID0+ICh7XHJcbiAgcm9vdDoge1xyXG4gICAgcGFkZGluZzogYDBgLFxyXG4gICAgYmFja2dyb3VuZDogJyNmZmYnLFxyXG4gIH0sXHJcbiAgdGl0bGU6IHtcclxuICB9LFxyXG59KSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUb29sYmFyOyJdfQ==