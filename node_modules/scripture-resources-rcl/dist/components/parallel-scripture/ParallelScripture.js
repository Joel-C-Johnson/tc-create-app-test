"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _useDeepCompareEffect = _interopRequireDefault(require("use-deep-compare-effect"));

var _core = require("@material-ui/core");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Resources = require("../resources/Resources.context");

var _ = require("../../");

var _license = require("../license");

var _localStrings = require("../../core/localStrings");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cov_2i13r96qt2() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\parallel-scripture\\ParallelScripture.js";
  var hash = "f87130ea6d8bb7d2db579cfb5f0490fc2107661c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\parallel-scripture\\ParallelScripture.js",
    statementMap: {
      "0": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "1": {
        start: {
          line: 21,
          column: 30
        },
        end: {
          line: 21,
          column: 40
        }
      },
      "2": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 22,
          column: 41
        }
      },
      "3": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "4": {
        start: {
          line: 25,
          column: 31
        },
        end: {
          line: 25,
          column: 36
        }
      },
      "5": {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 29,
          column: 14
        }
      },
      "6": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 19
        }
      },
      "7": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 78,
          column: 18
        }
      },
      "8": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 76,
          column: 6
        }
      },
      "9": {
        start: {
          line: 32,
          column: 19
        },
        end: {
          line: 32,
          column: 52
        }
      },
      "10": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 74,
          column: 7
        }
      },
      "11": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 20
        }
      },
      "12": {
        start: {
          line: 40,
          column: 26
        },
        end: {
          line: 40,
          column: 31
        }
      },
      "13": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "14": {
        start: {
          line: 43,
          column: 10
        },
        end: {
          line: 43,
          column: 33
        }
      },
      "15": {
        start: {
          line: 47,
          column: 10
        },
        end: {
          line: 58,
          column: 22
        }
      },
      "16": {
        start: {
          line: 59,
          column: 26
        },
        end: {
          line: 59,
          column: 67
        }
      },
      "17": {
        start: {
          line: 61,
          column: 10
        },
        end: {
          line: 65,
          column: 12
        }
      },
      "18": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 73,
          column: 10
        }
      },
      "19": {
        start: {
          line: 75,
          column: 6
        },
        end: {
          line: 75,
          column: 20
        }
      },
      "20": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 23
        }
      },
      "21": {
        start: {
          line: 80,
          column: 25
        },
        end: {
          line: 80,
          column: 75
        }
      },
      "22": {
        start: {
          line: 81,
          column: 30
        },
        end: {
          line: 81,
          column: 51
        }
      },
      "23": {
        start: {
          line: 83,
          column: 2
        },
        end: {
          line: 98,
          column: 39
        }
      },
      "24": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "25": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 18
        }
      },
      "26": {
        start: {
          line: 87,
          column: 6
        },
        end: {
          line: 93,
          column: 7
        }
      },
      "27": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "28": {
        start: {
          line: 89,
          column: 10
        },
        end: {
          line: 89,
          column: 58
        }
      },
      "29": {
        start: {
          line: 90,
          column: 15
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "30": {
        start: {
          line: 91,
          column: 10
        },
        end: {
          line: 91,
          column: 34
        }
      },
      "31": {
        start: {
          line: 95,
          column: 22
        },
        end: {
          line: 95,
          column: 53
        }
      },
      "32": {
        start: {
          line: 96,
          column: 6
        },
        end: {
          line: 96,
          column: 24
        }
      },
      "33": {
        start: {
          line: 100,
          column: 2
        },
        end: {
          line: 116,
          column: 4
        }
      },
      "34": {
        start: {
          line: 119,
          column: 0
        },
        end: {
          line: 134,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "ParallelScripture",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 26
          }
        },
        loc: {
          start: {
            line: 19,
            column: 3
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        },
        loc: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 17
          }
        },
        loc: {
          start: {
            line: 30,
            column: 22
          },
          end: {
            line: 78,
            column: 3
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 34
          },
          end: {
            line: 31,
            column: 35
          }
        },
        loc: {
          start: {
            line: 31,
            column: 48
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 83,
            column: 17
          }
        },
        loc: {
          start: {
            line: 83,
            column: 22
          },
          end: {
            line: 98,
            column: 3
          }
        },
        line: 83
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 16
          },
          end: {
            line: 18,
            column: 20
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 74,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 74,
            column: 7
          }
        }, {
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 74,
            column: 7
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 80,
            column: 25
          },
          end: {
            line: 80,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 25
          },
          end: {
            line: 80,
            column: 34
          }
        }, {
          start: {
            line: 80,
            column: 38
          },
          end: {
            line: 80,
            column: 50
          }
        }, {
          start: {
            line: 80,
            column: 54
          },
          end: {
            line: 80,
            column: 75
          }
        }],
        line: 80
      },
      "4": {
        loc: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }],
        line: 84
      },
      "5": {
        loc: {
          start: {
            line: 87,
            column: 6
          },
          end: {
            line: 93,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 6
          },
          end: {
            line: 93,
            column: 7
          }
        }, {
          start: {
            line: 87,
            column: 6
          },
          end: {
            line: 93,
            column: 7
          }
        }],
        line: 87
      },
      "6": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }],
        line: 88
      },
      "7": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 88,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 88,
            column: 29
          }
        }, {
          start: {
            line: 88,
            column: 33
          },
          end: {
            line: 88,
            column: 48
          }
        }],
        line: 88
      },
      "8": {
        loc: {
          start: {
            line: 90,
            column: 15
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 15
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: 90,
            column: 15
          },
          end: {
            line: 92,
            column: 9
          }
        }],
        line: 90
      },
      "9": {
        loc: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 115,
            column: 15
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 5
          },
          end: {
            line: 101,
            column: 10
          }
        }, {
          start: {
            line: 101,
            column: 14
          },
          end: {
            line: 101,
            column: 20
          }
        }, {
          start: {
            line: 101,
            column: 24
          },
          end: {
            line: 101,
            column: 29
          }
        }, {
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 114,
            column: 8
          }
        }, {
          start: {
            line: 115,
            column: 10
          },
          end: {
            line: 115,
            column: 15
          }
        }],
        line: 101
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f87130ea6d8bb7d2db579cfb5f0490fc2107661c"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2i13r96qt2 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2i13r96qt2();

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ParallelScripture({
  reference,
  quote,
  onQuote,
  occurrence,
  height,
  buttons,
  open: _open = (cov_2i13r96qt2().b[0][0]++, true)
}) {
  var _resources$;

  cov_2i13r96qt2().f[0]++;

  var _ref = (cov_2i13r96qt2().s[0]++, (0, _react.useState)()),
      _ref2 = _slicedToArray(_ref, 2),
      title = _ref2[0],
      setTitle = _ref2[1];

  var _ref3 = (cov_2i13r96qt2().s[1]++, (0, _react.useState)()),
      _ref4 = _slicedToArray(_ref3, 2),
      titles = _ref4[0],
      setTitles = _ref4[1];

  var _ref5 = (cov_2i13r96qt2().s[2]++, (0, _react.useState)(_open)),
      _ref6 = _slicedToArray(_ref5, 2),
      open = _ref6[0],
      setOpen = _ref6[1];

  var _ref7 = (cov_2i13r96qt2().s[3]++, _react.default.useContext(_Resources.ResourcesContext)),
      state = _ref7.state;

  var _ref8 = (cov_2i13r96qt2().s[4]++, state),
      resources = _ref8.resources,
      books = _ref8.books;

  cov_2i13r96qt2().s[5]++;
  (0, _react.useEffect)(() => {
    cov_2i13r96qt2().f[1]++;
    cov_2i13r96qt2().s[6]++;
    setOpen(_open);
  }, [_open]);
  cov_2i13r96qt2().s[7]++;
  (0, _useDeepCompareEffect.default)(() => {
    cov_2i13r96qt2().f[2]++;

    var _titles = (cov_2i13r96qt2().s[8]++, resources.map(resource => {
      cov_2i13r96qt2().f[3]++;

      var _title = (cov_2i13r96qt2().s[9]++, "Error: ".concat(resource.resourceLink));

      cov_2i13r96qt2().s[10]++;

      if (resource.manifest) {
        cov_2i13r96qt2().b[1][0]++;

        var _ref9 = (cov_2i13r96qt2().s[11]++, resource),
            _ref9$manifest$dublin = _ref9.manifest.dublin_core,
            _title2 = _ref9$manifest$dublin.title,
            version = _ref9$manifest$dublin.version,
            rights = _ref9$manifest$dublin.rights;

        var branchOrTag = (cov_2i13r96qt2().s[12]++, 'tag');
        cov_2i13r96qt2().s[13]++;

        if (resource.tag === 'master') {
          cov_2i13r96qt2().b[2][0]++;
          cov_2i13r96qt2().s[14]++;
          branchOrTag = 'branch';
        } else {
          cov_2i13r96qt2().b[2][1]++;
        }

        var licenseLink = (cov_2i13r96qt2().s[15]++, resource.config.server + '/' + resource.username + '/' + resource.repository + '/' + 'src/' + branchOrTag + '/' + resource.tag + '/' + 'LICENSE.md');
        var viewLicense = (cov_2i13r96qt2().s[16]++, (0, _localStrings.localString)('ViewLicense') + ' ' + rights);
        var rightsIcon = (cov_2i13r96qt2().s[17]++, _react.default.createElement(_license.License, {
          rights: viewLicense,
          licenseLink: licenseLink,
          style: {
            fontSize: '1em',
            marginLeft: '0.1em'
          }
        }));
        cov_2i13r96qt2().s[18]++;
        _title = _react.default.createElement(_core.Typography, {
          variant: "caption"
        }, _title2, " v", version, rightsIcon);
      } else {
        cov_2i13r96qt2().b[1][1]++;
      }

      cov_2i13r96qt2().s[19]++;
      return _title;
    }));

    cov_2i13r96qt2().s[20]++;
    setTitles(_titles);
  }, [resources]);
  var currentProject = (cov_2i13r96qt2().s[21]++, (cov_2i13r96qt2().b[3][0]++, resources) && (cov_2i13r96qt2().b[3][1]++, resources[0]) && (cov_2i13r96qt2().b[3][2]++, (_resources$ = resources[0]) === null || _resources$ === void 0 ? void 0 : _resources$.project));
  var currentProjectTitle = (cov_2i13r96qt2().s[22]++, currentProject === null || currentProject === void 0 ? void 0 : currentProject.title);
  cov_2i13r96qt2().s[23]++;
  (0, _useDeepCompareEffect.default)(() => {
    cov_2i13r96qt2().f[4]++;
    cov_2i13r96qt2().s[24]++;

    if (currentProjectTitle) {
      cov_2i13r96qt2().b[4][0]++;
      var ref = (cov_2i13r96qt2().s[25]++, '');
      cov_2i13r96qt2().s[26]++;

      if (reference) {
        cov_2i13r96qt2().b[5][0]++;
        cov_2i13r96qt2().s[27]++;

        if ((cov_2i13r96qt2().b[7][0]++, reference.chapter) && (cov_2i13r96qt2().b[7][1]++, reference.verse)) {
          cov_2i13r96qt2().b[6][0]++;
          cov_2i13r96qt2().s[28]++;
          ref = reference.chapter + ':' + reference.verse;
        } else {
          cov_2i13r96qt2().b[6][1]++;
          cov_2i13r96qt2().s[29]++;

          if (reference.chapter) {
            cov_2i13r96qt2().b[8][0]++;
            cov_2i13r96qt2().s[30]++;
            ref = reference.chapter;
          } else {
            cov_2i13r96qt2().b[8][1]++;
          }
        }
      } else {
        cov_2i13r96qt2().b[5][1]++;
      }

      var __title = (cov_2i13r96qt2().s[31]++, currentProjectTitle + ' ' + ref);

      cov_2i13r96qt2().s[32]++;
      setTitle(__title);
    } else {
      cov_2i13r96qt2().b[4][1]++;
    }
  }, [reference, currentProjectTitle]);
  cov_2i13r96qt2().s[33]++;
  return (cov_2i13r96qt2().b[9][0]++, title) && (cov_2i13r96qt2().b[9][1]++, titles) && (cov_2i13r96qt2().b[9][2]++, books) && (cov_2i13r96qt2().b[9][3]++, _react.default.createElement(_.ScriptureTable, {
    titles: titles,
    books: books,
    title: title,
    reference: reference,
    height: height,
    quote: quote // onQuote={onQuote} // disable until round trip is working
    ,
    occurrence: occurrence,
    buttons: buttons,
    open: open,
    onOpen: setOpen
  })) || (cov_2i13r96qt2().b[9][4]++, _react.default.createElement(_react.default.Fragment, null));
}

cov_2i13r96qt2().s[34]++;
ParallelScripture.propTypes = {
  /** the reference to scroll into view */
  reference: _propTypes.default.shape({
    bookId: _propTypes.default.string,
    chapter: _propTypes.default.number,
    verse: _propTypes.default.number
  }),

  /** pass the quote in */
  quote: _propTypes.default.string.isRequired,

  /** callback to return the quote when selections made */
  onQuote: _propTypes.default.func,

  /** set the height to ensure rendering work properly   */
  height: _propTypes.default.string.isRequired,

  /** set the default open state */
  open: _propTypes.default.bool
};
var _default = ParallelScripture;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,