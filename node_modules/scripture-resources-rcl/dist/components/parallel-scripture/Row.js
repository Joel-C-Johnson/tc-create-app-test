"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _useDeepCompareEffect = _interopRequireDefault(require("use-deep-compare-effect"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _lab = require("@material-ui/lab");

var _core = require("@material-ui/core");

var _reactWaypoint = require("react-waypoint");

var _ = require("..");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cov_lr71hji13() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\parallel-scripture\\Row.js";
  var hash = "0e5ec3888c89d7cb12e83c3dc5a0cda32ae25af1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\parallel-scripture\\Row.js",
    statementMap: {
      "0": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 29
        }
      },
      "1": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 29,
          column: 3
        }
      },
      "2": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "3": {
        start: {
          line: 26,
          column: 6
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "4": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 27,
          column: 22
        }
      },
      "5": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 36,
          column: 16
        }
      },
      "6": {
        start: {
          line: 39,
          column: 28
        },
        end: {
          line: 39,
          column: 46
        }
      },
      "7": {
        start: {
          line: 40,
          column: 30
        },
        end: {
          line: 40,
          column: 56
        }
      },
      "8": {
        start: {
          line: 42,
          column: 2
        },
        end: {
          line: 67,
          column: 54
        }
      },
      "9": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "10": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 64,
          column: 8
        }
      },
      "11": {
        start: {
          line: 44,
          column: 43
        },
        end: {
          line: 44,
          column: 54
        }
      },
      "12": {
        start: {
          line: 45,
          column: 23
        },
        end: {
          line: 45,
          column: 40
        }
      },
      "13": {
        start: {
          line: 46,
          column: 22
        },
        end: {
          line: 46,
          column: 59
        }
      },
      "14": {
        start: {
          line: 47,
          column: 27
        },
        end: {
          line: 47,
          column: 58
        }
      },
      "15": {
        start: {
          line: 48,
          column: 29
        },
        end: {
          line: 48,
          column: 60
        }
      },
      "16": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 63,
          column: 10
        }
      },
      "17": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 65,
          column: 23
        }
      },
      "18": {
        start: {
          line: 69,
          column: 2
        },
        end: {
          line: 82,
          column: 4
        }
      },
      "19": {
        start: {
          line: 85,
          column: 0
        },
        end: {
          line: 88,
          column: 2
        }
      },
      "20": {
        start: {
          line: 90,
          column: 18
        },
        end: {
          line: 101,
          column: 3
        }
      },
      "21": {
        start: {
          line: 90,
          column: 39
        },
        end: {
          line: 101,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "Row",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 12
          }
        },
        loc: {
          start: {
            line: 20,
            column: 3
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 24
          }
        },
        loc: {
          start: {
            line: 24,
            column: 38
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        },
        loc: {
          start: {
            line: 42,
            column: 18
          },
          end: {
            line: 67,
            column: 3
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 44,
            column: 36
          },
          end: {
            line: 44,
            column: 37
          }
        },
        loc: {
          start: {
            line: 44,
            column: 43
          },
          end: {
            line: 44,
            column: 54
          }
        },
        line: 44
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 44,
            column: 60
          },
          end: {
            line: 44,
            column: 61
          }
        },
        loc: {
          start: {
            line: 44,
            column: 70
          },
          end: {
            line: 64,
            column: 7
          }
        },
        line: 44
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 90,
            column: 29
          },
          end: {
            line: 90,
            column: 30
          }
        },
        loc: {
          start: {
            line: 90,
            column: 39
          },
          end: {
            line: 101,
            column: 1
          }
        },
        line: 90
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        }, {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 22
          },
          end: {
            line: 46,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 31
          },
          end: {
            line: 46,
            column: 47
          }
        }, {
          start: {
            line: 46,
            column: 50
          },
          end: {
            line: 46,
            column: 59
          }
        }],
        line: 46
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 27
          },
          end: {
            line: 47,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 36
          },
          end: {
            line: 47,
            column: 53
          }
        }, {
          start: {
            line: 47,
            column: 56
          },
          end: {
            line: 47,
            column: 58
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 29
          },
          end: {
            line: 48,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 37
          },
          end: {
            line: 48,
            column: 55
          }
        }, {
          start: {
            line: 48,
            column: 58
          },
          end: {
            line: 48,
            column: 60
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 13
          },
          end: {
            line: 60,
            column: 37
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 22
          },
          end: {
            line: 60,
            column: 14
          }
        }, {
          start: {
            line: 60,
            column: 18
          },
          end: {
            line: 60,
            column: 37
          }
        }],
        line: 54
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0e5ec3888c89d7cb12e83c3dc5a0cda32ae25af1"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_lr71hji13 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_lr71hji13();

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function Row({
  columns,
  referenceId,
  verses,
  renderOffscreen
}) {
  cov_lr71hji13().f[0]++;
  var classes = (cov_lr71hji13().s[0]++, useStyles());
  cov_lr71hji13().s[1]++;

  var onVisibility = isVisible => {
    cov_lr71hji13().f[1]++;
    cov_lr71hji13().s[2]++;

    if (isVisible) {
      cov_lr71hji13().b[0][0]++;
      cov_lr71hji13().s[3]++;
      console.log('waypoint hit');
      cov_lr71hji13().s[4]++;
      setViewed(true);
    } else {
      cov_lr71hji13().b[0][1]++;
    }
  };

  var skeleton = (cov_lr71hji13().s[5]++, _react.default.createElement(_core.TableCell, {
    colSpan: columns.length,
    className: classes.cell
  }, _react.default.createElement(_reactWaypoint.Waypoint, {
    onEnter: onVisibility
  }, _react.default.createElement(_lab.Skeleton, {
    height: 110,
    width: "100%"
  }))));

  var _ref = (cov_lr71hji13().s[6]++, (0, _react.useState)(skeleton)),
      _ref2 = _slicedToArray(_ref, 2),
      cells = _ref2[0],
      setCells = _ref2[1];

  var _ref3 = (cov_lr71hji13().s[7]++, (0, _react.useState)(!renderOffscreen)),
      _ref4 = _slicedToArray(_ref3, 2),
      viewed = _ref4[0],
      setViewed = _ref4[1];

  cov_lr71hji13().s[8]++;
  (0, _useDeepCompareEffect.default)(() => {
    cov_lr71hji13().f[2]++;
    cov_lr71hji13().s[9]++;

    if (viewed) {
      cov_lr71hji13().b[1][0]++;

      var _cells = (cov_lr71hji13().s[10]++, columns.filter(col => {
        cov_lr71hji13().f[3]++;
        cov_lr71hji13().s[11]++;
        return !col.hidden;
      }).map(column => {
        cov_lr71hji13().f[4]++;

        var _verse = (cov_lr71hji13().s[12]++, verses[column.id]);

        var verse = (cov_lr71hji13().s[13]++, _verse ? (cov_lr71hji13().b[2][0]++, _verse.verseData) : (cov_lr71hji13().b[2][1]++, undefined));
        var verseTitle = (cov_lr71hji13().s[14]++, _verse ? (cov_lr71hji13().b[3][0]++, _verse.verseTitle) : (cov_lr71hji13().b[3][1]++, ""));
        var verseObjects = (cov_lr71hji13().s[15]++, verse ? (cov_lr71hji13().b[4][0]++, verse.verseObjects) : (cov_lr71hji13().b[4][1]++, [])); // WARNING: This Bible version does not include text for this reference.

        cov_lr71hji13().s[16]++;
        return _react.default.createElement(_core.TableCell, {
          key: column.id,
          className: classes.cell,
          dir: "auto"
        }, verse ? (cov_lr71hji13().b[5][0]++, _react.default.createElement(_.Verse, {
          verseObjects: verseObjects,
          verseKey: verseTitle,
          direction: "auto",
          renderOffscreen: true,
          disableWordPopover: true
        })) : (cov_lr71hji13().b[5][1]++, _react.default.createElement("span", null, "\xA0")));
      }));

      cov_lr71hji13().s[17]++;
      setCells(_cells);
    } else {
      cov_lr71hji13().b[1][1]++;
    }
  }, [classes, columns, verses, referenceId, viewed]);
  cov_lr71hji13().s[18]++;
  return _react.default.createElement(_core.TableRow, {
    className: classes.row,
    key: referenceId,
    id: referenceId,
    "data-test": 'verse-' + referenceId.replace(':', '-'),
    tabIndex: -1,
    role: "checkbox",
    hover: true
  }, cells);
}

cov_lr71hji13().s[19]++;
Row.propTypes = {
  /** bypass rendering only when visible */
  renderOffscreen: _propTypes.default.bool
};
var useStyles = (cov_lr71hji13().s[20]++, (0, _styles.makeStyles)(theme => {
  cov_lr71hji13().f[5]++;
  cov_lr71hji13().s[21]++;
  return {
    row: {},
    cell: {
      padding: theme.spacing(1),
      paddingRight: 0,
      verticalAlign: 'top',
      minWidth: '15rem',
      border: 'none',
      textAlign: 'auto'
    }
  };
}));
var _default = Row;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3BhcmFsbGVsLXNjcmlwdHVyZS9Sb3cuanMiXSwibmFtZXMiOlsiUm93IiwiY29sdW1ucyIsInJlZmVyZW5jZUlkIiwidmVyc2VzIiwicmVuZGVyT2Zmc2NyZWVuIiwiY2xhc3NlcyIsInVzZVN0eWxlcyIsIm9uVmlzaWJpbGl0eSIsImlzVmlzaWJsZSIsImNvbnNvbGUiLCJsb2ciLCJzZXRWaWV3ZWQiLCJza2VsZXRvbiIsImxlbmd0aCIsImNlbGwiLCJjZWxscyIsInNldENlbGxzIiwidmlld2VkIiwiX2NlbGxzIiwiZmlsdGVyIiwiY29sIiwiaGlkZGVuIiwibWFwIiwiY29sdW1uIiwiX3ZlcnNlIiwiaWQiLCJ2ZXJzZSIsInZlcnNlRGF0YSIsInVuZGVmaW5lZCIsInZlcnNlVGl0bGUiLCJ2ZXJzZU9iamVjdHMiLCJyb3ciLCJyZXBsYWNlIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYm9vbCIsInRoZW1lIiwicGFkZGluZyIsInNwYWNpbmciLCJwYWRkaW5nUmlnaHQiLCJ2ZXJ0aWNhbEFsaWduIiwibWluV2lkdGgiLCJib3JkZXIiLCJ0ZXh0QWxpZ24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFJQTs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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U0FBUyxFQUFFO0FBTlA7QUFIK0I7QUFXdEMsQ0FYaUIsQ0FBSCxDQUFmO2VBYWUzQyxHIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgdXNlRWZmZWN0IGZyb20gJ3VzZS1kZWVwLWNvbXBhcmUtZWZmZWN0JztcclxuXHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZS9zdHlsZXMnO1xyXG5pbXBvcnQgeyBTa2VsZXRvbiB9IGZyb20gJ0BtYXRlcmlhbC11aS9sYWInO1xyXG5pbXBvcnQge1xyXG4gIFRhYmxlQ2VsbCxcclxuICBUYWJsZVJvdyxcclxufSBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZSc7XHJcbmltcG9ydCB7IFdheXBvaW50IH0gZnJvbSAncmVhY3Qtd2F5cG9pbnQnO1xyXG5cclxuaW1wb3J0IHsgVmVyc2UgfSBmcm9tICcuLic7XHJcblxyXG5mdW5jdGlvbiBSb3coe1xyXG4gIGNvbHVtbnMsXHJcbiAgcmVmZXJlbmNlSWQsXHJcbiAgdmVyc2VzLFxyXG4gIHJlbmRlck9mZnNjcmVlbixcclxufSkge1xyXG5cclxuICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKCk7XHJcblxyXG4gIGNvbnN0IG9uVmlzaWJpbGl0eSA9IChpc1Zpc2libGUpID0+IHtcclxuICAgIGlmIChpc1Zpc2libGUpIHtcclxuICAgICAgY29uc29sZS5sb2coJ3dheXBvaW50IGhpdCcpXHJcbiAgICAgIHNldFZpZXdlZCh0cnVlKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBjb25zdCBza2VsZXRvbiA9IChcclxuICAgIDxUYWJsZUNlbGwgY29sU3Bhbj17Y29sdW1ucy5sZW5ndGh9IGNsYXNzTmFtZT17Y2xhc3Nlcy5jZWxsfT5cclxuICAgICAgPFdheXBvaW50IG9uRW50ZXI9e29uVmlzaWJpbGl0eX0+XHJcbiAgICAgICAgPFNrZWxldG9uIGhlaWdodD17MTEwfSB3aWR0aD0nMTAwJScgLz5cclxuICAgICAgPC9XYXlwb2ludD5cclxuICAgIDwvVGFibGVDZWxsPlxyXG4gICk7XHJcblxyXG4gIGNvbnN0IFtjZWxscywgc2V0Q2VsbHNdID0gdXNlU3RhdGUoc2tlbGV0b24pO1xyXG4gIGNvbnN0IFt2aWV3ZWQsIHNldFZpZXdlZF0gPSB1c2VTdGF0ZSghcmVuZGVyT2Zmc2NyZWVuKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmICh2aWV3ZWQpIHtcclxuICAgICAgY29uc3QgX2NlbGxzID0gY29sdW1ucy5maWx0ZXIoY29sID0+ICFjb2wuaGlkZGVuKS5tYXAoY29sdW1uID0+IHtcclxuICAgICAgICBjb25zdCBfdmVyc2UgPSB2ZXJzZXNbY29sdW1uLmlkXTtcclxuICAgICAgICBjb25zdCB2ZXJzZSA9IF92ZXJzZSA/IF92ZXJzZS52ZXJzZURhdGEgOiB1bmRlZmluZWQ7XHJcbiAgICAgICAgY29uc3QgdmVyc2VUaXRsZSA9IF92ZXJzZSA/IF92ZXJzZS52ZXJzZVRpdGxlIDogXCJcIjtcclxuICAgICAgICBjb25zdCB2ZXJzZU9iamVjdHMgPSB2ZXJzZSA/IHZlcnNlLnZlcnNlT2JqZWN0cyA6IFtdO1xyXG5cclxuICAgICAgICAvLyBXQVJOSU5HOiBUaGlzIEJpYmxlIHZlcnNpb24gZG9lcyBub3QgaW5jbHVkZSB0ZXh0IGZvciB0aGlzIHJlZmVyZW5jZS5cclxuXHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgIDxUYWJsZUNlbGwga2V5PXtjb2x1bW4uaWR9IGNsYXNzTmFtZT17Y2xhc3Nlcy5jZWxsfSBkaXI9J2F1dG8nPlxyXG4gICAgICAgICAgICB7dmVyc2UgPyAoPFZlcnNlXHJcbiAgICAgICAgICAgICAgdmVyc2VPYmplY3RzPXt2ZXJzZU9iamVjdHN9XHJcbiAgICAgICAgICAgICAgdmVyc2VLZXk9e3ZlcnNlVGl0bGV9XHJcbiAgICAgICAgICAgICAgZGlyZWN0aW9uPSdhdXRvJ1xyXG4gICAgICAgICAgICAgIHJlbmRlck9mZnNjcmVlblxyXG4gICAgICAgICAgICAgIGRpc2FibGVXb3JkUG9wb3ZlclxyXG4gICAgICAgICAgICAvPikgOiA8c3Bhbj4mbmJzcDs8L3NwYW4+XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIDwvVGFibGVDZWxsPlxyXG4gICAgICAgICk7XHJcbiAgICAgIH0pO1xyXG4gICAgICBzZXRDZWxscyhfY2VsbHMpO1xyXG4gICAgfVxyXG4gIH0sIFtjbGFzc2VzLCBjb2x1bW5zLCB2ZXJzZXMsIHJlZmVyZW5jZUlkLCB2aWV3ZWRdKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxUYWJsZVJvd1xyXG4gICAgICBjbGFzc05hbWU9e2NsYXNzZXMucm93fVxyXG4gICAgICBrZXk9e3JlZmVyZW5jZUlkfVxyXG4gICAgICBpZD17cmVmZXJlbmNlSWR9XHJcbiAgICAgIGRhdGEtdGVzdD17J3ZlcnNlLScgKyByZWZlcmVuY2VJZC5yZXBsYWNlKCc6JywgJy0nKX1cclxuICAgICAgdGFiSW5kZXg9ey0xfVxyXG4gICAgICByb2xlPVwiY2hlY2tib3hcIlxyXG4gICAgICBob3ZlclxyXG4gICAgPlxyXG4gICAgICB7Y2VsbHN9XHJcbiAgICA8L1RhYmxlUm93PlxyXG5cclxuICApO1xyXG59XHJcblxyXG5Sb3cucHJvcFR5cGVzID0ge1xyXG4gIC8qKiBieXBhc3MgcmVuZGVyaW5nIG9ubHkgd2hlbiB2aXNpYmxlICovXHJcbiAgcmVuZGVyT2Zmc2NyZWVuOiBQcm9wVHlwZXMuYm9vbCxcclxufTtcclxuXHJcbmNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXModGhlbWUgPT4gKHtcclxuICByb3c6IHtcclxuICB9LFxyXG4gIGNlbGw6IHtcclxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcoMSksXHJcbiAgICBwYWRkaW5nUmlnaHQ6IDAsXHJcbiAgICB2ZXJ0aWNhbEFsaWduOiAndG9wJyxcclxuICAgIG1pbldpZHRoOiAnMTVyZW0nLFxyXG4gICAgYm9yZGVyOiAnbm9uZScsXHJcbiAgICB0ZXh0QWxpZ246ICdhdXRvJyxcclxuICB9LFxyXG59KSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBSb3ciXX0=