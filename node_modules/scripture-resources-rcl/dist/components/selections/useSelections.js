"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _deepFreeze = _interopRequireDefault(require("deep-freeze"));

var _useDeepCompareEffect = _interopRequireDefault(require("use-deep-compare-effect"));

var helpers = _interopRequireWildcard(require("./helpers"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cov_243megbv76() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\selections\\useSelections.js";
  var hash = "96623eae10bc1035723830c97044dcde5de735aa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\selections\\useSelections.js",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 26,
          column: 40
        }
      },
      "1": {
        start: {
          line: 19,
          column: 24
        },
        end: {
          line: 23,
          column: 6
        }
      },
      "2": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 24
        }
      },
      "3": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 33,
          column: 42
        }
      },
      "4": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "5": {
        start: {
          line: 30,
          column: 21
        },
        end: {
          line: 30,
          column: 71
        }
      },
      "6": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 22
        }
      },
      "7": {
        start: {
          line: 35,
          column: 17
        },
        end: {
          line: 56,
          column: 20
        }
      },
      "8": {
        start: {
          line: 43,
          column: 31
        },
        end: {
          line: 43,
          column: 33
        }
      },
      "9": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "10": {
        start: {
          line: 44,
          column: 15
        },
        end: {
          line: 44,
          column: 16
        }
      },
      "11": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 50,
          column: 7
        }
      },
      "12": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 42
        }
      },
      "13": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 37
        }
      },
      "14": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 50
        }
      },
      "15": {
        start: {
          line: 54,
          column: 25
        },
        end: {
          line: 54,
          column: 72
        }
      },
      "16": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 31
        }
      },
      "17": {
        start: {
          line: 58,
          column: 21
        },
        end: {
          line: 58,
          column: 69
        }
      },
      "18": {
        start: {
          line: 58,
          column: 31
        },
        end: {
          line: 58,
          column: 69
        }
      },
      "19": {
        start: {
          line: 60,
          column: 22
        },
        end: {
          line: 60,
          column: 73
        }
      },
      "20": {
        start: {
          line: 60,
          column: 33
        },
        end: {
          line: 60,
          column: 73
        }
      },
      "21": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 65,
          column: 3
        }
      },
      "22": {
        start: {
          line: 63,
          column: 22
        },
        end: {
          line: 63,
          column: 62
        }
      },
      "23": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 24
        }
      },
      "24": {
        start: {
          line: 67,
          column: 24
        },
        end: {
          line: 70,
          column: 3
        }
      },
      "25": {
        start: {
          line: 68,
          column: 22
        },
        end: {
          line: 68,
          column: 64
        }
      },
      "26": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 24
        }
      },
      "27": {
        start: {
          line: 72,
          column: 26
        },
        end: {
          line: 75,
          column: 3
        }
      },
      "28": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 73,
          column: 67
        }
      },
      "29": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 24
        }
      },
      "30": {
        start: {
          line: 77,
          column: 27
        },
        end: {
          line: 80,
          column: 3
        }
      },
      "31": {
        start: {
          line: 78,
          column: 22
        },
        end: {
          line: 78,
          column: 67
        }
      },
      "32": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 24
        }
      },
      "33": {
        start: {
          line: 82,
          column: 2
        },
        end: {
          line: 93,
          column: 4
        }
      },
      "34": {
        start: {
          line: 96,
          column: 0
        },
        end: {
          line: 109,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "useSelections",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 22
          }
        },
        loc: {
          start: {
            line: 15,
            column: 3
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 13
          }
        },
        loc: {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 26,
            column: 3
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        },
        loc: {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 33,
            column: 3
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 35,
            column: 30
          }
        },
        loc: {
          start: {
            line: 35,
            column: 46
          },
          end: {
            line: 56,
            column: 3
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 58,
            column: 21
          },
          end: {
            line: 58,
            column: 22
          }
        },
        loc: {
          start: {
            line: 58,
            column: 31
          },
          end: {
            line: 58,
            column: 69
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 60,
            column: 22
          },
          end: {
            line: 60,
            column: 23
          }
        },
        loc: {
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 60,
            column: 73
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 62,
            column: 23
          },
          end: {
            line: 62,
            column: 24
          }
        },
        loc: {
          start: {
            line: 62,
            column: 33
          },
          end: {
            line: 65,
            column: 3
          }
        },
        line: 62
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 67,
            column: 24
          },
          end: {
            line: 67,
            column: 25
          }
        },
        loc: {
          start: {
            line: 67,
            column: 35
          },
          end: {
            line: 70,
            column: 3
          }
        },
        line: 67
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 72,
            column: 26
          },
          end: {
            line: 72,
            column: 27
          }
        },
        loc: {
          start: {
            line: 72,
            column: 36
          },
          end: {
            line: 75,
            column: 3
          }
        },
        line: 72
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 77,
            column: 27
          },
          end: {
            line: 77,
            column: 28
          }
        },
        loc: {
          start: {
            line: 77,
            column: 38
          },
          end: {
            line: 80,
            column: 3
          }
        },
        line: 77
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 20
          }
        }, {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 29,
            column: 31
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 36
          }
        }, {
          start: {
            line: 54,
            column: 40
          },
          end: {
            line: 54,
            column: 72
          }
        }],
        line: 54
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "96623eae10bc1035723830c97044dcde5de735aa"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_243megbv76 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_243megbv76();

function useSelections({
  selections,
  onSelections,
  occurrence,
  quote,
  onQuote,
  verseObjects
}) {
  cov_243megbv76().f[0]++;
  cov_243megbv76().s[0]++;
  (0, _useDeepCompareEffect.default)(() => {
    cov_243megbv76().f[1]++;

    var _selections = (cov_243megbv76().s[1]++, helpers.selectionsFromQuote({
      quote,
      verseObjects,
      occurrence
    }));

    cov_243megbv76().s[2]++;
    update(_selections);
  }, [quote, occurrence, verseObjects]);
  cov_243megbv76().s[3]++;
  (0, _useDeepCompareEffect.default)(() => {
    cov_243megbv76().f[2]++;
    cov_243megbv76().s[4]++;

    if ((cov_243megbv76().b[1][0]++, verseObjects) && (cov_243megbv76().b[1][1]++, onQuote)) {
      cov_243megbv76().b[0][0]++;

      var _quote = (cov_243megbv76().s[5]++, helpers.quoteFromVerse({
        selections,
        verseObjects
      }));

      cov_243megbv76().s[6]++;
      onQuote(_quote);
    } else {
      cov_243megbv76().b[0][1]++;
    }
  }, [selections, onQuote, verseObjects]);
  var update = (cov_243megbv76().s[7]++, (0, _react.useCallback)(_selections => {
    cov_243megbv76().f[3]++;

    // the "parsify" function is expecting an array of stringified objects
    // it will return an array of the parsed objects
    // const parsify = (array) => array.map(string => JSON.parse(string));
    // However, at present, some of the array elements are objecs, 
    // not strings. This causes the parse to fail. At present, it is
    // unknown where the mixed bag of an array is created.
    // So let's deal with it here.
    var _selectionsParsified = (cov_243megbv76().s[8]++, []);

    cov_243megbv76().s[9]++;

    for (var i = (cov_243megbv76().s[10]++, 0); i < _selections.length; i++) {
      cov_243megbv76().s[11]++;

      try {
        var x = (cov_243megbv76().s[12]++, JSON.parse(_selections[i]));
        cov_243megbv76().s[13]++;

        _selectionsParsified.push(x);
      } catch (error) {
        cov_243megbv76().s[14]++;

        _selectionsParsified.push(_selections[i]);
      }
    } //const __selections = _selections && deepFreeze(parsify(_selections));


    var __selections = (cov_243megbv76().s[15]++, (cov_243megbv76().b[2][0]++, _selections) && (cov_243megbv76().b[2][1]++, (0, _deepFreeze.default)(_selectionsParsified)));

    cov_243megbv76().s[16]++;
    onSelections(__selections);
  }, [onSelections]));
  cov_243megbv76().s[17]++;

  var isSelected = word => {
    cov_243megbv76().f[4]++;
    cov_243megbv76().s[18]++;
    return helpers.isSelected({
      word,
      selections
    });
  };

  cov_243megbv76().s[19]++;

  var areSelected = words => {
    cov_243megbv76().f[5]++;
    cov_243megbv76().s[20]++;
    return helpers.areSelected({
      words,
      selections
    });
  };

  cov_243megbv76().s[21]++;

  var addSelection = word => {
    cov_243megbv76().f[6]++;

    var _selections = (cov_243megbv76().s[22]++, helpers.addSelection({
      word,
      selections
    }));

    cov_243megbv76().s[23]++;
    update(_selections);
  };

  cov_243megbv76().s[24]++;

  var addSelections = words => {
    cov_243megbv76().f[7]++;

    var _selections = (cov_243megbv76().s[25]++, helpers.addSelections({
      words,
      selections
    }));

    cov_243megbv76().s[26]++;
    update(_selections);
  };

  cov_243megbv76().s[27]++;

  var removeSelection = word => {
    cov_243megbv76().f[8]++;

    var _selections = (cov_243megbv76().s[28]++, helpers.removeSelection({
      word,
      selections
    }));

    cov_243megbv76().s[29]++;
    update(_selections);
  };

  cov_243megbv76().s[30]++;

  var removeSelections = words => {
    cov_243megbv76().f[9]++;

    var _selections = (cov_243megbv76().s[31]++, helpers.removeSelections({
      words,
      selections
    }));

    cov_243megbv76().s[32]++;
    update(_selections);
  };

  cov_243megbv76().s[33]++;
  return {
    state: selections,
    actions: {
      update,
      isSelected,
      areSelected,
      addSelection,
      addSelections,
      removeSelection,
      removeSelections
    }
  };
}

;
cov_243megbv76().s[34]++;
useSelections.propTypes = {
  /** words in a selection */
  selections: _propTypes.default.array,

  /** action taken after a selection is made */
  onSelections: _propTypes.default.func.isRequired,

  /** the quote to be selected */
  quote: _propTypes.default.string.isRequired,

  /** the verses where quote may be found */
  verseObjects: _propTypes.default.array,

  /** if quote occurs mulitple times, this is the occurence of the one selected */
  occurrence: _propTypes.default.number,

  /** action taken when quote is provided */
  onQuote: _propTypes.default.func
};
var _default = useSelections;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,