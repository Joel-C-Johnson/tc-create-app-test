"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useHandleCopy = useHandleCopy;

var _react = require("react");

function cov_1ueagjgd4b() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\verses\\helpers.js";
  var hash = "7af753918cb1dc0d050bca545b5c5f3a01dd66ee";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\verses\\helpers.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 21
        },
        end: {
          line: 8,
          column: 10
        }
      },
      "1": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 47
        }
      },
      "2": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 48
        }
      },
      "3": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 23
        }
      },
      "4": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 19,
          column: 23
        }
      },
      "5": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 13,
          column: 5
        }
      },
      "6": {
        start: {
          line: 12,
          column: 6
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "7": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "8": {
        start: {
          line: 15,
          column: 6
        },
        end: {
          line: 17,
          column: 7
        }
      },
      "9": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 51
        }
      }
    },
    fnMap: {
      "0": {
        name: "useHandleCopy",
        decl: {
          start: {
            line: 3,
            column: 16
          },
          end: {
            line: 3,
            column: 29
          }
        },
        loc: {
          start: {
            line: 3,
            column: 34
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 3
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 4,
            column: 33
          },
          end: {
            line: 4,
            column: 34
          }
        },
        loc: {
          start: {
            line: 4,
            column: 40
          },
          end: {
            line: 8,
            column: 5
          }
        },
        line: 4
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 10,
            column: 12
          },
          end: {
            line: 10,
            column: 13
          }
        },
        loc: {
          start: {
            line: 10,
            column: 18
          },
          end: {
            line: 19,
            column: 3
          }
        },
        line: 10
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 12
          }
        },
        loc: {
          start: {
            line: 14,
            column: 17
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        }, {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 17,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 17,
            column: 7
          }
        }, {
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 17,
            column: 7
          }
        }],
        line: 15
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7af753918cb1dc0d050bca545b5c5f3a01dd66ee"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1ueagjgd4b = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1ueagjgd4b();

function useHandleCopy(el) {
  cov_1ueagjgd4b().f[0]++;
  var handleCopy = (cov_1ueagjgd4b().s[0]++, (0, _react.useCallback)(e => {
    cov_1ueagjgd4b().f[1]++;
    var text = (cov_1ueagjgd4b().s[1]++, window.getSelection().toString());
    cov_1ueagjgd4b().s[2]++;
    e.clipboardData.setData('text/plain', text);
    cov_1ueagjgd4b().s[3]++;
    e.preventDefault();
  }, []));
  cov_1ueagjgd4b().s[4]++;
  (0, _react.useEffect)(() => {
    cov_1ueagjgd4b().f[2]++;
    cov_1ueagjgd4b().s[5]++;

    if (el) {
      cov_1ueagjgd4b().b[0][0]++;
      cov_1ueagjgd4b().s[6]++;
      el.addEventListener('copy', handleCopy);
    } else {
      cov_1ueagjgd4b().b[0][1]++;
    }

    ;
    cov_1ueagjgd4b().s[7]++;
    return () => {
      cov_1ueagjgd4b().f[3]++;
      cov_1ueagjgd4b().s[8]++;

      if (el) {
        cov_1ueagjgd4b().b[1][0]++;
        cov_1ueagjgd4b().s[9]++;
        el.removeEventListener('copy', handleCopy);
      } else {
        cov_1ueagjgd4b().b[1][1]++;
      }
    };
  }, [el, handleCopy]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZlcnNlcy9oZWxwZXJzLmpzIl0sIm5hbWVzIjpbInVzZUhhbmRsZUNvcHkiLCJlbCIsImhhbmRsZUNvcHkiLCJlIiwidGV4dCIsIndpbmRvdyIsImdldFNlbGVjdGlvbiIsInRvU3RyaW5nIiwiY2xpcGJvYXJkRGF0YSIsInNldERhdGEiLCJwcmV2ZW50RGVmYXVsdCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFTyxTQUFTQSxhQUFULENBQXVCQyxFQUF2QixFQUEyQjtBQUFBO0FBQ2hDLE1BQU1DLFVBQVUsNkJBQUcsd0JBQWFDLENBQUQsSUFBTztBQUFBO0FBQ3BDLFFBQUlDLElBQUksNkJBQUdDLE1BQU0sQ0FBQ0MsWUFBUCxHQUFzQkMsUUFBdEIsRUFBSCxDQUFSO0FBRG9DO0FBRXBDSixJQUFBQSxDQUFDLENBQUNLLGFBQUYsQ0FBZ0JDLE9BQWhCLENBQXdCLFlBQXhCLEVBQXNDTCxJQUF0QztBQUZvQztBQUdwQ0QsSUFBQUEsQ0FBQyxDQUFDTyxjQUFGO0FBQ0MsR0FKZ0IsRUFJZCxFQUpjLENBQUgsQ0FBaEI7QUFEZ0M7QUFPaEMsd0JBQVUsTUFBTTtBQUFBO0FBQUE7O0FBQ2QsUUFBSVQsRUFBSixFQUFRO0FBQUE7QUFBQTtBQUNOQSxNQUFBQSxFQUFFLENBQUNVLGdCQUFILENBQW9CLE1BQXBCLEVBQTRCVCxVQUE1QjtBQUNELEtBRkQ7QUFBQTtBQUFBOztBQUVDO0FBSGE7QUFJZCxXQUFPLE1BQU07QUFBQTtBQUFBOztBQUNYLFVBQUlELEVBQUosRUFBUTtBQUFBO0FBQUE7QUFDTkEsUUFBQUEsRUFBRSxDQUFDVyxtQkFBSCxDQUF1QixNQUF2QixFQUErQlYsVUFBL0I7QUFDRCxPQUZEO0FBQUE7QUFBQTtBQUdELEtBSkQ7QUFLRCxHQVRELEVBU0csQ0FBQ0QsRUFBRCxFQUFLQyxVQUFMLENBVEg7QUFVRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VIYW5kbGVDb3B5KGVsKSB7XHJcbiAgY29uc3QgaGFuZGxlQ29weSA9IHVzZUNhbGxiYWNrKChlKSA9PiB7XHJcbiAgICBsZXQgdGV4dCA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKS50b1N0cmluZygpO1xyXG4gICAgZS5jbGlwYm9hcmREYXRhLnNldERhdGEoJ3RleHQvcGxhaW4nLCB0ZXh0KTtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0sIFtdKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmIChlbCkge1xyXG4gICAgICBlbC5hZGRFdmVudExpc3RlbmVyKCdjb3B5JywgaGFuZGxlQ29weSk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgaWYgKGVsKSB7XHJcbiAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignY29weScsIGhhbmRsZUNvcHkpO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gIH0sIFtlbCwgaGFuZGxlQ29weV0pO1xyXG59Il19