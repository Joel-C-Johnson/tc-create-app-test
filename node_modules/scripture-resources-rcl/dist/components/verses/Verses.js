"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Verses = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _ = require(".");

var _core = require("../../core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cov_wivg89lfm() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\verses\\Verses.js";
  var hash = "83e8cc8ea8145ba3446da2614e2fcfb7906b287e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\verses\\Verses.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 63,
          column: 1
        }
      },
      "1": {
        start: {
          line: 17,
          column: 18
        },
        end: {
          line: 17,
          column: 29
        }
      },
      "2": {
        start: {
          line: 18,
          column: 29
        },
        end: {
          line: 18,
          column: 39
        }
      },
      "3": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "4": {
        start: {
          line: 20,
          column: 25
        },
        end: {
          line: 20,
          column: 35
        }
      },
      "5": {
        start: {
          line: 21,
          column: 22
        },
        end: {
          line: 21,
          column: 41
        }
      },
      "6": {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 30,
          column: 26
        }
      },
      "7": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "8": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 94
        }
      },
      "9": {
        start: {
          line: 25,
          column: 68
        },
        end: {
          line: 25,
          column: 84
        }
      },
      "10": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 26,
          column: 40
        }
      },
      "11": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 28,
          column: 26
        }
      },
      "12": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 27,
          column: 32
        }
      },
      "13": {
        start: {
          line: 28,
          column: 11
        },
        end: {
          line: 28,
          column: 26
        }
      },
      "14": {
        start: {
          line: 32,
          column: 2
        },
        end: {
          line: 54,
          column: 64
        }
      },
      "15": {
        start: {
          line: 33,
          column: 19
        },
        end: {
          line: 33,
          column: 21
        }
      },
      "16": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 51,
          column: 7
        }
      },
      "17": {
        start: {
          line: 35,
          column: 29
        },
        end: {
          line: 35,
          column: 45
        }
      },
      "18": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 46,
          column: 10
        }
      },
      "19": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 50,
          column: 32
        }
      },
      "20": {
        start: {
          line: 48,
          column: 32
        },
        end: {
          line: 48,
          column: 48
        }
      },
      "21": {
        start: {
          line: 49,
          column: 11
        },
        end: {
          line: 50,
          column: 32
        }
      },
      "22": {
        start: {
          line: 49,
          column: 36
        },
        end: {
          line: 49,
          column: 51
        }
      },
      "23": {
        start: {
          line: 50,
          column: 11
        },
        end: {
          line: 50,
          column: 32
        }
      },
      "24": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 24
        }
      },
      "25": {
        start: {
          line: 56,
          column: 2
        },
        end: {
          line: 62,
          column: 4
        }
      },
      "26": {
        start: {
          line: 65,
          column: 0
        },
        end: {
          line: 77,
          column: 2
        }
      },
      "27": {
        start: {
          line: 79,
          column: 18
        },
        end: {
          line: 82,
          column: 3
        }
      },
      "28": {
        start: {
          line: 79,
          column: 39
        },
        end: {
          line: 82,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 8,
            column: 23
          }
        },
        loc: {
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 13
          }
        },
        loc: {
          start: {
            line: 23,
            column: 18
          },
          end: {
            line: 30,
            column: 3
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 53
          },
          end: {
            line: 25,
            column: 54
          }
        },
        loc: {
          start: {
            line: 25,
            column: 68
          },
          end: {
            line: 25,
            column: 84
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 13
          }
        },
        loc: {
          start: {
            line: 32,
            column: 18
          },
          end: {
            line: 54,
            column: 3
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 34,
            column: 32
          },
          end: {
            line: 34,
            column: 33
          }
        },
        loc: {
          start: {
            line: 34,
            column: 53
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 79,
            column: 29
          },
          end: {
            line: 79,
            column: 30
          }
        },
        loc: {
          start: {
            line: 79,
            column: 39
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 79
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 6
          },
          end: {
            line: 28,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 6
          },
          end: {
            line: 28,
            column: 26
          }
        }, {
          start: {
            line: 27,
            column: 6
          },
          end: {
            line: 28,
            column: 26
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 50,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 50,
            column: 32
          }
        }, {
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 50,
            column: 32
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 11
          },
          end: {
            line: 50,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 11
          },
          end: {
            line: 50,
            column: 32
          }
        }, {
          start: {
            line: 49,
            column: 11
          },
          end: {
            line: 50,
            column: 32
          }
        }],
        line: 49
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "83e8cc8ea8145ba3446da2614e2fcfb7906b287e"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_wivg89lfm = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_wivg89lfm();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

cov_wivg89lfm().s[0]++;

var Verses = ({
  verses,
  paragraphs,
  showUnsupported,
  direction,
  disableWordPopover,
  reference,
  renderOffscreen
}) => {
  cov_wivg89lfm().f[0]++;
  var classes = (cov_wivg89lfm().s[1]++, useStyles());

  var _ref = (cov_wivg89lfm().s[2]++, (0, _react.useState)()),
      _ref2 = _slicedToArray(_ref, 2),
      _verses = _ref2[0],
      setVerses = _ref2[1];

  var _ref3 = (cov_wivg89lfm().s[3]++, (0, _react.useState)()),
      _ref4 = _slicedToArray(_ref3, 2),
      _front = _ref4[0],
      setFront = _ref4[1];

  var _ref5 = (cov_wivg89lfm().s[4]++, (0, _react.useState)()),
      _ref6 = _slicedToArray(_ref5, 2),
      _back = _ref6[0],
      setBack = _ref6[1];

  var _ref7 = (cov_wivg89lfm().s[5]++, (0, _react.useState)(direction)),
      _ref8 = _slicedToArray(_ref7, 2),
      dir = _ref8[0],
      setDir = _ref8[1];

  cov_wivg89lfm().s[6]++;
  (0, _react.useEffect)(() => {
    cov_wivg89lfm().f[1]++;
    cov_wivg89lfm().s[7]++;

    if (!direction) {
      cov_wivg89lfm().b[0][0]++;
      var verseText = (cov_wivg89lfm().s[8]++, verses['1'].verseObjects.map(verseObject => {
        cov_wivg89lfm().f[2]++;
        cov_wivg89lfm().s[9]++;
        return verseObject.text;
      }).join(''));
      var hebrew = (cov_wivg89lfm().s[10]++, (0, _core.isHebrew)(verseText));
      cov_wivg89lfm().s[11]++;

      if (hebrew) {
        cov_wivg89lfm().b[1][0]++;
        cov_wivg89lfm().s[12]++;
        setDir('rtl');
      } else {
        cov_wivg89lfm().b[1][1]++;
        cov_wivg89lfm().s[13]++;
        setDir('auto');
      }
    } else {
      cov_wivg89lfm().b[0][1]++;
    }
  }, [verses, direction]);
  cov_wivg89lfm().s[14]++;
  (0, _react.useEffect)(() => {
    cov_wivg89lfm().f[3]++;

    var __verses = (cov_wivg89lfm().s[15]++, []);

    cov_wivg89lfm().s[16]++;
    Object.keys(verses).forEach((verseKey, index) => {
      cov_wivg89lfm().f[4]++;

      var _ref9 = (cov_wivg89lfm().s[17]++, verses[verseKey]),
          verseObjects = _ref9.verseObjects;

      var verse = (cov_wivg89lfm().s[18]++, _react.default.createElement(_.Verse, {
        key: index,
        verseKey: verseKey,
        verseObjects: verseObjects,
        paragraphs: paragraphs,
        showUnsupported: showUnsupported,
        disableWordPopover: disableWordPopover,
        reference: _objectSpread(_objectSpread({}, reference), {}, {
          verse: verseKey
        }),
        renderOffscreen: renderOffscreen
      }));
      cov_wivg89lfm().s[19]++;

      if (verseKey === 'front') {
        cov_wivg89lfm().b[2][0]++;
        cov_wivg89lfm().s[20]++;
        setFront(verse);
      } else {
        cov_wivg89lfm().b[2][1]++;
        cov_wivg89lfm().s[21]++;

        if (verseKey === 'back') {
          cov_wivg89lfm().b[3][0]++;
          cov_wivg89lfm().s[22]++;
          setBack(verse);
        } else {
          cov_wivg89lfm().b[3][1]++;
          cov_wivg89lfm().s[23]++;

          __verses.push(verse);
        }
      }
    });
    cov_wivg89lfm().s[24]++;
    setVerses(__verses);
  }, [verses, paragraphs, showUnsupported, disableWordPopover]);
  cov_wivg89lfm().s[25]++;
  return _react.default.createElement("div", {
    className: classes.verses,
    dir: dir
  }, _front, _verses, _back);
};

exports.Verses = Verses;
cov_wivg89lfm().s[26]++;
Verses.propTypes = {
  verses: _propTypes.default.object.isRequired,

  /** render verses paragraphs, use explicit paragraphs */
  paragraphs: _propTypes.default.bool,

  /** bypass rendering only when visible */
  renderOffscreen: _propTypes.default.bool,

  /** render unsupported usfm markers */
  showUnsupported: _propTypes.default.bool,

  /** override text direction detection */
  direction: _propTypes.default.string,

  /** disable popovers for aligned and original language words */
  disableWordPopover: _propTypes.default.bool
};
var useStyles = (cov_wivg89lfm().s[27]++, (0, _styles.makeStyles)(theme => {
  cov_wivg89lfm().f[5]++;
  cov_wivg89lfm().s[28]++;
  return {
    verses: {}
  };
}));
var _default = Verses;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,