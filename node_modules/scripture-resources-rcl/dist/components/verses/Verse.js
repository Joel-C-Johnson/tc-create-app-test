"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Verse = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _lab = require("@material-ui/lab");

var _reactWaypoint = require("react-waypoint");

var _verseObjects = require("../verse-objects");

var _helpers = require("./helpers");

var _ReferenceSelectedContext = require("../reference/ReferenceSelectedContext");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cov_2liq3mmde4() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\verses\\Verse.js";
  var hash = "14882834ab6b5f690dc5fe9dff3ffe7e9ab7b5a9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\verses\\Verse.js",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 78,
          column: 1
        }
      },
      "1": {
        start: {
          line: 21,
          column: 35
        },
        end: {
          line: 21,
          column: 71
        }
      },
      "2": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 58
        }
      },
      "3": {
        start: {
          line: 24,
          column: 19
        },
        end: {
          line: 24,
          column: 31
        }
      },
      "4": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 25,
          column: 33
        }
      },
      "5": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 27,
          column: 29
        }
      },
      "6": {
        start: {
          line: 29,
          column: 23
        },
        end: {
          line: 31,
          column: 3
        }
      },
      "7": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 35
        }
      },
      "8": {
        start: {
          line: 30,
          column: 19
        },
        end: {
          line: 30,
          column: 35
        }
      },
      "9": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 61
        }
      },
      "10": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 37,
          column: 7
        }
      },
      "11": {
        start: {
          line: 39,
          column: 28
        },
        end: {
          line: 39,
          column: 46
        }
      },
      "12": {
        start: {
          line: 40,
          column: 30
        },
        end: {
          line: 40,
          column: 56
        }
      },
      "13": {
        start: {
          line: 42,
          column: 2
        },
        end: {
          line: 62,
          column: 88
        }
      },
      "14": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "15": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 47,
          column: 7
        }
      },
      "16": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 45
        }
      },
      "17": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 58,
          column: 11
        }
      },
      "18": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 60,
          column: 23
        }
      },
      "19": {
        start: {
          line: 64,
          column: 22
        },
        end: {
          line: 68,
          column: 14
        }
      },
      "20": {
        start: {
          line: 65,
          column: 23
        },
        end: {
          line: 65,
          column: 65
        }
      },
      "21": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 35
        }
      },
      "22": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 35
        }
      },
      "23": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 18
        }
      },
      "24": {
        start: {
          line: 71,
          column: 2
        },
        end: {
          line: 71,
          column: 43
        }
      },
      "25": {
        start: {
          line: 71,
          column: 18
        },
        end: {
          line: 71,
          column: 43
        }
      },
      "26": {
        start: {
          line: 73,
          column: 2
        },
        end: {
          line: 77,
          column: 4
        }
      },
      "27": {
        start: {
          line: 74,
          column: 95
        },
        end: {
          line: 74,
          column: 117
        }
      },
      "28": {
        start: {
          line: 80,
          column: 0
        },
        end: {
          line: 91,
          column: 2
        }
      },
      "29": {
        start: {
          line: 93,
          column: 18
        },
        end: {
          line: 96,
          column: 3
        }
      },
      "30": {
        start: {
          line: 93,
          column: 39
        },
        end: {
          line: 96,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 21
          },
          end: {
            line: 11,
            column: 22
          }
        },
        loc: {
          start: {
            line: 20,
            column: 6
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 23
          },
          end: {
            line: 29,
            column: 24
          }
        },
        loc: {
          start: {
            line: 29,
            column: 38
          },
          end: {
            line: 31,
            column: 3
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        },
        loc: {
          start: {
            line: 42,
            column: 18
          },
          end: {
            line: 62,
            column: 3
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 64,
            column: 34
          },
          end: {
            line: 64,
            column: 35
          }
        },
        loc: {
          start: {
            line: 64,
            column: 47
          },
          end: {
            line: 68,
            column: 3
          }
        },
        line: 64
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 74,
            column: 89
          },
          end: {
            line: 74,
            column: 90
          }
        },
        loc: {
          start: {
            line: 74,
            column: 95
          },
          end: {
            line: 74,
            column: 117
          }
        },
        line: 74
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 93,
            column: 29
          },
          end: {
            line: 93,
            column: 30
          }
        },
        loc: {
          start: {
            line: 93,
            column: 39
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 93
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 35
          }
        }, {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 35
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 6
          },
          end: {
            line: 47,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 6
          },
          end: {
            line: 47,
            column: 7
          }
        }, {
          start: {
            line: 45,
            column: 6
          },
          end: {
            line: 47,
            column: 7
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 35
          }
        }, {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 35
          }
        }],
        line: 66
      },
      "4": {
        loc: {
          start: {
            line: 71,
            column: 2
          },
          end: {
            line: 71,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 2
          },
          end: {
            line: 71,
            column: 43
          }
        }, {
          start: {
            line: 71,
            column: 2
          },
          end: {
            line: 71,
            column: 43
          }
        }],
        line: 71
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "14882834ab6b5f690dc5fe9dff3ffe7e9ab7b5a9"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2liq3mmde4 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2liq3mmde4();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

cov_2liq3mmde4().s[0]++;

var Verse = ({
  verseKey,
  verseObjects,
  paragraphs,
  showUnsupported,
  disableWordPopover,
  direction,
  renderOffscreen,
  reference
}) => {
  var _referenceSelectedCon;

  cov_2liq3mmde4().f[0]++;
  var referenceSelectedContext = (cov_2liq3mmde4().s[1]++, (0, _react.useContext)(_ReferenceSelectedContext.ReferenceSelectedContext));
  var update = (cov_2liq3mmde4().s[2]++, referenceSelectedContext === null || referenceSelectedContext === void 0 ? void 0 : (_referenceSelectedCon = referenceSelectedContext.actions) === null || _referenceSelectedCon === void 0 ? void 0 : _referenceSelectedCon.update);
  var verseRef = (cov_2liq3mmde4().s[3]++, (0, _react.useRef)(null));
  cov_2liq3mmde4().s[4]++;
  (0, _helpers.useHandleCopy)(verseRef.current);
  var classes = (cov_2liq3mmde4().s[5]++, useStyles());
  cov_2liq3mmde4().s[6]++;

  var onVisibility = isVisible => {
    cov_2liq3mmde4().f[1]++;
    cov_2liq3mmde4().s[7]++;

    if (isVisible) {
      cov_2liq3mmde4().b[0][0]++;
      cov_2liq3mmde4().s[8]++;
      setViewed(true);
    } else {
      cov_2liq3mmde4().b[0][1]++;
    }
  };

  var width = (cov_2liq3mmde4().s[9]++, "".concat(((Math.random() + 1) / 2 * 100).toFixed(0), "%"));
  var skeleton = (cov_2liq3mmde4().s[10]++, _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactWaypoint.Waypoint, {
    onEnter: onVisibility
  }), _react.default.createElement(_lab.Skeleton, {
    height: 6,
    width: width
  })));

  var _ref = (cov_2liq3mmde4().s[11]++, (0, _react.useState)(skeleton)),
      _ref2 = _slicedToArray(_ref, 2),
      verse = _ref2[0],
      setVerse = _ref2[1];

  var _ref3 = (cov_2liq3mmde4().s[12]++, (0, _react.useState)(!renderOffscreen)),
      _ref4 = _slicedToArray(_ref3, 2),
      viewed = _ref4[0],
      setViewed = _ref4[1];

  cov_2liq3mmde4().s[13]++;
  (0, _react.useEffect)(() => {
    cov_2liq3mmde4().f[2]++;
    cov_2liq3mmde4().s[14]++;

    if (viewed) {
      cov_2liq3mmde4().b[1][0]++;
      var verseNumber;
      cov_2liq3mmde4().s[15]++;

      if (!['front', 'back'].includes(verseKey)) {
        cov_2liq3mmde4().b[2][0]++;
        cov_2liq3mmde4().s[16]++;
        verseNumber = _react.default.createElement("sup", null, verseKey, " ");
      } else {
        cov_2liq3mmde4().b[2][1]++;
      }

      var _verse = (cov_2liq3mmde4().s[17]++, _react.default.createElement(_react.default.Fragment, null, verseNumber, _react.default.createElement(_verseObjects.VerseObjects, {
        verseObjects: verseObjects,
        paragraphs: paragraphs,
        showUnsupported: showUnsupported,
        disableWordPopover: disableWordPopover
      })));

      cov_2liq3mmde4().s[18]++;
      setVerse(_verse);
    } else {
      cov_2liq3mmde4().b[1][1]++;
    }
  }, [verseKey, verseObjects, paragraphs, showUnsupported, disableWordPopover, viewed]);
  var handleClick = (cov_2liq3mmde4().s[19]++, (0, _react.useCallback)(reference => {
    cov_2liq3mmde4().f[3]++;

    var _reference = (cov_2liq3mmde4().s[20]++, _objectSpread(_objectSpread({}, reference), {}, {
      verse: parseInt(verseKey)
    }));

    cov_2liq3mmde4().s[21]++;

    if (update) {
      cov_2liq3mmde4().b[3][0]++;
      cov_2liq3mmde4().s[22]++;
      update(_reference);
    } else {
      cov_2liq3mmde4().b[3][1]++;
    }
    /** WARN: ReferenceSelectedContext is not part of useCallback dependencies! */

  }, [update]));
  var style = (cov_2liq3mmde4().s[23]++, {});
  cov_2liq3mmde4().s[24]++;

  if (paragraphs) {
    cov_2liq3mmde4().b[4][0]++;
    cov_2liq3mmde4().s[25]++;
    style.display = 'inline';
  } else {
    cov_2liq3mmde4().b[4][1]++;
  }

  cov_2liq3mmde4().s[26]++;
  return _react.default.createElement("div", {
    ref: verseRef,
    className: classes.verse,
    style: style,
    dir: direction,
    onClick: () => {
      cov_2liq3mmde4().f[4]++;
      cov_2liq3mmde4().s[27]++;
      return handleClick(reference);
    }
  }, verse);
};

exports.Verse = Verse;
cov_2liq3mmde4().s[28]++;
Verse.propTypes = {
  verseKey: _propTypes.default.string.isRequired,
  verseObjects: _propTypes.default.array.isRequired,

  /** render verses paragraphs, use explicit paragraphs */
  paragraphs: _propTypes.default.bool,

  /** bypass rendering only when visible */
  renderOffscreen: _propTypes.default.bool,

  /** render unsupported usfm markers */
  showUnsupported: _propTypes.default.bool,

  /** disable popovers for aligned and original language words */
  disableWordPopover: _propTypes.default.bool
};
var useStyles = (cov_2liq3mmde4().s[29]++, (0, _styles.makeStyles)(theme => {
  cov_2liq3mmde4().f[5]++;
  cov_2liq3mmde4().s[30]++;
  return {
    verse: {}
  };
}));
var _default = Verse;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,