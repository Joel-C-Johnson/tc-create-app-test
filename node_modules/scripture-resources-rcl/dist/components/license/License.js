"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.License = void 0;

var _react = _interopRequireWildcard(require("react"));

var _InfoOutlined = _interopRequireDefault(require("@material-ui/icons/InfoOutlined"));

var _core = require("@material-ui/core");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cov_1evfdze55m() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\license\\License.js";
  var hash = "4bee9942d068156c1f875753f5866f4a13a91791";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\components\\license\\License.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 28,
          column: 1
        }
      },
      "1": {
        start: {
          line: 14,
          column: 18
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "2": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 15,
          column: 73
        }
      },
      "3": {
        start: {
          line: 15,
          column: 41
        },
        end: {
          line: 15,
          column: 68
        }
      },
      "4": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 16,
          column: 79
        }
      },
      "5": {
        start: {
          line: 16,
          column: 34
        },
        end: {
          line: 16,
          column: 54
        }
      },
      "6": {
        start: {
          line: 16,
          column: 55
        },
        end: {
          line: 16,
          column: 77
        }
      },
      "7": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "8": {
        start: {
          line: 23,
          column: 19
        },
        end: {
          line: 23,
          column: 95
        }
      },
      "9": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 27,
          column: 4
        }
      },
      "10": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 39,
          column: 2
        }
      },
      "11": {
        start: {
          line: 40,
          column: 18
        },
        end: {
          line: 44,
          column: 3
        }
      },
      "12": {
        start: {
          line: 40,
          column: 41
        },
        end: {
          line: 44,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 23
          },
          end: {
            line: 8,
            column: 24
          }
        },
        loc: {
          start: {
            line: 12,
            column: 6
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 15,
            column: 32
          }
        },
        loc: {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 15,
            column: 68
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 16,
            column: 26
          }
        },
        loc: {
          start: {
            line: 16,
            column: 32
          },
          end: {
            line: 16,
            column: 79
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 40,
            column: 29
          },
          end: {
            line: 40,
            column: 30
          }
        },
        loc: {
          start: {
            line: 40,
            column: 41
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 40
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4bee9942d068156c1f875753f5866f4a13a91791"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_1evfdze55m = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_1evfdze55m();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

cov_1evfdze55m().s[0]++;

var License = (_ref) => {
  var rights = _ref.rights,
      licenseLink = _ref.licenseLink,
      iconProps = _objectWithoutProperties(_ref, ["rights", "licenseLink"]);

  cov_1evfdze55m().f[0]++;
  var classes = (cov_1evfdze55m().s[1]++, useStyles());
  var openLink = (cov_1evfdze55m().s[2]++, (0, _react.useCallback)(link => {
    cov_1evfdze55m().f[1]++;
    cov_1evfdze55m().s[3]++;
    return window.open(link, '_blank');
  }, []));
  cov_1evfdze55m().s[4]++;

  var onClickLicense = e => {
    cov_1evfdze55m().f[2]++;
    cov_1evfdze55m().s[5]++;
    e.stopPropagation();
    cov_1evfdze55m().s[6]++;
    openLink(licenseLink);
  };

  var _iconProps = (cov_1evfdze55m().s[7]++, _objectSpread({
    onClick: onClickLicense
  }, iconProps));

  var rightsIcon = (cov_1evfdze55m().s[8]++, _react.default.createElement(_core.Tooltip, {
    title: rights,
    arrow: true
  }, _react.default.createElement(_InfoOutlined.default, _iconProps)));
  cov_1evfdze55m().s[9]++;
  return _react.default.createElement(_react.default.Fragment, null, rightsIcon);
};

exports.License = License;
cov_1evfdze55m().s[10]++;
License.propTypes = {
  /** @ignore */
  classes: _propTypes.default.object,

  /** rights string from manifest, such as "CC BY-SA 4.0" */
  rights: _propTypes.default.string.isRequired,

  /** number of iterations before timing out */
  licenseLink: _propTypes.default.string.isRequired,

  /** The overriding CSS for this component */
  style: _propTypes.default.object
};
var useStyles = (cov_1evfdze55m().s[11]++, (0, _styles.makeStyles)(theme => {
  cov_1evfdze55m().f[3]++;
  cov_1evfdze55m().s[12]++;
  return {
    root: {}
  };
}));
var _default = License;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2xpY2Vuc2UvTGljZW5zZS5qcyJdLCJuYW1lcyI6WyJMaWNlbnNlIiwicmlnaHRzIiwibGljZW5zZUxpbmsiLCJpY29uUHJvcHMiLCJjbGFzc2VzIiwidXNlU3R5bGVzIiwib3BlbkxpbmsiLCJsaW5rIiwid2luZG93Iiwib3BlbiIsIm9uQ2xpY2tMaWNlbnNlIiwiZSIsInN0b3BQcm9wYWdhdGlvbiIsIl9pY29uUHJvcHMiLCJvbkNsaWNrIiwicmlnaHRzSWNvbiIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm9iamVjdCIsInN0cmluZyIsImlzUmVxdWlyZWQiLCJzdHlsZSIsInRoZW1lIiwicm9vdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFTyxJQUFNQSxPQUFPLEdBQUcsVUFJakI7QUFBQSxNQUhKQyxNQUdJLFFBSEpBLE1BR0k7QUFBQSxNQUZKQyxXQUVJLFFBRkpBLFdBRUk7QUFBQSxNQUREQyxTQUNDOztBQUFBO0FBRUosTUFBTUMsT0FBTyw2QkFBR0MsU0FBUyxFQUFaLENBQWI7QUFDQSxNQUFNQyxRQUFRLDZCQUFHLHdCQUFhQyxJQUFELElBQVU7QUFBQTtBQUFBO0FBQUEsV0FBQUMsTUFBTSxDQUFDQyxJQUFQLENBQVlGLElBQVosRUFBa0IsUUFBbEI7QUFBMkIsR0FBakQsRUFBbUQsRUFBbkQsQ0FBSCxDQUFkO0FBSEk7O0FBSUosTUFBTUcsY0FBYyxHQUFJQyxDQUFELElBQU87QUFBQTtBQUFBO0FBQUVBLElBQUFBLENBQUMsQ0FBQ0MsZUFBRjtBQUFGO0FBQXVCTixJQUFBQSxRQUFRLENBQUNKLFdBQUQsQ0FBUjtBQUF3QixHQUE3RTs7QUFFQSxNQUFJVyxVQUFVO0FBQ1pDLElBQUFBLE9BQU8sRUFBRUo7QUFERyxLQUVUUCxTQUZTLEVBQWQ7O0FBS0EsTUFBSVksVUFBVSw2QkFBRyw2QkFBQyxhQUFEO0FBQVMsSUFBQSxLQUFLLEVBQUVkLE1BQWhCO0FBQXdCLElBQUEsS0FBSztBQUE3QixLQUE4Qiw2QkFBQyxxQkFBRCxFQUFzQlksVUFBdEIsQ0FBOUIsQ0FBSCxDQUFkO0FBWEk7QUFhSixTQUNFLDREQUFHRSxVQUFILENBREY7QUFHRCxDQXBCTTs7OztBQXNCUGYsT0FBTyxDQUFDZ0IsU0FBUixHQUFvQjtBQUNsQjtBQUNBWixFQUFBQSxPQUFPLEVBQUVhLG1CQUFVQyxNQUZEOztBQUdsQjtBQUNBakIsRUFBQUEsTUFBTSxFQUFFZ0IsbUJBQVVFLE1BQVYsQ0FBaUJDLFVBSlA7O0FBS2xCO0FBQ0FsQixFQUFBQSxXQUFXLEVBQUVlLG1CQUFVRSxNQUFWLENBQWlCQyxVQU5aOztBQU9sQjtBQUNBQyxFQUFBQSxLQUFLLEVBQUVKLG1CQUFVQztBQVJDLENBQXBCO0FBVUEsSUFBTWIsU0FBUyw4QkFBRyx3QkFBWWlCLEtBQUQsSUFBWTtBQUFBO0FBQUE7QUFBQTtBQUN2Q0MsSUFBQUEsSUFBSSxFQUFFO0FBRGlDO0FBSXhDLENBSmlCLENBQUgsQ0FBZjtlQU1ldkIsTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IEluZm9PdXRsaW5lZEljb24gZnJvbSAnQG1hdGVyaWFsLXVpL2ljb25zL0luZm9PdXRsaW5lZCc7XHJcbmltcG9ydCB7IFRvb2x0aXAgfSBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZSc7XHJcblxyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQge21ha2VTdHlsZXN9IGZyb20gJ0BtYXRlcmlhbC11aS9jb3JlL3N0eWxlcyc7XHJcblxyXG5leHBvcnQgY29uc3QgTGljZW5zZSA9ICh7XHJcbiAgcmlnaHRzLFxyXG4gIGxpY2Vuc2VMaW5rLFxyXG4gIC4uLmljb25Qcm9wc1xyXG59KSA9PiB7XHJcblxyXG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoKTtcclxuICBjb25zdCBvcGVuTGluayA9IHVzZUNhbGxiYWNrKChsaW5rKSA9PiB3aW5kb3cub3BlbihsaW5rLCAnX2JsYW5rJyksIFtdKTtcclxuICBjb25zdCBvbkNsaWNrTGljZW5zZSA9IChlKSA9PiB7IGUuc3RvcFByb3BhZ2F0aW9uKCk7IG9wZW5MaW5rKGxpY2Vuc2VMaW5rKTsgfVxyXG4gIFxyXG4gIGxldCBfaWNvblByb3BzID0ge1xyXG4gICAgb25DbGljazogb25DbGlja0xpY2Vuc2UsXHJcbiAgICAuLi5pY29uUHJvcHNcclxuICB9O1xyXG5cclxuICBsZXQgcmlnaHRzSWNvbiA9IDxUb29sdGlwIHRpdGxlPXtyaWdodHN9IGFycm93PjxJbmZvT3V0bGluZWRJY29uIHsuLi5faWNvblByb3BzfSAvPjwvVG9vbHRpcD4gOyBcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDw+e3JpZ2h0c0ljb259PC8+XHJcbiAgKTtcclxufTtcclxuXHJcbkxpY2Vuc2UucHJvcFR5cGVzID0ge1xyXG4gIC8qKiBAaWdub3JlICovXHJcbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdCxcclxuICAvKiogcmlnaHRzIHN0cmluZyBmcm9tIG1hbmlmZXN0LCBzdWNoIGFzIFwiQ0MgQlktU0EgNC4wXCIgKi9cclxuICByaWdodHM6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICAvKiogbnVtYmVyIG9mIGl0ZXJhdGlvbnMgYmVmb3JlIHRpbWluZyBvdXQgKi9cclxuICBsaWNlbnNlTGluazogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxyXG4gIC8qKiBUaGUgb3ZlcnJpZGluZyBDU1MgZm9yIHRoaXMgY29tcG9uZW50ICovXHJcbiAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXHJcbn07XHJcbmNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoKHRoZW1lKSA9PiAoe1xyXG4gIHJvb3Q6IHtcclxuXHJcbiAgfSxcclxufSkpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgTGljZW5zZTtcclxuIl19