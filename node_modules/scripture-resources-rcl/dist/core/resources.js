"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFile = exports.parseChapter = exports.parseBook = exports.extendProject = exports.projectFromProjects = exports.getResourceProjectFile = exports.getResourceManifest = exports.parseResourceLink = exports.resourceFromResourceLink = exports.resourcesFromResourceLinks = void 0;

var _path = _interopRequireDefault(require("path"));

var _jsYamlParser = _interopRequireDefault(require("js-yaml-parser"));

var _giteaReactToolkit = require("gitea-react-toolkit");

var _usfmJs = _interopRequireDefault(require("usfm-js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function cov_15nig8q3j7() {
  var path = "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\core\\resources.js";
  var hash = "4f309ace63aac808bc10f913db1b71497af91be3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\Projects-unfoldingWord\\scripture-resources-rcl\\src\\core\\resources.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 42
        },
        end: {
          line: 23,
          column: 1
        }
      },
      "1": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 17,
          column: 3
        }
      },
      "2": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "3": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 20,
          column: 24
        },
        end: {
          line: 20,
          column: 46
        }
      },
      "5": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 22,
          column: 19
        }
      },
      "6": {
        start: {
          line: 25,
          column: 40
        },
        end: {
          line: 73,
          column: 1
        }
      },
      "7": {
        start: {
          line: 30,
          column: 29
        },
        end: {
          line: 30,
          column: 33
        }
      },
      "8": {
        start: {
          line: 32,
          column: 2
        },
        end: {
          line: 72,
          column: 3
        }
      },
      "9": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 37,
          column: 6
        }
      },
      "10": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 33
        }
      },
      "11": {
        start: {
          line: 39,
          column: 35
        },
        end: {
          line: 39,
          column: 70
        }
      },
      "12": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 36
        }
      },
      "13": {
        start: {
          line: 41,
          column: 21
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "14": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 46,
          column: 8
        }
      },
      "15": {
        start: {
          line: 48,
          column: 22
        },
        end: {
          line: 48,
          column: 78
        }
      },
      "16": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 53,
          column: 6
        }
      },
      "17": {
        start: {
          line: 54,
          column: 22
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "18": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 21
        }
      },
      "19": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 19
        }
      },
      "20": {
        start: {
          line: 66,
          column: 6
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "21": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 32
        }
      },
      "22": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 21
        }
      },
      "23": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 36
        }
      },
      "24": {
        start: {
          line: 75,
          column: 33
        },
        end: {
          line: 135,
          column: 1
        }
      },
      "25": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 55
        }
      },
      "26": {
        start: {
          line: 84,
          column: 10
        },
        end: {
          line: 84,
          column: 18
        }
      },
      "27": {
        start: {
          line: 86,
          column: 2
        },
        end: {
          line: 117,
          column: 3
        }
      },
      "28": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 91,
          column: 6
        }
      },
      "29": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 50
        }
      },
      "30": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 53
        }
      },
      "31": {
        start: {
          line: 94,
          column: 9
        },
        end: {
          line: 117,
          column: 3
        }
      },
      "32": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 75
        }
      },
      "33": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 43
        }
      },
      "34": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 99,
          column: 53
        }
      },
      "35": {
        start: {
          line: 100,
          column: 9
        },
        end: {
          line: 117,
          column: 3
        }
      },
      "36": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 103,
          column: 79
        }
      },
      "37": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 109,
          column: 20
        }
      },
      "38": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 110,
          column: 53
        }
      },
      "39": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 42
        }
      },
      "40": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 80
        }
      },
      "41": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 47
        }
      },
      "42": {
        start: {
          line: 119,
          column: 2
        },
        end: {
          line: 121,
          column: 3
        }
      },
      "43": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 56
        }
      },
      "44": {
        start: {
          line: 122,
          column: 2
        },
        end: {
          line: 122,
          column: 79
        }
      },
      "45": {
        start: {
          line: 124,
          column: 19
        },
        end: {
          line: 133,
          column: 3
        }
      },
      "46": {
        start: {
          line: 134,
          column: 2
        },
        end: {
          line: 134,
          column: 18
        }
      },
      "47": {
        start: {
          line: 137,
          column: 35
        },
        end: {
          line: 158,
          column: 1
        }
      },
      "48": {
        start: {
          line: 145,
          column: 21
        },
        end: {
          line: 145,
          column: 50
        }
      },
      "49": {
        start: {
          line: 146,
          column: 15
        },
        end: {
          line: 146,
          column: 30
        }
      },
      "50": {
        start: {
          line: 147,
          column: 19
        },
        end: {
          line: 154,
          column: 4
        }
      },
      "51": {
        start: {
          line: 155,
          column: 15
        },
        end: {
          line: 155,
          column: 65
        }
      },
      "52": {
        start: {
          line: 156,
          column: 19
        },
        end: {
          line: 156,
          column: 52
        }
      },
      "53": {
        start: {
          line: 157,
          column: 2
        },
        end: {
          line: 157,
          column: 58
        }
      },
      "54": {
        start: {
          line: 160,
          column: 38
        },
        end: {
          line: 180,
          column: 1
        }
      },
      "55": {
        start: {
          line: 169,
          column: 21
        },
        end: {
          line: 169,
          column: 50
        }
      },
      "56": {
        start: {
          line: 170,
          column: 2
        },
        end: {
          line: 170,
          column: 93
        }
      },
      "57": {
        start: {
          line: 172,
          column: 15
        },
        end: {
          line: 178,
          column: 4
        }
      },
      "58": {
        start: {
          line: 179,
          column: 2
        },
        end: {
          line: 179,
          column: 14
        }
      },
      "59": {
        start: {
          line: 182,
          column: 35
        },
        end: {
          line: 192,
          column: 1
        }
      },
      "60": {
        start: {
          line: 185,
          column: 21
        },
        end: {
          line: 187,
          column: 15
        }
      },
      "61": {
        start: {
          line: 188,
          column: 18
        },
        end: {
          line: 190,
          column: 6
        }
      },
      "62": {
        start: {
          line: 189,
          column: 17
        },
        end: {
          line: 189,
          column: 50
        }
      },
      "63": {
        start: {
          line: 191,
          column: 2
        },
        end: {
          line: 191,
          column: 17
        }
      },
      "64": {
        start: {
          line: 194,
          column: 29
        },
        end: {
          line: 234,
          column: 1
        }
      },
      "65": {
        start: {
          line: 197,
          column: 17
        },
        end: {
          line: 197,
          column: 31
        }
      },
      "66": {
        start: {
          line: 198,
          column: 38
        },
        end: {
          line: 198,
          column: 46
        }
      },
      "67": {
        start: {
          line: 201,
          column: 2
        },
        end: {
          line: 206,
          column: 7
        }
      },
      "68": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 206,
          column: 6
        }
      },
      "69": {
        start: {
          line: 208,
          column: 2
        },
        end: {
          line: 232,
          column: 3
        }
      },
      "70": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 231,
          column: 6
        }
      },
      "71": {
        start: {
          line: 210,
          column: 20
        },
        end: {
          line: 210,
          column: 37
        }
      },
      "72": {
        start: {
          line: 213,
          column: 6
        },
        end: {
          line: 217,
          column: 7
        }
      },
      "73": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 68
        }
      },
      "74": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 54
        }
      },
      "75": {
        start: {
          line: 219,
          column: 18
        },
        end: {
          line: 219,
          column: 35
        }
      },
      "76": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 223,
          column: 21
        }
      },
      "77": {
        start: {
          line: 225,
          column: 6
        },
        end: {
          line: 229,
          column: 8
        }
      },
      "78": {
        start: {
          line: 230,
          column: 6
        },
        end: {
          line: 230,
          column: 18
        }
      },
      "79": {
        start: {
          line: 233,
          column: 2
        },
        end: {
          line: 233,
          column: 18
        }
      },
      "80": {
        start: {
          line: 236,
          column: 25
        },
        end: {
          line: 241,
          column: 1
        }
      },
      "81": {
        start: {
          line: 237,
          column: 2
        },
        end: {
          line: 237,
          column: 41
        }
      },
      "82": {
        start: {
          line: 238,
          column: 15
        },
        end: {
          line: 238,
          column: 43
        }
      },
      "83": {
        start: {
          line: 239,
          column: 15
        },
        end: {
          line: 239,
          column: 34
        }
      },
      "84": {
        start: {
          line: 240,
          column: 2
        },
        end: {
          line: 240,
          column: 14
        }
      },
      "85": {
        start: {
          line: 243,
          column: 28
        },
        end: {
          line: 267,
          column: 1
        }
      },
      "86": {
        start: {
          line: 244,
          column: 15
        },
        end: {
          line: 244,
          column: 35
        }
      },
      "87": {
        start: {
          line: 246,
          column: 2
        },
        end: {
          line: 266,
          column: 3
        }
      },
      "88": {
        start: {
          line: 247,
          column: 24
        },
        end: {
          line: 247,
          column: 51
        }
      },
      "89": {
        start: {
          line: 248,
          column: 24
        },
        end: {
          line: 248,
          column: 39
        }
      },
      "90": {
        start: {
          line: 250,
          column: 6
        },
        end: {
          line: 254,
          column: 12
        }
      },
      "91": {
        start: {
          line: 255,
          column: 19
        },
        end: {
          line: 255,
          column: 47
        }
      },
      "92": {
        start: {
          line: 256,
          column: 20
        },
        end: {
          line: 256,
          column: 38
        }
      },
      "93": {
        start: {
          line: 258,
          column: 18
        },
        end: {
          line: 258,
          column: 20
        }
      },
      "94": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 262,
          column: 5
        }
      },
      "95": {
        start: {
          line: 261,
          column: 6
        },
        end: {
          line: 261,
          column: 27
        }
      },
      "96": {
        start: {
          line: 264,
          column: 17
        },
        end: {
          line: 264,
          column: 39
        }
      },
      "97": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 265,
          column: 16
        }
      },
      "98": {
        start: {
          line: 270,
          column: 23
        },
        end: {
          line: 298,
          column: 1
        }
      },
      "99": {
        start: {
          line: 280,
          column: 2
        },
        end: {
          line: 284,
          column: 3
        }
      },
      "100": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 281,
          column: 67
        }
      },
      "101": {
        start: {
          line: 283,
          column: 4
        },
        end: {
          line: 283,
          column: 72
        }
      },
      "102": {
        start: {
          line: 286,
          column: 2
        },
        end: {
          line: 297,
          column: 3
        }
      },
      "103": {
        start: {
          line: 287,
          column: 20
        },
        end: {
          line: 287,
          column: 33
        }
      },
      "104": {
        start: {
          line: 288,
          column: 21
        },
        end: {
          line: 292,
          column: 6
        }
      },
      "105": {
        start: {
          line: 293,
          column: 4
        },
        end: {
          line: 293,
          column: 20
        }
      },
      "106": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 295,
          column: 25
        }
      },
      "107": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 296,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 42
          },
          end: {
            line: 6,
            column: 43
          }
        },
        loc: {
          start: {
            line: 10,
            column: 6
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 37
          },
          end: {
            line: 11,
            column: 38
          }
        },
        loc: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 16,
            column: 6
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 24
          },
          end: {
            line: 20,
            column: 46
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 40
          },
          end: {
            line: 25,
            column: 41
          }
        },
        loc: {
          start: {
            line: 29,
            column: 6
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 41,
            column: 43
          },
          end: {
            line: 41,
            column: 44
          }
        },
        loc: {
          start: {
            line: 42,
            column: 6
          },
          end: {
            line: 46,
            column: 8
          }
        },
        line: 42
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 75,
            column: 33
          },
          end: {
            line: 75,
            column: 34
          }
        },
        loc: {
          start: {
            line: 77,
            column: 6
          },
          end: {
            line: 135,
            column: 1
          }
        },
        line: 77
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 137,
            column: 35
          },
          end: {
            line: 137,
            column: 36
          }
        },
        loc: {
          start: {
            line: 144,
            column: 6
          },
          end: {
            line: 158,
            column: 1
          }
        },
        line: 144
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 160,
            column: 38
          },
          end: {
            line: 160,
            column: 39
          }
        },
        loc: {
          start: {
            line: 168,
            column: 6
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 168
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 182,
            column: 35
          },
          end: {
            line: 182,
            column: 36
          }
        },
        loc: {
          start: {
            line: 184,
            column: 6
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 184
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 17
          },
          end: {
            line: 189,
            column: 50
          }
        },
        line: 189
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 194,
            column: 29
          },
          end: {
            line: 194,
            column: 30
          }
        },
        loc: {
          start: {
            line: 196,
            column: 6
          },
          end: {
            line: 234,
            column: 1
          }
        },
        line: 196
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 201,
            column: 18
          },
          end: {
            line: 201,
            column: 19
          }
        },
        loc: {
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 206,
            column: 6
          }
        },
        line: 202
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 209,
            column: 25
          },
          end: {
            line: 209,
            column: 26
          }
        },
        loc: {
          start: {
            line: 209,
            column: 37
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 209
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 236,
            column: 25
          },
          end: {
            line: 236,
            column: 26
          }
        },
        loc: {
          start: {
            line: 236,
            column: 48
          },
          end: {
            line: 241,
            column: 1
          }
        },
        line: 236
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 243,
            column: 28
          },
          end: {
            line: 243,
            column: 29
          }
        },
        loc: {
          start: {
            line: 243,
            column: 62
          },
          end: {
            line: 267,
            column: 1
          }
        },
        line: 243
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 270,
            column: 23
          },
          end: {
            line: 270,
            column: 24
          }
        },
        loc: {
          start: {
            line: 277,
            column: 6
          },
          end: {
            line: 298,
            column: 1
          }
        },
        line: 277
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 48,
            column: 22
          },
          end: {
            line: 48,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 34
          },
          end: {
            line: 48,
            column: 73
          }
        }, {
          start: {
            line: 48,
            column: 76
          },
          end: {
            line: 48,
            column: 78
          }
        }],
        line: 48
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 34
          },
          end: {
            line: 48,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 34
          },
          end: {
            line: 48,
            column: 53
          }
        }, {
          start: {
            line: 48,
            column: 57
          },
          end: {
            line: 48,
            column: 73
          }
        }],
        line: 48
      },
      "2": {
        loc: {
          start: {
            line: 76,
            column: 24
          },
          end: {
            line: 76,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 36
          },
          end: {
            line: 76,
            column: 38
          }
        }],
        line: 76
      },
      "3": {
        loc: {
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 83,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 83,
            column: 35
          }
        }, {
          start: {
            line: 83,
            column: 39
          },
          end: {
            line: 83,
            column: 55
          }
        }],
        line: 83
      },
      "4": {
        loc: {
          start: {
            line: 86,
            column: 2
          },
          end: {
            line: 117,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 2
          },
          end: {
            line: 117,
            column: 3
          }
        }, {
          start: {
            line: 86,
            column: 2
          },
          end: {
            line: 117,
            column: 3
          }
        }],
        line: 86
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 9
          },
          end: {
            line: 117,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 9
          },
          end: {
            line: 117,
            column: 3
          }
        }, {
          start: {
            line: 94,
            column: 9
          },
          end: {
            line: 117,
            column: 3
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 100,
            column: 9
          },
          end: {
            line: 117,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 9
          },
          end: {
            line: 117,
            column: 3
          }
        }, {
          start: {
            line: 100,
            column: 9
          },
          end: {
            line: 117,
            column: 3
          }
        }],
        line: 100
      },
      "7": {
        loc: {
          start: {
            line: 108,
            column: 6
          },
          end: {
            line: 108,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 108,
            column: 18
          },
          end: {
            line: 108,
            column: 57
          }
        }],
        line: 108
      },
      "8": {
        loc: {
          start: {
            line: 108,
            column: 18
          },
          end: {
            line: 108,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 18
          },
          end: {
            line: 108,
            column: 37
          }
        }, {
          start: {
            line: 108,
            column: 41
          },
          end: {
            line: 108,
            column: 57
          }
        }],
        line: 108
      },
      "9": {
        loc: {
          start: {
            line: 115,
            column: 39
          },
          end: {
            line: 115,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 115,
            column: 45
          },
          end: {
            line: 115,
            column: 53
          }
        }],
        line: 115
      },
      "10": {
        loc: {
          start: {
            line: 119,
            column: 2
          },
          end: {
            line: 121,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 2
          },
          end: {
            line: 121,
            column: 3
          }
        }, {
          start: {
            line: 119,
            column: 2
          },
          end: {
            line: 121,
            column: 3
          }
        }],
        line: 119
      },
      "11": {
        loc: {
          start: {
            line: 119,
            column: 6
          },
          end: {
            line: 119,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 6
          },
          end: {
            line: 119,
            column: 16
          }
        }, {
          start: {
            line: 119,
            column: 20
          },
          end: {
            line: 119,
            column: 35
          }
        }, {
          start: {
            line: 119,
            column: 39
          },
          end: {
            line: 119,
            column: 60
          }
        }],
        line: 119
      },
      "12": {
        loc: {
          start: {
            line: 120,
            column: 16
          },
          end: {
            line: 120,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 16
          },
          end: {
            line: 120,
            column: 35
          }
        }, {
          start: {
            line: 120,
            column: 39
          },
          end: {
            line: 120,
            column: 55
          }
        }],
        line: 120
      },
      "13": {
        loc: {
          start: {
            line: 155,
            column: 15
          },
          end: {
            line: 155,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 155,
            column: 31
          },
          end: {
            line: 155,
            column: 53
          }
        }, {
          start: {
            line: 155,
            column: 57
          },
          end: {
            line: 155,
            column: 65
          }
        }],
        line: 155
      },
      "14": {
        loc: {
          start: {
            line: 155,
            column: 31
          },
          end: {
            line: 155,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 31
          },
          end: {
            line: 155,
            column: 45
          }
        }, {
          start: {
            line: 155,
            column: 49
          },
          end: {
            line: 155,
            column: 53
          }
        }],
        line: 155
      },
      "15": {
        loc: {
          start: {
            line: 156,
            column: 19
          },
          end: {
            line: 156,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 156,
            column: 26
          },
          end: {
            line: 156,
            column: 45
          }
        }, {
          start: {
            line: 156,
            column: 48
          },
          end: {
            line: 156,
            column: 52
          }
        }],
        line: 156
      },
      "16": {
        loc: {
          start: {
            line: 157,
            column: 9
          },
          end: {
            line: 157,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 24
          },
          end: {
            line: 157,
            column: 46
          }
        }, {
          start: {
            line: 157,
            column: 49
          },
          end: {
            line: 157,
            column: 57
          }
        }],
        line: 157
      },
      "17": {
        loc: {
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 170,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 46
          },
          end: {
            line: 170,
            column: 78
          }
        }, {
          start: {
            line: 170,
            column: 81
          },
          end: {
            line: 170,
            column: 92
          }
        }],
        line: 170
      },
      "18": {
        loc: {
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 170,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 170,
            column: 24
          }
        }, {
          start: {
            line: 170,
            column: 28
          },
          end: {
            line: 170,
            column: 43
          }
        }],
        line: 170
      },
      "19": {
        loc: {
          start: {
            line: 185,
            column: 21
          },
          end: {
            line: 187,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 186,
            column: 6
          },
          end: {
            line: 186,
            column: 47
          }
        }, {
          start: {
            line: 187,
            column: 6
          },
          end: {
            line: 187,
            column: 15
          }
        }],
        line: 185
      },
      "20": {
        loc: {
          start: {
            line: 186,
            column: 6
          },
          end: {
            line: 186,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 6
          },
          end: {
            line: 186,
            column: 26
          }
        }, {
          start: {
            line: 186,
            column: 30
          },
          end: {
            line: 186,
            column: 47
          }
        }],
        line: 186
      },
      "21": {
        loc: {
          start: {
            line: 208,
            column: 2
          },
          end: {
            line: 232,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 2
          },
          end: {
            line: 232,
            column: 3
          }
        }, {
          start: {
            line: 208,
            column: 2
          },
          end: {
            line: 232,
            column: 3
          }
        }],
        line: 208
      },
      "22": {
        loc: {
          start: {
            line: 213,
            column: 6
          },
          end: {
            line: 217,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 6
          },
          end: {
            line: 217,
            column: 7
          }
        }, {
          start: {
            line: 213,
            column: 6
          },
          end: {
            line: 217,
            column: 7
          }
        }],
        line: 213
      },
      "23": {
        loc: {
          start: {
            line: 213,
            column: 10
          },
          end: {
            line: 213,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 10
          },
          end: {
            line: 213,
            column: 19
          }
        }, {
          start: {
            line: 213,
            column: 23
          },
          end: {
            line: 213,
            column: 40
          }
        }],
        line: 213
      },
      "24": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 223,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 222,
            column: 52
          }
        }, {
          start: {
            line: 223,
            column: 12
          },
          end: {
            line: 223,
            column: 21
          }
        }],
        line: 221
      },
      "25": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 221,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 221,
            column: 17
          }
        }, {
          start: {
            line: 221,
            column: 21
          },
          end: {
            line: 221,
            column: 37
          }
        }],
        line: 221
      },
      "26": {
        loc: {
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 222,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 222,
            column: 32
          }
        }, {
          start: {
            line: 222,
            column: 36
          },
          end: {
            line: 222,
            column: 52
          }
        }],
        line: 222
      },
      "27": {
        loc: {
          start: {
            line: 238,
            column: 15
          },
          end: {
            line: 238,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 16
          },
          end: {
            line: 238,
            column: 36
          }
        }, {
          start: {
            line: 238,
            column: 41
          },
          end: {
            line: 238,
            column: 43
          }
        }],
        line: 238
      },
      "28": {
        loc: {
          start: {
            line: 246,
            column: 2
          },
          end: {
            line: 266,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 2
          },
          end: {
            line: 266,
            column: 3
          }
        }, {
          start: {
            line: 246,
            column: 2
          },
          end: {
            line: 266,
            column: 3
          }
        }],
        line: 246
      },
      "29": {
        loc: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        }, {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        }],
        line: 260
      },
      "30": {
        loc: {
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 273,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 273,
            column: 18
          },
          end: {
            line: 273,
            column: 20
          }
        }],
        line: 273
      },
      "31": {
        loc: {
          start: {
            line: 280,
            column: 2
          },
          end: {
            line: 284,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 2
          },
          end: {
            line: 284,
            column: 3
          }
        }, {
          start: {
            line: 280,
            column: 2
          },
          end: {
            line: 284,
            column: 3
          }
        }],
        line: 280
      },
      "32": {
        loc: {
          start: {
            line: 280,
            column: 6
          },
          end: {
            line: 280,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 6
          },
          end: {
            line: 280,
            column: 9
          }
        }, {
          start: {
            line: 280,
            column: 13
          },
          end: {
            line: 280,
            column: 29
          }
        }, {
          start: {
            line: 280,
            column: 33
          },
          end: {
            line: 280,
            column: 40
          }
        }],
        line: 280
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0, 0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0],
      "31": [0, 0],
      "32": [0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4f309ace63aac808bc10f913db1b71497af91be3"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_15nig8q3j7 = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_15nig8q3j7();

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

cov_15nig8q3j7().s[0]++;

var resourcesFromResourceLinks = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee({
    resourceLinks,
    reference,
    config
  }) {
    var promises, resources;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            cov_15nig8q3j7().f[0]++;
            promises = (cov_15nig8q3j7().s[1]++, resourceLinks.map(resourceLink => {
              cov_15nig8q3j7().f[1]++;
              cov_15nig8q3j7().s[2]++;
              return resourceFromResourceLink({
                resourceLink,
                reference,
                config
              });
            })); // Filter invalid resources (those that did not parse)

            cov_15nig8q3j7().s[3]++;
            _context.next = 5;
            return Promise.all(promises);

          case 5:
            _context.next = 7;
            return _context.sent.filter(parsedResource => {
              cov_15nig8q3j7().f[2]++;
              cov_15nig8q3j7().s[4]++;
              return parsedResource != null;
            });

          case 7:
            resources = _context.sent;
            cov_15nig8q3j7().s[5]++;
            return _context.abrupt("return", resources);

          case 10:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function resourcesFromResourceLinks(_x) {
    return _ref.apply(this, arguments);
  };
}();

exports.resourcesFromResourceLinks = resourcesFromResourceLinks;
cov_15nig8q3j7().s[6]++;

var resourceFromResourceLink = /*#__PURE__*/function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2({
    resourceLink,
    reference,
    config
  }) {
    var manifestHttpResponse, resource, _ref3, manifest, response, projects, projectId, project, _resource, errorMessage;

    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            cov_15nig8q3j7().f[3]++;
            manifestHttpResponse = (cov_15nig8q3j7().s[7]++, null);
            cov_15nig8q3j7().s[8]++;
            _context2.prev = 3;
            resource = (cov_15nig8q3j7().s[9]++, parseResourceLink({
              resourceLink,
              config,
              reference
            }));
            cov_15nig8q3j7().s[10]++;
            resource.fullResponse = true;
            cov_15nig8q3j7().s[11]++;
            _context2.next = 10;
            return getResourceManifest(resource);

          case 10:
            _ref3 = _context2.sent;
            manifest = _ref3.manifest;
            response = _ref3.response;
            cov_15nig8q3j7().s[12]++;
            manifestHttpResponse = response;
            projects = (cov_15nig8q3j7().s[13]++, manifest.projects.map(project => {
              cov_15nig8q3j7().f[4]++;
              cov_15nig8q3j7().s[14]++;
              return extendProject({
                project,
                resource,
                reference
              });
            }));
            projectId = (cov_15nig8q3j7().s[15]++, reference ? (cov_15nig8q3j7().b[0][0]++, (cov_15nig8q3j7().b[1][0]++, reference.projectId) || (cov_15nig8q3j7().b[1][1]++, reference.bookId)) : (cov_15nig8q3j7().b[0][1]++, ''));
            cov_15nig8q3j7().s[16]++;
            _context2.next = 20;
            return projectFromProjects({
              reference,
              projectId,
              projects
            });

          case 20:
            project = _context2.sent;
            _resource = (cov_15nig8q3j7().s[17]++, _objectSpread(_objectSpread({}, resource), {}, {
              reference,
              manifest,
              projects,
              project,
              manifestHttpResponse
            }));
            cov_15nig8q3j7().s[18]++;
            return _context2.abrupt("return", _resource);

          case 26:
            _context2.prev = 26;
            _context2.t0 = _context2["catch"](3);
            cov_15nig8q3j7().s[19]++;
            console.log(_context2.t0);
            errorMessage = (cov_15nig8q3j7().s[20]++, 'scripture-resources-rcl: resources.js: Cannot load resource [' + resourceLink + ']');
            cov_15nig8q3j7().s[21]++;
            console.error(errorMessage);
            cov_15nig8q3j7().s[22]++;
            console.error(_context2.t0);
            cov_15nig8q3j7().s[23]++;
            return _context2.abrupt("return", {
              manifestHttpResponse
            });

          case 37:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, null, [[3, 26]]);
  }));

  return function resourceFromResourceLink(_x2) {
    return _ref2.apply(this, arguments);
  };
}();

exports.resourceFromResourceLink = resourceFromResourceLink;
cov_15nig8q3j7().s[24]++;

var parseResourceLink = ({
  resourceLink,
  config,
  reference = (cov_15nig8q3j7().b[2][0]++, {})
}) => {
  cov_15nig8q3j7().f[5]++;
  var parsedArray,
      username,
      repository,
      languageId,
      resourceId,
      projectId = (cov_15nig8q3j7().s[25]++, (cov_15nig8q3j7().b[3][0]++, reference.projectId) || (cov_15nig8q3j7().b[3][1]++, reference.bookId)),
      tag = (cov_15nig8q3j7().s[26]++, 'master');
  cov_15nig8q3j7().s[27]++;

  if (resourceLink.includes('src/branch')) {
    cov_15nig8q3j7().b[4][0]++;
    cov_15nig8q3j7().s[28]++;
    //https://git.door43.org/ru_gl/ru_rlob/src/branch/master
    //https://git.door43.org/ru_gl/ru_rlob/src/branch/master/3jn
    parsedArray = resourceLink.match(/https?:\/\/.*org\/([^/]*)\/([^/]*)\/src\/([^/]*)\/([^/]*)/);
    cov_15nig8q3j7().s[29]++;
    var _parsedArray = parsedArray;

    var _parsedArray2 = _slicedToArray(_parsedArray, 5);

    username = _parsedArray2[1];
    repository = _parsedArray2[2];
    tag = _parsedArray2[4];
    cov_15nig8q3j7().s[30]++;

    var _repository$split = repository.split('_');

    var _repository$split2 = _slicedToArray(_repository$split, 2);

    languageId = _repository$split2[0];
    resourceId = _repository$split2[1];
  } else {
    cov_15nig8q3j7().b[4][1]++;
    cov_15nig8q3j7().s[31]++;

    if (resourceLink.includes('http')) {
      cov_15nig8q3j7().b[5][0]++;
      cov_15nig8q3j7().s[32]++;
      //https://git.door43.org/ru_gl/ru_rlob
      //https://git.door43.org/ru_gl/ru_rlob/3jn
      parsedArray = resourceLink.match(/https?:\/\/.*org\/([^/]*)\/([^/]*)/);
      cov_15nig8q3j7().s[33]++;
      var _parsedArray3 = parsedArray;

      var _parsedArray4 = _slicedToArray(_parsedArray3, 3);

      username = _parsedArray4[1];
      repository = _parsedArray4[2];
      cov_15nig8q3j7().s[34]++;

      var _repository$split3 = repository.split('_');

      var _repository$split4 = _slicedToArray(_repository$split3, 2);

      languageId = _repository$split4[0];
      resourceId = _repository$split4[1];
    } else {
      cov_15nig8q3j7().b[5][1]++;
      cov_15nig8q3j7().s[35]++;

      if (resourceLink.match(/^\/?([^/]*)\/([^/]*)\/?\/?([^/]*)?\/?$/)) {
        cov_15nig8q3j7().b[6][0]++;
        cov_15nig8q3j7().s[36]++;
        // /ru_gl/ru_rlob
        // /ru_gl/ru_rlob/3jn
        parsedArray = resourceLink.match(/^\/?([^/]*)\/([^/]*)\/?\/?([^/]*)?\/?$/);
        cov_15nig8q3j7().s[37]++;
        var _parsedArray5 = parsedArray;

        var _parsedArray6 = _slicedToArray(_parsedArray5, 4);

        username = _parsedArray6[1];
        repository = _parsedArray6[2];
        var _parsedArray6$ = _parsedArray6[3];
        projectId = _parsedArray6$ === void 0 ? (cov_15nig8q3j7().b[7][0]++, (cov_15nig8q3j7().b[8][0]++, reference.projectId) || (cov_15nig8q3j7().b[8][1]++, reference.bookId)) : _parsedArray6$;
        cov_15nig8q3j7().s[38]++;

        var _repository$split5 = repository.split('_');

        var _repository$split6 = _slicedToArray(_repository$split5, 2);

        languageId = _repository$split6[0];
        resourceId = _repository$split6[1];
      } else {
        cov_15nig8q3j7().b[6][1]++;
        cov_15nig8q3j7().s[39]++;
        //ru_gl/ru/rlob/master/
        //ru_gl/ru/rlob/master/tit
        parsedArray = resourceLink.split('/');
        cov_15nig8q3j7().s[40]++;
        var _parsedArray7 = parsedArray;

        var _parsedArray8 = _slicedToArray(_parsedArray7, 5);

        username = _parsedArray8[0];
        languageId = _parsedArray8[1];
        resourceId = _parsedArray8[2];
        var _parsedArray8$ = _parsedArray8[3];
        tag = _parsedArray8$ === void 0 ? (cov_15nig8q3j7().b[9][0]++, 'master') : _parsedArray8$;
        projectId = _parsedArray8[4];
        cov_15nig8q3j7().s[41]++;
        repository = "".concat(languageId, "_").concat(resourceId);
      }
    }
  }

  cov_15nig8q3j7().s[42]++;

  if ((cov_15nig8q3j7().b[11][0]++, !projectId) || (cov_15nig8q3j7().b[11][1]++, projectId == '') || (cov_15nig8q3j7().b[11][2]++, projectId.length == 0)) {
    cov_15nig8q3j7().b[10][0]++;
    cov_15nig8q3j7().s[43]++;
    projectId = (cov_15nig8q3j7().b[12][0]++, reference.projectId) || (cov_15nig8q3j7().b[12][1]++, reference.bookId);
  } else {
    cov_15nig8q3j7().b[10][1]++;
  }

  cov_15nig8q3j7().s[44]++;
  resourceLink = "".concat(username, "/").concat(languageId, "/").concat(resourceId, "/").concat(tag, "/").concat(projectId);
  var resource = (cov_15nig8q3j7().s[45]++, {
    resourceLink,
    username,
    repository,
    languageId,
    resourceId,
    tag,
    projectId,
    config
  });
  cov_15nig8q3j7().s[46]++;
  return resource;
};

exports.parseResourceLink = parseResourceLink;
cov_15nig8q3j7().s[47]++;

var getResourceManifest = /*#__PURE__*/function () {
  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3({
    username,
    languageId,
    resourceId,
    tag,
    config,
    fullResponse
  }) {
    var repository, path, response, yaml, manifest;
    return regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            cov_15nig8q3j7().f[6]++;
            repository = (cov_15nig8q3j7().s[48]++, "".concat(languageId, "_").concat(resourceId));
            path = (cov_15nig8q3j7().s[49]++, 'manifest.yaml');
            cov_15nig8q3j7().s[50]++;
            _context3.next = 6;
            return getFile({
              username,
              repository,
              path,
              tag,
              config,
              fullResponse
            });

          case 6:
            response = _context3.sent;
            yaml = (cov_15nig8q3j7().s[51]++, fullResponse ? (cov_15nig8q3j7().b[13][0]++, (cov_15nig8q3j7().b[14][0]++, response === null || response === void 0 ? void 0 : response.data) || (cov_15nig8q3j7().b[14][1]++, null)) : (cov_15nig8q3j7().b[13][1]++, response));
            manifest = (cov_15nig8q3j7().s[52]++, yaml ? (cov_15nig8q3j7().b[15][0]++, _jsYamlParser.default.safeLoad(yaml)) : (cov_15nig8q3j7().b[15][1]++, null));
            cov_15nig8q3j7().s[53]++;
            return _context3.abrupt("return", fullResponse ? (cov_15nig8q3j7().b[16][0]++, {
              manifest,
              response
            }) : (cov_15nig8q3j7().b[16][1]++, manifest));

          case 11:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));

  return function getResourceManifest(_x3) {
    return _ref4.apply(this, arguments);
  };
}();

exports.getResourceManifest = getResourceManifest;
cov_15nig8q3j7().s[54]++;

var getResourceProjectFile = /*#__PURE__*/function () {
  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4({
    username,
    languageId,
    resourceId,
    tag,
    project: {
      path: projectPath
    },
    config,
    filePath
  }) {
    var repository, file;
    return regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            cov_15nig8q3j7().f[7]++;
            repository = (cov_15nig8q3j7().s[55]++, "".concat(languageId, "_").concat(resourceId));
            cov_15nig8q3j7().s[56]++;
            projectPath = (cov_15nig8q3j7().b[18][0]++, filePath) && (cov_15nig8q3j7().b[18][1]++, filePath.length) ? (cov_15nig8q3j7().b[17][0]++, _path.default.join(projectPath, filePath)) : (cov_15nig8q3j7().b[17][1]++, projectPath);
            cov_15nig8q3j7().s[57]++;
            _context4.next = 7;
            return getFile({
              username,
              repository,
              path: projectPath,
              tag,
              config
            });

          case 7:
            file = _context4.sent;
            cov_15nig8q3j7().s[58]++;
            return _context4.abrupt("return", file);

          case 10:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));

  return function getResourceProjectFile(_x4) {
    return _ref5.apply(this, arguments);
  };
}();

exports.getResourceProjectFile = getResourceProjectFile;
cov_15nig8q3j7().s[59]++;

var projectFromProjects = ({
  reference,
  projectId,
  projects
}) => {
  cov_15nig8q3j7().f[8]++;
  var identifier = (cov_15nig8q3j7().s[60]++, reference ? (cov_15nig8q3j7().b[19][0]++, (cov_15nig8q3j7().b[20][0]++, reference === null || reference === void 0 ? void 0 : reference.projectId) || (cov_15nig8q3j7().b[20][1]++, reference === null || reference === void 0 ? void 0 : reference.bookId)) : (cov_15nig8q3j7().b[19][1]++, projectId));
  var project = (cov_15nig8q3j7().s[61]++, projects.filter(project => {
    cov_15nig8q3j7().f[9]++;
    cov_15nig8q3j7().s[62]++;
    return project.identifier === identifier;
  })[0]);
  cov_15nig8q3j7().s[63]++;
  return project;
};

exports.projectFromProjects = projectFromProjects;
cov_15nig8q3j7().s[64]++;

var extendProject = ({
  project,
  resource,
  reference
}) => {
  cov_15nig8q3j7().f[10]++;

  var _project = (cov_15nig8q3j7().s[65]++, _objectSpread({}, project));

  var _ref6 = (cov_15nig8q3j7().s[66]++, resource),
      projectId = _ref6.projectId,
      resourceLink = _ref6.resourceLink; // eslint-disable-next-line require-await


  cov_15nig8q3j7().s[67]++;
  _project.file = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
    return regeneratorRuntime.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            cov_15nig8q3j7().f[11]++;
            cov_15nig8q3j7().s[68]++;
            return _context5.abrupt("return", getResourceProjectFile(_objectSpread(_objectSpread({}, resource), {}, {
              project,
              filePath: reference === null || reference === void 0 ? void 0 : reference.filePath
            })));

          case 3:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
  cov_15nig8q3j7().s[69]++;

  if (project.path.match(/\.usfm$/)) {
    cov_15nig8q3j7().b[21][0]++;
    cov_15nig8q3j7().s[70]++;
    _project.parseUsfm = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
      var start, json, end, identifier;
      return regeneratorRuntime.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              cov_15nig8q3j7().f[12]++;
              start = (cov_15nig8q3j7().s[71]++, performance.now());
              cov_15nig8q3j7().s[72]++;

              if (!((cov_15nig8q3j7().b[23][0]++, reference) && (cov_15nig8q3j7().b[23][1]++, reference.chapter))) {
                _context6.next = 11;
                break;
              }

              cov_15nig8q3j7().b[22][0]++;
              cov_15nig8q3j7().s[73]++;
              _context6.next = 8;
              return parseChapter({
                project: _project,
                reference
              });

            case 8:
              json = _context6.sent;
              _context6.next = 16;
              break;

            case 11:
              cov_15nig8q3j7().b[22][1]++;
              cov_15nig8q3j7().s[74]++;
              _context6.next = 15;
              return parseBook({
                project: _project
              });

            case 15:
              json = _context6.sent;

            case 16:
              end = (cov_15nig8q3j7().s[75]++, performance.now());
              identifier = (cov_15nig8q3j7().s[76]++, (cov_15nig8q3j7().b[25][0]++, reference) && (cov_15nig8q3j7().b[25][1]++, reference.bookId) ? (cov_15nig8q3j7().b[24][0]++, (cov_15nig8q3j7().b[26][0]++, reference === null || reference === void 0 ? void 0 : reference.projectId) || (cov_15nig8q3j7().b[26][1]++, reference.bookId)) : (cov_15nig8q3j7().b[24][1]++, projectId));
              cov_15nig8q3j7().s[77]++;
              console.log("fetch & parse ".concat(resourceLink, " ").concat(identifier, ": ").concat((end - start).toFixed(3), "ms"));
              cov_15nig8q3j7().s[78]++;
              return _context6.abrupt("return", json);

            case 22:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6);
    }));
  } else {
    cov_15nig8q3j7().b[21][1]++;
  }

  cov_15nig8q3j7().s[79]++;
  return _project;
};

exports.extendProject = extendProject;
cov_15nig8q3j7().s[80]++;

var parseBook = /*#__PURE__*/function () {
  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7({
    project
  }) {
    var usfm, json;
    return regeneratorRuntime.wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            cov_15nig8q3j7().f[13]++;
            cov_15nig8q3j7().s[81]++;
            console.log('parseBook usfmJS.toJSON');
            cov_15nig8q3j7().s[82]++;
            cov_15nig8q3j7().b[27][0]++;
            _context7.next = 7;
            return project.file();

          case 7:
            _context7.t0 = _context7.sent;

            if (_context7.t0) {
              _context7.next = 10;
              break;
            }

            _context7.t0 = (cov_15nig8q3j7().b[27][1]++, '');

          case 10:
            usfm = _context7.t0;
            json = (cov_15nig8q3j7().s[83]++, _usfmJs.default.toJSON(usfm));
            cov_15nig8q3j7().s[84]++;
            return _context7.abrupt("return", json);

          case 14:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));

  return function parseBook(_x5) {
    return _ref9.apply(this, arguments);
  };
}();

exports.parseBook = parseBook;
cov_15nig8q3j7().s[85]++;

var parseChapter = /*#__PURE__*/function () {
  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8({
    project,
    reference
  }) {
    var usfm, thisChapter, nextChapter, regexpString, regexp, matches, chapter, json;
    return regeneratorRuntime.wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            cov_15nig8q3j7().f[14]++;
            cov_15nig8q3j7().s[86]++;
            _context8.next = 4;
            return project.file();

          case 4:
            usfm = _context8.sent;
            cov_15nig8q3j7().s[87]++;

            if (!usfm) {
              _context8.next = 21;
              break;
            }

            cov_15nig8q3j7().b[28][0]++;
            thisChapter = (cov_15nig8q3j7().s[88]++, parseInt(reference.chapter));
            nextChapter = (cov_15nig8q3j7().s[89]++, thisChapter + 1);
            regexpString = (cov_15nig8q3j7().s[90]++, '(\\\\c\\s*' + thisChapter + '\\s*(.*?\n?)*?)(?:(\\\\c\\s*' + nextChapter + '|$))');
            regexp = (cov_15nig8q3j7().s[91]++, new RegExp(regexpString, ''));
            matches = (cov_15nig8q3j7().s[92]++, usfm.match(regexp));
            chapter = (cov_15nig8q3j7().s[93]++, '');
            cov_15nig8q3j7().s[94]++;

            if (matches) {
              cov_15nig8q3j7().b[29][0]++;
              cov_15nig8q3j7().s[95]++;
              chapter = matches[1];
            } else {
              cov_15nig8q3j7().b[29][1]++;
            }

            json = (cov_15nig8q3j7().s[96]++, _usfmJs.default.toJSON(chapter));
            cov_15nig8q3j7().s[97]++;
            return _context8.abrupt("return", json);

          case 21:
            cov_15nig8q3j7().b[28][1]++;

          case 22:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  }));

  return function parseChapter(_x6) {
    return _ref10.apply(this, arguments);
  };
}(); // https://git.door43.org/unfoldingword/en_ult/raw/branch/master/manifest.yaml


exports.parseChapter = parseChapter;
cov_15nig8q3j7().s[98]++;

var getFile = /*#__PURE__*/function () {
  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9({
    username,
    repository,
    path: urlPath = (cov_15nig8q3j7().b[30][0]++, ''),
    tag,
    config,
    fullResponse
  }) {
    var url, _config, response;

    return regeneratorRuntime.wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            cov_15nig8q3j7().f[15]++;
            cov_15nig8q3j7().s[99]++;

            if ((cov_15nig8q3j7().b[32][0]++, tag) && (cov_15nig8q3j7().b[32][1]++, tag !== 'master') && (cov_15nig8q3j7().b[32][2]++, urlPath)) {
              cov_15nig8q3j7().b[31][0]++;
              cov_15nig8q3j7().s[100]++;
              url = _path.default.join(username, repository, 'raw/tag', tag, urlPath);
            } else {
              cov_15nig8q3j7().b[31][1]++;
              cov_15nig8q3j7().s[101]++;
              url = _path.default.join(username, repository, 'raw/branch/master', urlPath);
            }

            cov_15nig8q3j7().s[102]++;
            _context9.prev = 4;
            _config = (cov_15nig8q3j7().s[103]++, _objectSpread({}, config)); // prevents gitea-react-toolkit from modifying object

            cov_15nig8q3j7().s[104]++;
            _context9.next = 9;
            return (0, _giteaReactToolkit.get)({
              url,
              config: _config,
              fullResponse
            });

          case 9:
            response = _context9.sent;
            cov_15nig8q3j7().s[105]++;
            return _context9.abrupt("return", response);

          case 14:
            _context9.prev = 14;
            _context9.t0 = _context9["catch"](4);
            cov_15nig8q3j7().s[106]++;
            console.error(_context9.t0);
            cov_15nig8q3j7().s[107]++;
            return _context9.abrupt("return", null);

          case 20:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9, null, [[4, 14]]);
  }));

  return function getFile(_x7) {
    return _ref11.apply(this, arguments);
  };
}();

exports.getFile = getFile;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,