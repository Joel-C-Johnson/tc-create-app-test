"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.isWhitespace = isWhitespace;exports.countOccurrences = countOccurrences;exports.ourReplaceAll = ourReplaceAll;exports.ourDeleteAll = ourDeleteAll;exports.LEADING_ZERO_COMBINATIONS = exports.BAD_CHARACTER_COMBINATIONS = exports.OPEN_CLOSE_PUNCTUATION_PAIRS = exports.PAIRED_PUNCTUATION_CLOSERS = exports.PAIRED_PUNCTUATION_OPENERS = void 0; // See http://xahlee.info/comp/unicode_matching_brackets.html for a more complete list
// Also see https://unicode-table.com/en/sets/quotation-marks/
var PAIRED_PUNCTUATION_OPENERS = '[({<⟨“‘«‹《〈⸢⸤'; // These are just single/individual characters
exports.PAIRED_PUNCTUATION_OPENERS = PAIRED_PUNCTUATION_OPENERS;var PAIRED_PUNCTUATION_CLOSERS = '])}>⟩”’»›》〉⸣⸥';exports.PAIRED_PUNCTUATION_CLOSERS = PAIRED_PUNCTUATION_CLOSERS;
var OPEN_CLOSE_PUNCTUATION_PAIRS = [
// These can be multiple character sequences (as long as opener and closer are different/distinguishable)
['[', ']'], ['(', ')'], ['{', '}'],
['“', '”'], ['‘', '’'],
['<', '>'], ['⟨', '⟩'],
['«', '»'], ['‹', '›'],
['《', '》'], ['〈', '〉'],
['⸢', '⸣'], ['⸤', '⸥'],
['**_', '_**'] // TODO: Does this markdown belong here???
];exports.OPEN_CLOSE_PUNCTUATION_PAIRS = OPEN_CLOSE_PUNCTUATION_PAIRS;
var BAD_CHARACTER_COMBINATIONS = [
'\\[\\[', '\\]\\]', // These were introduced by a tC Create bug (NOTE: \[ or \] is quite legal)
'] (http', '] (.' // Bad markdown links (with a space between the parts)
];exports.BAD_CHARACTER_COMBINATIONS = BAD_CHARACTER_COMBINATIONS;
var LEADING_ZERO_COMBINATIONS = [
' 0', ':0', '<br>0', '“0', '‘0'];exports.LEADING_ZERO_COMBINATIONS = LEADING_ZERO_COMBINATIONS;


function isWhitespace(myString) {
  // includes zero-width space
  if (/^[\s\u200B]+$/.test(myString)) return true;
  return false;
}


function countOccurrences(mainString, subString) {var allowOverlapping = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  // Adapted from https://stackoverflow.com/questions/4009756/how-to-count-string-occurrence-in-string

  mainString += '';
  subString += '';
  if (subString.length <= 0) return mainString.length + 1;

  var n = 0,
  pos = 0,
  step = allowOverlapping ? 1 : subString.length;

  while (true) {
    pos = mainString.indexOf(subString, pos);
    if (pos >= 0) {
      ++n;
      pos += step;
    } else break;
  }
  return n;
}
// end of countOccurrences function


function ourReplaceAll(givenString, findString, replaceString) {
  var resultString = givenString;
  while (resultString.indexOf(findString) >= 0) {
    resultString = resultString.replace(findString, replaceString);}
  return resultString;
}


function ourDeleteAll(givenString, findString) {
  var resultString = givenString;
  while (resultString.indexOf(findString) >= 0) {
    resultString = resultString.replace(findString, '');}
  return resultString;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb3JlL3RleHQtaGFuZGxpbmctZnVuY3Rpb25zLmpzIl0sIm5hbWVzIjpbIlBBSVJFRF9QVU5DVFVBVElPTl9PUEVORVJTIiwiUEFJUkVEX1BVTkNUVUFUSU9OX0NMT1NFUlMiLCJPUEVOX0NMT1NFX1BVTkNUVUFUSU9OX1BBSVJTIiwiQkFEX0NIQVJBQ1RFUl9DT01CSU5BVElPTlMiLCJMRUFESU5HX1pFUk9fQ09NQklOQVRJT05TIiwiaXNXaGl0ZXNwYWNlIiwibXlTdHJpbmciLCJ0ZXN0IiwiY291bnRPY2N1cnJlbmNlcyIsIm1haW5TdHJpbmciLCJzdWJTdHJpbmciLCJhbGxvd092ZXJsYXBwaW5nIiwibGVuZ3RoIiwibiIsInBvcyIsInN0ZXAiLCJpbmRleE9mIiwib3VyUmVwbGFjZUFsbCIsImdpdmVuU3RyaW5nIiwiZmluZFN0cmluZyIsInJlcGxhY2VTdHJpbmciLCJyZXN1bHRTdHJpbmciLCJyZXBsYWNlIiwib3VyRGVsZXRlQWxsIl0sIm1hcHBpbmdzIjoidWFBQUE7QUFDQTtBQUNPLElBQU1BLDBCQUEwQixHQUFHLGVBQW5DLEMsQ0FBb0Q7Z0VBQ3BELElBQU1DLDBCQUEwQixHQUFHLGVBQW5DLEM7QUFDQSxJQUFNQyw0QkFBNEIsR0FBRztBQUN4QztBQUNBLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FGd0MsRUFFNUIsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUY0QixFQUVoQixDQUFDLEdBQUQsRUFBTSxHQUFOLENBRmdCO0FBR3hDLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FId0MsRUFHNUIsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUg0QjtBQUl4QyxDQUFDLEdBQUQsRUFBTSxHQUFOLENBSndDLEVBSTVCLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FKNEI7QUFLeEMsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUx3QyxFQUs1QixDQUFDLEdBQUQsRUFBTSxHQUFOLENBTDRCO0FBTXhDLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FOd0MsRUFNNUIsQ0FBQyxHQUFELEVBQU0sR0FBTixDQU40QjtBQU94QyxDQUFDLEdBQUQsRUFBTSxHQUFOLENBUHdDLEVBTzVCLENBQUMsR0FBRCxFQUFNLEdBQU4sQ0FQNEI7QUFReEMsQ0FBQyxLQUFELEVBQVEsS0FBUixDQVJ3QyxDQVF6QjtBQVJ5QixDQUFyQyxDO0FBVUEsSUFBTUMsMEJBQTBCLEdBQUc7QUFDdEMsUUFEc0MsRUFDNUIsUUFENEIsRUFDbEI7QUFDcEIsU0FGc0MsRUFFM0IsTUFGMkIsQ0FFbkI7QUFGbUIsQ0FBbkMsQztBQUlBLElBQU1DLHlCQUF5QixHQUFHO0FBQ3JDLElBRHFDLEVBQy9CLElBRCtCLEVBQ3pCLE9BRHlCLEVBQ2hCLElBRGdCLEVBQ1YsSUFEVSxDQUFsQyxDOzs7QUFJQSxTQUFTQyxZQUFULENBQXNCQyxRQUF0QixFQUFnQztBQUNuQztBQUNBLE1BQUksZ0JBQWdCQyxJQUFoQixDQUFxQkQsUUFBckIsQ0FBSixFQUFvQyxPQUFPLElBQVA7QUFDcEMsU0FBTyxLQUFQO0FBQ0g7OztBQUdNLFNBQVNFLGdCQUFULENBQTBCQyxVQUExQixFQUFzQ0MsU0FBdEMsRUFBMkUsS0FBMUJDLGdCQUEwQix1RUFBUCxLQUFPO0FBQzlFOztBQUVBRixFQUFBQSxVQUFVLElBQUksRUFBZDtBQUNBQyxFQUFBQSxTQUFTLElBQUksRUFBYjtBQUNBLE1BQUlBLFNBQVMsQ0FBQ0UsTUFBVixJQUFvQixDQUF4QixFQUEyQixPQUFRSCxVQUFVLENBQUNHLE1BQVgsR0FBb0IsQ0FBNUI7O0FBRTNCLE1BQUlDLENBQUMsR0FBRyxDQUFSO0FBQ0lDLEVBQUFBLEdBQUcsR0FBRyxDQURWO0FBRUlDLEVBQUFBLElBQUksR0FBR0osZ0JBQWdCLEdBQUcsQ0FBSCxHQUFPRCxTQUFTLENBQUNFLE1BRjVDOztBQUlBLFNBQU8sSUFBUCxFQUFhO0FBQ1RFLElBQUFBLEdBQUcsR0FBR0wsVUFBVSxDQUFDTyxPQUFYLENBQW1CTixTQUFuQixFQUE4QkksR0FBOUIsQ0FBTjtBQUNBLFFBQUlBLEdBQUcsSUFBSSxDQUFYLEVBQWM7QUFDVixRQUFFRCxDQUFGO0FBQ0FDLE1BQUFBLEdBQUcsSUFBSUMsSUFBUDtBQUNILEtBSEQsTUFHTztBQUNWO0FBQ0QsU0FBT0YsQ0FBUDtBQUNIO0FBQ0Q7OztBQUdPLFNBQVNJLGFBQVQsQ0FBdUJDLFdBQXZCLEVBQW9DQyxVQUFwQyxFQUFnREMsYUFBaEQsRUFBK0Q7QUFDbEUsTUFBSUMsWUFBWSxHQUFHSCxXQUFuQjtBQUNBLFNBQU9HLFlBQVksQ0FBQ0wsT0FBYixDQUFxQkcsVUFBckIsS0FBb0MsQ0FBM0M7QUFDSUUsSUFBQUEsWUFBWSxHQUFHQSxZQUFZLENBQUNDLE9BQWIsQ0FBcUJILFVBQXJCLEVBQWlDQyxhQUFqQyxDQUFmLENBREo7QUFFQSxTQUFPQyxZQUFQO0FBQ0g7OztBQUdNLFNBQVNFLFlBQVQsQ0FBc0JMLFdBQXRCLEVBQW1DQyxVQUFuQyxFQUErQztBQUNsRCxNQUFJRSxZQUFZLEdBQUdILFdBQW5CO0FBQ0EsU0FBT0csWUFBWSxDQUFDTCxPQUFiLENBQXFCRyxVQUFyQixLQUFvQyxDQUEzQztBQUNJRSxJQUFBQSxZQUFZLEdBQUdBLFlBQVksQ0FBQ0MsT0FBYixDQUFxQkgsVUFBckIsRUFBaUMsRUFBakMsQ0FBZixDQURKO0FBRUEsU0FBT0UsWUFBUDtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU2VlIGh0dHA6Ly94YWhsZWUuaW5mby9jb21wL3VuaWNvZGVfbWF0Y2hpbmdfYnJhY2tldHMuaHRtbCBmb3IgYSBtb3JlIGNvbXBsZXRlIGxpc3Rcbi8vIEFsc28gc2VlIGh0dHBzOi8vdW5pY29kZS10YWJsZS5jb20vZW4vc2V0cy9xdW90YXRpb24tbWFya3MvXG5leHBvcnQgY29uc3QgUEFJUkVEX1BVTkNUVUFUSU9OX09QRU5FUlMgPSAnWyh7POKfqOKAnOKAmMKr4oC544CK44CI4rii4rikJzsgLy8gVGhlc2UgYXJlIGp1c3Qgc2luZ2xlL2luZGl2aWR1YWwgY2hhcmFjdGVyc1xuZXhwb3J0IGNvbnN0IFBBSVJFRF9QVU5DVFVBVElPTl9DTE9TRVJTID0gJ10pfT7in6nigJ3igJnCu+KAuuOAi+OAieK4o+K4pSc7XG5leHBvcnQgY29uc3QgT1BFTl9DTE9TRV9QVU5DVFVBVElPTl9QQUlSUyA9IFtcbiAgICAvLyBUaGVzZSBjYW4gYmUgbXVsdGlwbGUgY2hhcmFjdGVyIHNlcXVlbmNlcyAoYXMgbG9uZyBhcyBvcGVuZXIgYW5kIGNsb3NlciBhcmUgZGlmZmVyZW50L2Rpc3Rpbmd1aXNoYWJsZSlcbiAgICBbJ1snLCAnXSddLCBbJygnLCAnKSddLCBbJ3snLCAnfSddLFxuICAgIFsn4oCcJywgJ+KAnSddLCBbJ+KAmCcsICfigJknXSxcbiAgICBbJzwnLCAnPiddLCBbJ+KfqCcsICfin6knXSxcbiAgICBbJ8KrJywgJ8K7J10sIFsn4oC5JywgJ+KAuiddLFxuICAgIFsn44CKJywgJ+OAiyddLCBbJ+OAiCcsICfjgIknXSxcbiAgICBbJ+K4oicsICfiuKMnXSwgWyfiuKQnLCAn4rilJ10sXG4gICAgWycqKl8nLCAnXyoqJ10gLy8gVE9ETzogRG9lcyB0aGlzIG1hcmtkb3duIGJlbG9uZyBoZXJlPz8/XG5dO1xuZXhwb3J0IGNvbnN0IEJBRF9DSEFSQUNURVJfQ09NQklOQVRJT05TID0gW1xuICAgICdcXFxcW1xcXFxbJywgJ1xcXFxdXFxcXF0nLCAvLyBUaGVzZSB3ZXJlIGludHJvZHVjZWQgYnkgYSB0QyBDcmVhdGUgYnVnIChOT1RFOiBcXFsgb3IgXFxdIGlzIHF1aXRlIGxlZ2FsKVxuICAgICddIChodHRwJywgJ10gKC4nLCAvLyBCYWQgbWFya2Rvd24gbGlua3MgKHdpdGggYSBzcGFjZSBiZXR3ZWVuIHRoZSBwYXJ0cylcbl07XG5leHBvcnQgY29uc3QgTEVBRElOR19aRVJPX0NPTUJJTkFUSU9OUyA9IFtcbiAgICAnIDAnLCAnOjAnLCAnPGJyPjAnLCAn4oCcMCcsICfigJgwJyxcbl07XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1doaXRlc3BhY2UobXlTdHJpbmcpIHtcbiAgICAvLyBpbmNsdWRlcyB6ZXJvLXdpZHRoIHNwYWNlXG4gICAgaWYgKC9eW1xcc1xcdTIwMEJdKyQvLnRlc3QobXlTdHJpbmcpKSByZXR1cm4gdHJ1ZTtcbiAgICByZXR1cm4gZmFsc2U7XG59XG5cblxuZXhwb3J0IGZ1bmN0aW9uIGNvdW50T2NjdXJyZW5jZXMobWFpblN0cmluZywgc3ViU3RyaW5nLCBhbGxvd092ZXJsYXBwaW5nID0gZmFsc2UpIHtcbiAgICAvLyBBZGFwdGVkIGZyb20gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDAwOTc1Ni9ob3ctdG8tY291bnQtc3RyaW5nLW9jY3VycmVuY2UtaW4tc3RyaW5nXG5cbiAgICBtYWluU3RyaW5nICs9ICcnO1xuICAgIHN1YlN0cmluZyArPSAnJztcbiAgICBpZiAoc3ViU3RyaW5nLmxlbmd0aCA8PSAwKSByZXR1cm4gKG1haW5TdHJpbmcubGVuZ3RoICsgMSk7XG5cbiAgICBsZXQgbiA9IDAsXG4gICAgICAgIHBvcyA9IDAsXG4gICAgICAgIHN0ZXAgPSBhbGxvd092ZXJsYXBwaW5nID8gMSA6IHN1YlN0cmluZy5sZW5ndGg7XG5cbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICBwb3MgPSBtYWluU3RyaW5nLmluZGV4T2Yoc3ViU3RyaW5nLCBwb3MpO1xuICAgICAgICBpZiAocG9zID49IDApIHtcbiAgICAgICAgICAgICsrbjtcbiAgICAgICAgICAgIHBvcyArPSBzdGVwO1xuICAgICAgICB9IGVsc2UgYnJlYWs7XG4gICAgfVxuICAgIHJldHVybiBuO1xufVxuLy8gZW5kIG9mIGNvdW50T2NjdXJyZW5jZXMgZnVuY3Rpb25cblxuXG5leHBvcnQgZnVuY3Rpb24gb3VyUmVwbGFjZUFsbChnaXZlblN0cmluZywgZmluZFN0cmluZywgcmVwbGFjZVN0cmluZykge1xuICAgIGxldCByZXN1bHRTdHJpbmcgPSBnaXZlblN0cmluZztcbiAgICB3aGlsZSAocmVzdWx0U3RyaW5nLmluZGV4T2YoZmluZFN0cmluZykgPj0gMClcbiAgICAgICAgcmVzdWx0U3RyaW5nID0gcmVzdWx0U3RyaW5nLnJlcGxhY2UoZmluZFN0cmluZywgcmVwbGFjZVN0cmluZyk7XG4gICAgcmV0dXJuIHJlc3VsdFN0cmluZztcbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gb3VyRGVsZXRlQWxsKGdpdmVuU3RyaW5nLCBmaW5kU3RyaW5nKSB7XG4gICAgbGV0IHJlc3VsdFN0cmluZyA9IGdpdmVuU3RyaW5nO1xuICAgIHdoaWxlIChyZXN1bHRTdHJpbmcuaW5kZXhPZihmaW5kU3RyaW5nKSA+PSAwKVxuICAgICAgICByZXN1bHRTdHJpbmcgPSByZXN1bHRTdHJpbmcucmVwbGFjZShmaW5kU3RyaW5nLCAnJyk7XG4gICAgcmV0dXJuIHJlc3VsdFN0cmluZztcbn1cbiJdfQ==