"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _core = require("@material-ui/core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ColumnFilter(_ref) {
  var filterList = _ref.filterList,
      onChange = _ref.onChange,
      filterIndex = _ref.filterIndex,
      column = _ref.column,
      optionValues = _ref.optionValues;

  var handleChange = function handleChange(event) {
    var value = event.target.value;
    if (value) onChange(value, filterIndex, column.name);
  };

  return /*#__PURE__*/_react["default"].createElement(_core.FormControl, {
    key: filterIndex,
    fullWidth: true
  }, /*#__PURE__*/_react["default"].createElement(_core.InputLabel, {
    htmlFor: column.name
  }, column.label), /*#__PURE__*/_react["default"].createElement(_core.Select, {
    fullWidth: true,
    value: filterList[filterIndex].length ? filterList[filterIndex].toString() : 'All',
    name: column.name,
    onChange: handleChange,
    input: /*#__PURE__*/_react["default"].createElement(_core.Input, {
      name: column.name,
      id: column.name
    })
  }, /*#__PURE__*/_react["default"].createElement(_core.MenuItem, {
    value: 'All',
    key: 0
  }, 'All'), optionValues.map(function (filterValue, _filterIndex) {
    return /*#__PURE__*/_react["default"].createElement(_core.MenuItem, {
      value: filterValue,
      key: _filterIndex + 1
    }, filterValue != null ? filterValue.toString() : '');
  })));
}

;
var _default = ColumnFilter;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2NvbHVtbi1maWx0ZXIvQ29sdW1uRmlsdGVyLmpzIl0sIm5hbWVzIjpbIkNvbHVtbkZpbHRlciIsImZpbHRlckxpc3QiLCJvbkNoYW5nZSIsImZpbHRlckluZGV4IiwiY29sdW1uIiwib3B0aW9uVmFsdWVzIiwiaGFuZGxlQ2hhbmdlIiwiZXZlbnQiLCJ2YWx1ZSIsInRhcmdldCIsIm5hbWUiLCJsYWJlbCIsImxlbmd0aCIsInRvU3RyaW5nIiwibWFwIiwiZmlsdGVyVmFsdWUiLCJfZmlsdGVySW5kZXgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQVFBLFNBQVNBLFlBQVQsT0FNRztBQUFBLE1BTERDLFVBS0MsUUFMREEsVUFLQztBQUFBLE1BSkRDLFFBSUMsUUFKREEsUUFJQztBQUFBLE1BSERDLFdBR0MsUUFIREEsV0FHQztBQUFBLE1BRkRDLE1BRUMsUUFGREEsTUFFQztBQUFBLE1BRERDLFlBQ0MsUUFEREEsWUFDQzs7QUFDRCxNQUFNQyxZQUFZLEdBQUcsU0FBZkEsWUFBZSxDQUFDQyxLQUFELEVBQVc7QUFDOUIsUUFBTUMsS0FBSyxHQUFHRCxLQUFLLENBQUNFLE1BQU4sQ0FBYUQsS0FBM0I7QUFDQSxRQUFJQSxLQUFKLEVBQVdOLFFBQVEsQ0FBQ00sS0FBRCxFQUFRTCxXQUFSLEVBQXFCQyxNQUFNLENBQUNNLElBQTVCLENBQVI7QUFDWixHQUhEOztBQUtBLHNCQUNFLGdDQUFDLGlCQUFEO0FBQWEsSUFBQSxHQUFHLEVBQUVQLFdBQWxCO0FBQStCLElBQUEsU0FBUztBQUF4QyxrQkFDRSxnQ0FBQyxnQkFBRDtBQUFZLElBQUEsT0FBTyxFQUFFQyxNQUFNLENBQUNNO0FBQTVCLEtBQW1DTixNQUFNLENBQUNPLEtBQTFDLENBREYsZUFFRSxnQ0FBQyxZQUFEO0FBQ0UsSUFBQSxTQUFTLE1BRFg7QUFFRSxJQUFBLEtBQUssRUFBRVYsVUFBVSxDQUFDRSxXQUFELENBQVYsQ0FBd0JTLE1BQXhCLEdBQWlDWCxVQUFVLENBQUNFLFdBQUQsQ0FBVixDQUF3QlUsUUFBeEIsRUFBakMsR0FBc0UsS0FGL0U7QUFHRSxJQUFBLElBQUksRUFBRVQsTUFBTSxDQUFDTSxJQUhmO0FBSUUsSUFBQSxRQUFRLEVBQUVKLFlBSlo7QUFLRSxJQUFBLEtBQUssZUFBRSxnQ0FBQyxXQUFEO0FBQU8sTUFBQSxJQUFJLEVBQUVGLE1BQU0sQ0FBQ00sSUFBcEI7QUFBMEIsTUFBQSxFQUFFLEVBQUVOLE1BQU0sQ0FBQ007QUFBckM7QUFMVCxrQkFNRSxnQ0FBQyxjQUFEO0FBQVUsSUFBQSxLQUFLLEVBQUUsS0FBakI7QUFBd0IsSUFBQSxHQUFHLEVBQUU7QUFBN0IsS0FDRyxLQURILENBTkYsRUFTR0wsWUFBWSxDQUFDUyxHQUFiLENBQWlCLFVBQUNDLFdBQUQsRUFBY0MsWUFBZDtBQUFBLHdCQUNoQixnQ0FBQyxjQUFEO0FBQVUsTUFBQSxLQUFLLEVBQUVELFdBQWpCO0FBQThCLE1BQUEsR0FBRyxFQUFFQyxZQUFZLEdBQUc7QUFBbEQsT0FDR0QsV0FBVyxJQUFJLElBQWYsR0FBc0JBLFdBQVcsQ0FBQ0YsUUFBWixFQUF0QixHQUErQyxFQURsRCxDQURnQjtBQUFBLEdBQWpCLENBVEgsQ0FGRixDQURGO0FBb0JEOztBQUFBO2VBRWNiLFkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQge1xyXG4gIEZvcm1Db250cm9sLFxyXG4gIElucHV0TGFiZWwsXHJcbiAgU2VsZWN0LFxyXG4gIE1lbnVJdGVtLFxyXG4gIElucHV0LFxyXG59IGZyb20gJ0BtYXRlcmlhbC11aS9jb3JlJztcclxuXHJcbmZ1bmN0aW9uIENvbHVtbkZpbHRlcih7XHJcbiAgZmlsdGVyTGlzdCxcclxuICBvbkNoYW5nZSxcclxuICBmaWx0ZXJJbmRleCxcclxuICBjb2x1bW4sXHJcbiAgb3B0aW9uVmFsdWVzLFxyXG59KSB7XHJcbiAgY29uc3QgaGFuZGxlQ2hhbmdlID0gKGV2ZW50KSA9PiB7XHJcbiAgICBjb25zdCB2YWx1ZSA9IGV2ZW50LnRhcmdldC52YWx1ZTtcclxuICAgIGlmICh2YWx1ZSkgb25DaGFuZ2UodmFsdWUsIGZpbHRlckluZGV4LCBjb2x1bW4ubmFtZSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxGb3JtQ29udHJvbCBrZXk9e2ZpbHRlckluZGV4fSBmdWxsV2lkdGg+XHJcbiAgICAgIDxJbnB1dExhYmVsIGh0bWxGb3I9e2NvbHVtbi5uYW1lfT57Y29sdW1uLmxhYmVsfTwvSW5wdXRMYWJlbD5cclxuICAgICAgPFNlbGVjdFxyXG4gICAgICAgIGZ1bGxXaWR0aFxyXG4gICAgICAgIHZhbHVlPXtmaWx0ZXJMaXN0W2ZpbHRlckluZGV4XS5sZW5ndGggPyBmaWx0ZXJMaXN0W2ZpbHRlckluZGV4XS50b1N0cmluZygpIDogJ0FsbCd9XHJcbiAgICAgICAgbmFtZT17Y29sdW1uLm5hbWV9XHJcbiAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX1cclxuICAgICAgICBpbnB1dD17PElucHV0IG5hbWU9e2NvbHVtbi5uYW1lfSBpZD17Y29sdW1uLm5hbWV9IC8+fT5cclxuICAgICAgICA8TWVudUl0ZW0gdmFsdWU9eydBbGwnfSBrZXk9ezB9PlxyXG4gICAgICAgICAgeydBbGwnfVxyXG4gICAgICAgIDwvTWVudUl0ZW0+XHJcbiAgICAgICAge29wdGlvblZhbHVlcy5tYXAoKGZpbHRlclZhbHVlLCBfZmlsdGVySW5kZXgpID0+IChcclxuICAgICAgICAgIDxNZW51SXRlbSB2YWx1ZT17ZmlsdGVyVmFsdWV9IGtleT17X2ZpbHRlckluZGV4ICsgMX0+XHJcbiAgICAgICAgICAgIHtmaWx0ZXJWYWx1ZSAhPSBudWxsID8gZmlsdGVyVmFsdWUudG9TdHJpbmcoKSA6ICcnfVxyXG4gICAgICAgICAgPC9NZW51SXRlbT5cclxuICAgICAgICApKX1cclxuICAgICAgPC9TZWxlY3Q+XHJcbiAgICA8L0Zvcm1Db250cm9sPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb2x1bW5GaWx0ZXI7Il19