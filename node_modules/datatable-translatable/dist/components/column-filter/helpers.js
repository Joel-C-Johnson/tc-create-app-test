"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.filterDisplay = exports.filterLogic = void 0;

var _ = _interopRequireDefault(require("./"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var filterLogic = function filterLogic(_ref) {
  var value = _ref.value,
      filters = _ref.filters,
      delimiters = _ref.delimiters;

  var _split = (value || '').split(delimiters.cell),
      _split2 = _slicedToArray(_split, 2),
      source = _split2[0],
      target = _split2[1];

  var include = true;

  if (filters.length) {
    var matchAll = filters.includes('All');
    var matchSource = filters.includes(source);
    var matchTarget = filters.includes(target);
    include = matchAll || matchSource || matchTarget;
  }

  return !include;
};

exports.filterLogic = filterLogic;

var filterDisplay = function filterDisplay(_ref2) {
  var filterList = _ref2.filterList,
      onChange = _ref2.onChange,
      column = _ref2.column,
      offset = _ref2.offset,
      columnsFilterOptions = _ref2.columnsFilterOptions,
      filterIndex = _ref2.filterIndex;
  var optionValues = columnsFilterOptions[filterIndex - offset] || [];
  return (0, _["default"])({
    filterList: filterList,
    onChange: onChange,
    filterIndex: filterIndex,
    column: column,
    optionValues: optionValues
  });
};

exports.filterDisplay = filterDisplay;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2NvbHVtbi1maWx0ZXIvaGVscGVycy5qcyJdLCJuYW1lcyI6WyJmaWx0ZXJMb2dpYyIsInZhbHVlIiwiZmlsdGVycyIsImRlbGltaXRlcnMiLCJzcGxpdCIsImNlbGwiLCJzb3VyY2UiLCJ0YXJnZXQiLCJpbmNsdWRlIiwibGVuZ3RoIiwibWF0Y2hBbGwiLCJpbmNsdWRlcyIsIm1hdGNoU291cmNlIiwibWF0Y2hUYXJnZXQiLCJmaWx0ZXJEaXNwbGF5IiwiZmlsdGVyTGlzdCIsIm9uQ2hhbmdlIiwiY29sdW1uIiwib2Zmc2V0IiwiY29sdW1uc0ZpbHRlck9wdGlvbnMiLCJmaWx0ZXJJbmRleCIsIm9wdGlvblZhbHVlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRU8sSUFBTUEsV0FBVyxHQUFHLFNBQWRBLFdBQWMsT0FFckI7QUFBQSxNQURKQyxLQUNJLFFBREpBLEtBQ0k7QUFBQSxNQURHQyxPQUNILFFBREdBLE9BQ0g7QUFBQSxNQURZQyxVQUNaLFFBRFlBLFVBQ1o7O0FBQUEsZUFDcUIsQ0FBQ0YsS0FBSyxJQUFJLEVBQVYsRUFBY0csS0FBZCxDQUFvQkQsVUFBVSxDQUFDRSxJQUEvQixDQURyQjtBQUFBO0FBQUEsTUFDR0MsTUFESDtBQUFBLE1BQ1dDLE1BRFg7O0FBRUosTUFBSUMsT0FBTyxHQUFHLElBQWQ7O0FBRUEsTUFBSU4sT0FBTyxDQUFDTyxNQUFaLEVBQW9CO0FBQ2xCLFFBQU1DLFFBQVEsR0FBR1IsT0FBTyxDQUFDUyxRQUFSLENBQWlCLEtBQWpCLENBQWpCO0FBQ0EsUUFBTUMsV0FBVyxHQUFHVixPQUFPLENBQUNTLFFBQVIsQ0FBaUJMLE1BQWpCLENBQXBCO0FBQ0EsUUFBTU8sV0FBVyxHQUFHWCxPQUFPLENBQUNTLFFBQVIsQ0FBaUJKLE1BQWpCLENBQXBCO0FBQ0FDLElBQUFBLE9BQU8sR0FBSUUsUUFBUSxJQUFJRSxXQUFaLElBQTJCQyxXQUF0QztBQUNEOztBQUNELFNBQU8sQ0FBQ0wsT0FBUjtBQUNELENBYk07Ozs7QUFlQSxJQUFNTSxhQUFhLEdBQUcsU0FBaEJBLGFBQWdCLFFBT3ZCO0FBQUEsTUFOSkMsVUFNSSxTQU5KQSxVQU1JO0FBQUEsTUFMSkMsUUFLSSxTQUxKQSxRQUtJO0FBQUEsTUFKSkMsTUFJSSxTQUpKQSxNQUlJO0FBQUEsTUFISkMsTUFHSSxTQUhKQSxNQUdJO0FBQUEsTUFGSkMsb0JBRUksU0FGSkEsb0JBRUk7QUFBQSxNQURKQyxXQUNJLFNBREpBLFdBQ0k7QUFDSixNQUFNQyxZQUFZLEdBQUdGLG9CQUFvQixDQUFDQyxXQUFXLEdBQUdGLE1BQWYsQ0FBcEIsSUFBOEMsRUFBbkU7QUFDQSxTQUFPLGtCQUFhO0FBQ2xCSCxJQUFBQSxVQUFVLEVBQVZBLFVBRGtCO0FBQ05DLElBQUFBLFFBQVEsRUFBUkEsUUFETTtBQUNJSSxJQUFBQSxXQUFXLEVBQVhBLFdBREo7QUFDaUJILElBQUFBLE1BQU0sRUFBTkEsTUFEakI7QUFDeUJJLElBQUFBLFlBQVksRUFBWkE7QUFEekIsR0FBYixDQUFQO0FBR0QsQ0FaTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb2x1bW5GaWx0ZXIgZnJvbSAnLi8nO1xyXG5cclxuZXhwb3J0IGNvbnN0IGZpbHRlckxvZ2ljID0gKHtcclxuICB2YWx1ZSwgZmlsdGVycywgZGVsaW1pdGVycyxcclxufSkgPT4ge1xyXG4gIGNvbnN0IFtzb3VyY2UsIHRhcmdldF0gPSAodmFsdWUgfHwgJycpLnNwbGl0KGRlbGltaXRlcnMuY2VsbCk7XHJcbiAgbGV0IGluY2x1ZGUgPSB0cnVlO1xyXG5cclxuICBpZiAoZmlsdGVycy5sZW5ndGgpIHtcclxuICAgIGNvbnN0IG1hdGNoQWxsID0gZmlsdGVycy5pbmNsdWRlcygnQWxsJyk7XHJcbiAgICBjb25zdCBtYXRjaFNvdXJjZSA9IGZpbHRlcnMuaW5jbHVkZXMoc291cmNlKTtcclxuICAgIGNvbnN0IG1hdGNoVGFyZ2V0ID0gZmlsdGVycy5pbmNsdWRlcyh0YXJnZXQpO1xyXG4gICAgaW5jbHVkZSA9IChtYXRjaEFsbCB8fCBtYXRjaFNvdXJjZSB8fCBtYXRjaFRhcmdldCk7XHJcbiAgfVxyXG4gIHJldHVybiAhaW5jbHVkZTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBmaWx0ZXJEaXNwbGF5ID0gKHtcclxuICBmaWx0ZXJMaXN0LFxyXG4gIG9uQ2hhbmdlLFxyXG4gIGNvbHVtbixcclxuICBvZmZzZXQsXHJcbiAgY29sdW1uc0ZpbHRlck9wdGlvbnMsXHJcbiAgZmlsdGVySW5kZXgsXHJcbn0pID0+IHtcclxuICBjb25zdCBvcHRpb25WYWx1ZXMgPSBjb2x1bW5zRmlsdGVyT3B0aW9uc1tmaWx0ZXJJbmRleCAtIG9mZnNldF0gfHwgW107XHJcbiAgcmV0dXJuIENvbHVtbkZpbHRlcih7XHJcbiAgICBmaWx0ZXJMaXN0LCBvbkNoYW5nZSwgZmlsdGVySW5kZXgsIGNvbHVtbiwgb3B0aW9uVmFsdWVzLFxyXG4gIH0pO1xyXG59OyJdfQ==