"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _core = require("@material-ui/core");

var _icons = require("@material-ui/icons");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function Toolbar(_ref) {
  var preview = _ref.preview,
      onPreview = _ref.onPreview,
      changed = _ref.changed,
      onSave = _ref.onSave,
      onValidate = _ref.onValidate;
  var classes = useStyles();
  var saveDisabled = !changed;
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, onValidate && /*#__PURE__*/_react["default"].createElement(_core.Tooltip, {
    title: "Validate"
  }, /*#__PURE__*/_react["default"].createElement(_core.IconButton, {
    className: classes.iconButton,
    onClick: onValidate,
    "aria-label": "Validate"
  }, /*#__PURE__*/_react["default"].createElement(_icons.PlaylistAddCheck, null))), /*#__PURE__*/_react["default"].createElement(_core.Tooltip, {
    title: "Preview"
  }, /*#__PURE__*/_react["default"].createElement(_core.IconButton, {
    className: classes.iconButton,
    onClick: onPreview,
    "aria-label": "Preview"
  }, preview ? /*#__PURE__*/_react["default"].createElement(_icons.PageviewOutlined, null) : /*#__PURE__*/_react["default"].createElement(_icons.Pageview, null))), /*#__PURE__*/_react["default"].createElement(_core.Tooltip, {
    title: "Save"
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: classes.inlineDiv
  }, /*#__PURE__*/_react["default"].createElement(_core.IconButton, {
    disabled: saveDisabled,
    className: classes.iconButton,
    onClick: onSave,
    "aria-label": "Save"
  }, changed ? /*#__PURE__*/_react["default"].createElement(_icons.Save, null) : /*#__PURE__*/_react["default"].createElement(_icons.SaveOutlined, null)))));
}

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    iconButton: {},
    inlineDiv: {
      display: 'inline-block'
    }
  };
});
Toolbar.propTypes = {
  /** Current state of preview toggle */
  preview: _propTypes["default"].bool,

  /** Handle click of Preview Button  */
  onPreview: _propTypes["default"].func.isRequired,

  /** Has the file changed for Save to be enabled */
  changed: _propTypes["default"].bool,

  /** Handle click of Save Button */
  onSave: _propTypes["default"].func.isRequired
};
var _default = Toolbar;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3Rvb2xiYXIvVG9vbGJhci5qcyJdLCJuYW1lcyI6WyJUb29sYmFyIiwicHJldmlldyIsIm9uUHJldmlldyIsImNoYW5nZWQiLCJvblNhdmUiLCJvblZhbGlkYXRlIiwiY2xhc3NlcyIsInVzZVN0eWxlcyIsInNhdmVEaXNhYmxlZCIsImljb25CdXR0b24iLCJpbmxpbmVEaXYiLCJ0aGVtZSIsImRpc3BsYXkiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJib29sIiwiZnVuYyIsImlzUmVxdWlyZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFJQTs7OztBQVFBLFNBQVNBLE9BQVQsT0FNRztBQUFBLE1BTERDLE9BS0MsUUFMREEsT0FLQztBQUFBLE1BSkRDLFNBSUMsUUFKREEsU0FJQztBQUFBLE1BSERDLE9BR0MsUUFIREEsT0FHQztBQUFBLE1BRkRDLE1BRUMsUUFGREEsTUFFQztBQUFBLE1BRERDLFVBQ0MsUUFEREEsVUFDQztBQUNELE1BQU1DLE9BQU8sR0FBR0MsU0FBUyxFQUF6QjtBQUNBLE1BQU1DLFlBQVksR0FBRyxDQUFDTCxPQUF0QjtBQUVBLHNCQUNFLGtFQUVJRSxVQUFVLGlCQUNWLGdDQUFDLGFBQUQ7QUFBUyxJQUFBLEtBQUssRUFBQztBQUFmLGtCQUNBLGdDQUFDLGdCQUFEO0FBQVksSUFBQSxTQUFTLEVBQUVDLE9BQU8sQ0FBQ0csVUFBL0I7QUFBMkMsSUFBQSxPQUFPLEVBQUVKLFVBQXBEO0FBQWdFLGtCQUFXO0FBQTNFLGtCQUNFLGdDQUFDLHVCQUFELE9BREYsQ0FEQSxDQUhKLGVBU0UsZ0NBQUMsYUFBRDtBQUFTLElBQUEsS0FBSyxFQUFDO0FBQWYsa0JBQ0UsZ0NBQUMsZ0JBQUQ7QUFBWSxJQUFBLFNBQVMsRUFBRUMsT0FBTyxDQUFDRyxVQUEvQjtBQUEyQyxJQUFBLE9BQU8sRUFBRVAsU0FBcEQ7QUFBK0Qsa0JBQVc7QUFBMUUsS0FDR0QsT0FBTyxnQkFBRyxnQ0FBQyx1QkFBRCxPQUFILGdCQUEwQixnQ0FBQyxlQUFELE9BRHBDLENBREYsQ0FURixlQWNFLGdDQUFDLGFBQUQ7QUFBUyxJQUFBLEtBQUssRUFBQztBQUFmLGtCQUNFO0FBQUssSUFBQSxTQUFTLEVBQUVLLE9BQU8sQ0FBQ0k7QUFBeEIsa0JBQ0UsZ0NBQUMsZ0JBQUQ7QUFBWSxJQUFBLFFBQVEsRUFBRUYsWUFBdEI7QUFBb0MsSUFBQSxTQUFTLEVBQUVGLE9BQU8sQ0FBQ0csVUFBdkQ7QUFBbUUsSUFBQSxPQUFPLEVBQUVMLE1BQTVFO0FBQW9GLGtCQUFXO0FBQS9GLEtBQ0dELE9BQU8sZ0JBQUcsZ0NBQUMsV0FBRCxPQUFILGdCQUFjLGdDQUFDLG1CQUFELE9BRHhCLENBREYsQ0FERixDQWRGLENBREY7QUF3QkQ7O0FBRUQsSUFBTUksU0FBUyxHQUFHLHdCQUFXLFVBQUFJLEtBQUs7QUFBQSxTQUFLO0FBQ3JDRixJQUFBQSxVQUFVLEVBQUUsRUFEeUI7QUFFckNDLElBQUFBLFNBQVMsRUFBRTtBQUFFRSxNQUFBQSxPQUFPLEVBQUU7QUFBWDtBQUYwQixHQUFMO0FBQUEsQ0FBaEIsQ0FBbEI7QUFLQVosT0FBTyxDQUFDYSxTQUFSLEdBQW9CO0FBQ2xCO0FBQ0FaLEVBQUFBLE9BQU8sRUFBRWEsc0JBQVVDLElBRkQ7O0FBR2xCO0FBQ0FiLEVBQUFBLFNBQVMsRUFBRVksc0JBQVVFLElBQVYsQ0FBZUMsVUFKUjs7QUFLbEI7QUFDQWQsRUFBQUEsT0FBTyxFQUFFVyxzQkFBVUMsSUFORDs7QUFPbEI7QUFDQVgsRUFBQUEsTUFBTSxFQUFFVSxzQkFBVUUsSUFBVixDQUFlQztBQVJMLENBQXBCO2VBV2VqQixPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gJ0BtYXRlcmlhbC11aS9jb3JlL3N0eWxlcyc7XHJcbmltcG9ydCB7XHJcbiAgSWNvbkJ1dHRvbixcclxuICBUb29sdGlwLFxyXG59IGZyb20gJ0BtYXRlcmlhbC11aS9jb3JlJztcclxuaW1wb3J0IHtcclxuICBQYWdldmlldyxcclxuICBQYWdldmlld091dGxpbmVkLFxyXG4gIFNhdmUsXHJcbiAgU2F2ZU91dGxpbmVkLFxyXG4gIFBsYXlsaXN0QWRkQ2hlY2ssXHJcbn0gZnJvbSAnQG1hdGVyaWFsLXVpL2ljb25zJztcclxuXHJcbmZ1bmN0aW9uIFRvb2xiYXIoe1xyXG4gIHByZXZpZXcsXHJcbiAgb25QcmV2aWV3LFxyXG4gIGNoYW5nZWQsXHJcbiAgb25TYXZlLFxyXG4gIG9uVmFsaWRhdGUsXHJcbn0pIHtcclxuICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKCk7XHJcbiAgY29uc3Qgc2F2ZURpc2FibGVkID0gIWNoYW5nZWQ7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICB7XHJcbiAgICAgICAgb25WYWxpZGF0ZSAmJlxyXG4gICAgICAgIDxUb29sdGlwIHRpdGxlPVwiVmFsaWRhdGVcIj5cclxuICAgICAgICA8SWNvbkJ1dHRvbiBjbGFzc05hbWU9e2NsYXNzZXMuaWNvbkJ1dHRvbn0gb25DbGljaz17b25WYWxpZGF0ZX0gYXJpYS1sYWJlbD1cIlZhbGlkYXRlXCI+XHJcbiAgICAgICAgICA8UGxheWxpc3RBZGRDaGVjayAvPlxyXG4gICAgICAgIDwvSWNvbkJ1dHRvbj5cclxuICAgICAgPC9Ub29sdGlwPlxyXG4gICAgICB9XHJcbiAgICAgIDxUb29sdGlwIHRpdGxlPVwiUHJldmlld1wiPlxyXG4gICAgICAgIDxJY29uQnV0dG9uIGNsYXNzTmFtZT17Y2xhc3Nlcy5pY29uQnV0dG9ufSBvbkNsaWNrPXtvblByZXZpZXd9IGFyaWEtbGFiZWw9XCJQcmV2aWV3XCIgPlxyXG4gICAgICAgICAge3ByZXZpZXcgPyA8UGFnZXZpZXdPdXRsaW5lZCAvPiA6IDxQYWdldmlldyAvPn1cclxuICAgICAgICA8L0ljb25CdXR0b24+XHJcbiAgICAgIDwvVG9vbHRpcD5cclxuICAgICAgPFRvb2x0aXAgdGl0bGU9XCJTYXZlXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzZXMuaW5saW5lRGl2fT5cclxuICAgICAgICAgIDxJY29uQnV0dG9uIGRpc2FibGVkPXtzYXZlRGlzYWJsZWR9IGNsYXNzTmFtZT17Y2xhc3Nlcy5pY29uQnV0dG9ufSBvbkNsaWNrPXtvblNhdmV9IGFyaWEtbGFiZWw9XCJTYXZlXCI+XHJcbiAgICAgICAgICAgIHtjaGFuZ2VkID8gPFNhdmUgLz4gOiA8U2F2ZU91dGxpbmVkIC8+fVxyXG4gICAgICAgICAgPC9JY29uQnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L1Rvb2x0aXA+XHJcbiAgICA8Lz5cclxuICApO1xyXG59XHJcblxyXG5jb25zdCB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKHRoZW1lID0+ICh7XHJcbiAgaWNvbkJ1dHRvbjoge30sXHJcbiAgaW5saW5lRGl2OiB7IGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snIH0sXHJcbn0pKTtcclxuXHJcblRvb2xiYXIucHJvcFR5cGVzID0ge1xyXG4gIC8qKiBDdXJyZW50IHN0YXRlIG9mIHByZXZpZXcgdG9nZ2xlICovXHJcbiAgcHJldmlldzogUHJvcFR5cGVzLmJvb2wsXHJcbiAgLyoqIEhhbmRsZSBjbGljayBvZiBQcmV2aWV3IEJ1dHRvbiAgKi9cclxuICBvblByZXZpZXc6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXHJcbiAgLyoqIEhhcyB0aGUgZmlsZSBjaGFuZ2VkIGZvciBTYXZlIHRvIGJlIGVuYWJsZWQgKi9cclxuICBjaGFuZ2VkOiBQcm9wVHlwZXMuYm9vbCxcclxuICAvKiogSGFuZGxlIGNsaWNrIG9mIFNhdmUgQnV0dG9uICovXHJcbiAgb25TYXZlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVG9vbGJhcjtcclxuIl19