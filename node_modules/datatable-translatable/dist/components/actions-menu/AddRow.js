"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _lodash = _interopRequireDefault(require("lodash.isequal"));

var _styles = require("@material-ui/core/styles");

var _core = require("@material-ui/core");

require("@material-ui/icons");

var _datatable = require("../../core/datatable");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function AddRowMenu(_ref) {
  var rowData = _ref.rowData,
      rowIndex = _ref.rowIndex,
      columnNames = _ref.columnNames,
      rowGenerate = _ref.rowGenerate,
      rowAddBelow = _ref.rowAddBelow,
      button = _ref.button,
      generateRowId = _ref.generateRowId;

  var _useState = (0, _react.useState)(false),
      _useState2 = _slicedToArray(_useState, 2),
      open = _useState2[0],
      setOpen = _useState2[1];

  var _useState3 = (0, _react.useState)(),
      _useState4 = _slicedToArray(_useState3, 2),
      newRow = _useState4[0],
      setNewRow = _useState4[1];

  var classes = useStyles();

  var handleOpen = function handleOpen() {
    return setOpen(true);
  };

  var handleClose = function handleClose() {
    setOpen(false);
    setNewRow();
  };

  var handleRowAdd = function handleRowAdd() {
    rowAddBelow({
      rowIndex: rowIndex,
      rowData: newRow
    });
    handleClose();
    setTimeout(function () {
      var rowBelow = (0, _datatable.getRowElement)(generateRowId, rowData, 1);

      if (rowBelow) {
        var top = (0, _datatable.getOffset)(rowBelow).top - rowBelow.offsetHeight;
        document.documentElement.scrollTop = top - 20;
        document.body.scrollTop = top - 20;
      }
    }, 200);
  };

  var dialogComponent = /*#__PURE__*/_react["default"].createElement("div", null);

  if (open) {
    var newRowComponent = columnNames.map(function (name, i) {
      var text = '';

      if (!newRow) {
        var _newRow = rowGenerate({
          rowIndex: rowIndex
        });

        setNewRow(_newRow);
        return text;
      } else {
        text = /*#__PURE__*/_react["default"].createElement(_core.DialogContentText, {
          key: name + i
        }, /*#__PURE__*/_react["default"].createElement("strong", null, name, ":"), ' ' + newRow[i]);
      }

      return text;
    });
    dialogComponent = /*#__PURE__*/_react["default"].createElement(_core.Dialog, {
      open: open,
      onClose: handleClose,
      "aria-labelledby": "dialog-title",
      "aria-describedby": "dialog-description",
      classes: {
        paper: classes.paper
      }
    }, /*#__PURE__*/_react["default"].createElement(_core.DialogTitle, {
      id: "dialog-title"
    }, "Add Row"), /*#__PURE__*/_react["default"].createElement(_core.DialogContent, null, /*#__PURE__*/_react["default"].createElement(_core.Divider, null), /*#__PURE__*/_react["default"].createElement("br", null), newRowComponent), /*#__PURE__*/_react["default"].createElement(_core.DialogActions, null, /*#__PURE__*/_react["default"].createElement(_core.Button, {
      onClick: handleClose,
      color: "primary",
      autoFocus: true
    }, "Cancel"), /*#__PURE__*/_react["default"].createElement(_core.Button, {
      onClick: handleRowAdd,
      color: "secondary"
    }, "Add")));
  }

  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement("div", {
    onClick: handleOpen
  }, button), dialogComponent);
}

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    paper: {
      minWidth: '500px'
    }
  };
});
AddRowMenu.propTypes = {};

var _default = /*#__PURE__*/_react["default"].memo(AddRowMenu, function (prevProps, nextProps) {
  return prevProps.rowIndex === nextProps.rowIndex && (0, _lodash["default"])(prevProps.rowData, nextProps.rowData) && (0, _lodash["default"])(prevProps.columnNames, nextProps.columnNames);
});

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,