"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _core = require("@material-ui/core");

var _reactHeadroom = _interopRequireDefault(require("react-headroom"));

var _ = require("../");

var _Markdown = require("../Markdown.context");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    root: {}
  };
});

function Translatable(_ref) {
  var original = _ref.original,
      translation = _ref.translation,
      inputFilters = _ref.inputFilters,
      outputFilters = _ref.outputFilters,
      onTranslation = _ref.onTranslation,
      _ref$doPinToolbar = _ref.doPinToolbar,
      doPinToolbar = _ref$doPinToolbar === void 0 ? true : _ref$doPinToolbar,
      onContentIsDirty = _ref.onContentIsDirty;
  var classes = useStyles();

  var _useState = (0, _react.useState)(true),
      _useState2 = _slicedToArray(_useState, 2),
      preview = _useState2[0],
      setPreview = _useState2[1];

  var _useState3 = (0, _react.useState)(true),
      _useState4 = _slicedToArray(_useState3, 2),
      sectionable = _useState4[0],
      setSectionable = _useState4[1];

  var _useState5 = (0, _react.useState)(true),
      _useState6 = _slicedToArray(_useState5, 2),
      blockable = _useState6[0],
      setBlockable = _useState6[1];

  var _useState7 = (0, _react.useState)(translation),
      _useState8 = _slicedToArray(_useState7, 2),
      editedTranslation = _useState8[0],
      setEditedTranslation = _useState8[1];

  var _useContext = (0, _react.useContext)(_Markdown.MarkdownContext),
      markdownState = _useContext.state,
      markdownActions = _useContext.actions;

  (0, _react.useEffect)(function () {
    setEditedTranslation(translation);
  }, [translation]);
  var saveTranslation = (0, _react.useCallback)(function () {
    onTranslation(editedTranslation);

    if (markdownActions && markdownActions.setIsChanged) {
      markdownActions.setIsChanged(false);
    }
  }, [onTranslation, editedTranslation, markdownActions.setIsChanged]); // Push "isChanged," so app knows when SAVE button is enabled.
  // See also Translatable in markdown-translatable.

  (0, _react.useEffect)(function () {
    if (onContentIsDirty) {
      onContentIsDirty(markdownState.isChanged);
    }
  }, [markdownState.isChanged, onContentIsDirty]);
  var component = (0, _react.useMemo)(function () {
    var props = {
      original: original,
      translation: editedTranslation,
      onTranslation: setEditedTranslation,
      preview: preview,
      onPreview: setPreview,
      inputFilters: inputFilters,
      outputFilters: outputFilters,
      blockable: blockable
    };

    var _component;

    if (sectionable) {
      _component = /*#__PURE__*/_react.default.createElement(_.DocumentTranslatable, props);
    } else {
      var _props = _objectSpread(_objectSpread({}, props), {}, {
        expanded: true,
        onExpanded: function onExpanded() {}
      });

      _component = /*#__PURE__*/_react.default.createElement(_.SectionTranslatable, _props);
    }

    return _component;
  }, [original, editedTranslation, setEditedTranslation, inputFilters, outputFilters, sectionable, blockable, preview]);
  var changed = (0, _react.useMemo)(function () {
    return editedTranslation !== translation || markdownState.isChanged;
  }, [editedTranslation, translation, markdownState.isChanged]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.root
  }, /*#__PURE__*/_react.default.createElement(_reactHeadroom.default, {
    pinStart: 48,
    role: "toolbar",
    disable: !doPinToolbar
  }, /*#__PURE__*/_react.default.createElement(_core.Paper, null, /*#__PURE__*/_react.default.createElement(_.Actions, {
    sectionable: sectionable,
    onSectionable: setSectionable,
    blockable: blockable,
    onBlockable: setBlockable,
    preview: preview,
    onPreview: setPreview,
    changed: changed,
    onSave: saveTranslation
  }))), component);
}

;
Translatable.propTypes = {
  /** Original markdown for the editor. */
  original: _propTypes.default.string.isRequired,

  /** Translation markdown for the editor. */
  translation: _propTypes.default.string.isRequired,

  /** Function to propogate changes to the translation. */
  onTranslation: _propTypes.default.func.isRequired,

  /** Replace strings before rendering. */
  inputFilters: _propTypes.default.array,

  /** Replace strings after editing. */
  outputFilters: _propTypes.default.array
};
Translatable.defaultProps = {
  inputFilters: [],
  outputFilters: []
};
var _default = Translatable;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,