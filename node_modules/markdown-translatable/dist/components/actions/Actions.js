"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _core = require("@material-ui/core");

var _icons = require("@material-ui/icons");

var _localStrings = require("../../core/localStrings");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Actions(_ref) {
  var sectionable = _ref.sectionable,
      onSectionable = _ref.onSectionable,
      blockable = _ref.blockable,
      onBlockable = _ref.onBlockable,
      preview = _ref.preview,
      onPreview = _ref.onPreview,
      changed = _ref.changed,
      onSave = _ref.onSave;
  var classes = useStyles();

  var _onSave = (0, _react.useCallback)(onSave, [onSave]);

  var _onPreview = (0, _react.useCallback)(onPreview, [onPreview]);

  var _onSectionable = (0, _react.useCallback)(onSectionable, [onSectionable]);

  var _onBlockable = (0, _react.useCallback)(onBlockable, [onBlockable]);

  var togglePreview = (0, _react.useCallback)(function () {
    return _onPreview(!preview);
  }, [preview, _onPreview]);
  var toggleSectionable = (0, _react.useCallback)(function () {
    return _onSectionable(!sectionable);
  }, [sectionable, _onSectionable]);
  var toggleBlockable = (0, _react.useCallback)(function () {
    return _onBlockable(!blockable);
  }, [blockable, _onBlockable]);
  var saveIcon = (0, _react.useMemo)(function () {
    return changed ? /*#__PURE__*/_react.default.createElement(_icons.Save, null) : /*#__PURE__*/_react.default.createElement(_icons.SaveOutlined, null);
  }, [changed]);
  var previewIcon = (0, _react.useMemo)(function () {
    return !preview ? /*#__PURE__*/_react.default.createElement(_icons.Pageview, null) : /*#__PURE__*/_react.default.createElement(_icons.PageviewOutlined, null);
  }, [preview]);
  var sectionableIcon = (0, _react.useMemo)(function () {
    return sectionable ? /*#__PURE__*/_react.default.createElement(_icons.ViewStream, null) : /*#__PURE__*/_react.default.createElement(_icons.ViewStreamOutlined, null);
  }, [sectionable]);
  var blockableIcon = (0, _react.useMemo)(function () {
    return blockable ? /*#__PURE__*/_react.default.createElement(_icons.ShortText, null) : /*#__PURE__*/_react.default.createElement(_icons.Subject, null);
  }, [blockable]);
  var sectionsAction = (0, _react.useMemo)(function () {
    return /*#__PURE__*/_react.default.createElement(_core.Tooltip, {
      title: sectionable ? (0, _localStrings.localString)("Sections") : (0, _localStrings.localString)("NoSections"),
      arrow: true
    }, /*#__PURE__*/_react.default.createElement(_core.IconButton, {
      className: classes.action,
      "aria-label": "Sections",
      onClick: toggleSectionable
    }, sectionableIcon));
  }, [classes.action, sectionableIcon, toggleSectionable]);
  var blocksAction = (0, _react.useMemo)(function () {
    return /*#__PURE__*/_react.default.createElement(_core.Tooltip, {
      title: blockable ? (0, _localStrings.localString)("Blocks") : (0, _localStrings.localString)("NoBlocks"),
      arrow: true
    }, /*#__PURE__*/_react.default.createElement(_core.IconButton, {
      className: classes.action,
      "aria-label": "Blocks",
      onClick: toggleBlockable
    }, blockableIcon));
  }, [classes.action, blockableIcon, toggleBlockable]);
  var previewAction = (0, _react.useMemo)(function () {
    return /*#__PURE__*/_react.default.createElement(_core.Tooltip, {
      title: (0, _localStrings.localString)("Preview"),
      arrow: true
    }, /*#__PURE__*/_react.default.createElement(_core.IconButton, {
      className: classes.action,
      "aria-label": "Preview",
      onClick: togglePreview
    }, previewIcon));
  }, [classes.action, previewIcon, togglePreview]);
  var saveAction = (0, _react.useMemo)(function () {
    return /*#__PURE__*/_react.default.createElement(_core.Tooltip, {
      title: (0, _localStrings.localString)("Save"),
      arrow: true
    }, /*#__PURE__*/_react.default.createElement(_core.IconButton, {
      className: classes.action,
      "aria-label": "Save",
      disabled: !changed,
      onClick: _onSave
    }, saveIcon));
  }, [_onSave, changed, classes.action, saveIcon]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.actions
  }, sectionsAction, blocksAction, previewAction, saveAction);
}

;
Actions.propTypes = {
  /** Divide editor by segments */
  sectionable: _propTypes.default.bool,

  /** Function to propogate changes to sectionable. */
  onSectionable: _propTypes.default.func.isRequired,

  /** Divide segments by blocks */
  blockable: _propTypes.default.bool,

  /** Function to propogate changes to blockable. */
  onBlockable: _propTypes.default.func.isRequired,

  /** Preview HTML or RAW Markdown */
  preview: _propTypes.default.bool,

  /** Function to propogate changes to preview. */
  onPreview: _propTypes.default.func.isRequired,

  /** Enable/Disable save icon if changed. */
  changed: _propTypes.default.bool,

  /** Function to propogate changes to save. */
  onSave: _propTypes.default.func.isRequired
};
var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    actions: {
      textAlign: 'right',
      paddingRight: "".concat(theme.spacing(1.5), "px")
    },
    action: {
      marginLeft: "".concat(theme.spacing(1), "px")
    }
  };
});
var _default = Actions;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,